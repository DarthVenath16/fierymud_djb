head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2008.02.02.04.27.55;	author myc;	state Exp;
branches;
next	1.6;

1.6
date	2007.04.17.23.59.16;	author myc;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.13.02.32.10;	author jjl;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.21.03.57.30;	author rsd;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.11.01.37.49;	author mtp;	state Exp;
branches;
next	1.2;

1.2
date	99.09.05.07.00.39;	author jimmy;	state Exp;
branches;
next	1.1;

1.1
date	99.01.29.01.23.30;	author mud;	state Exp;
branches;
next	;


desc
@/*
** dg_olc.h: this header file is used in extending Oasis style OLC for
** dg-scripts onto a CircleMUD that already has dg-scripts (as released
** by Mark Heilpern on 1/1/98) implemented.
*/
#include "dg_scripts.h"


/* prototype exported functions from dg_olc.c */
void script_copy(void *dst, void *src, int type);
void script_save_to_disk(FILE *fp, void *item, int type);
void dg_olc_script_free(struct descriptor_data *d);
void dg_olc_script_copy(struct descriptor_data *d);
void dg_script_menu(struct descriptor_data *d);
int dg_script_edit_parse(struct descriptor_data *d, char *arg);

/* define the largest set of commands for as trigger */
#define MAX_CMD_LENGTH 16384 /* 16k should be plenty and then some */



#define NUM_TRIG_TYPE_FLAGS		13


/*
 * Submodes of TRIGEDIT connectedness.
 */
#define TRIGEDIT_MAIN_MENU              0
#define TRIGEDIT_TRIGTYPE               1
#define TRIGEDIT_CONFIRM_SAVESTRING	2
#define TRIGEDIT_NAME			3
#define TRIGEDIT_INTENDED		4
#define TRIGEDIT_TYPES			5
#define TRIGEDIT_COMMANDS		6
#define TRIGEDIT_NARG			7
#define TRIGEDIT_ARGUMENT		8



#define OLC_SCRIPT_EDIT		    82766
#define SCRIPT_MAIN_MENU		0
#define SCRIPT_NEW_TRIGGER		1
#define SCRIPT_DEL_TRIGGER		2


#define OLC_SCRIPT_EDIT_MODE(d)	((d)->olc->script_mode)	/* parse input mode */
#define OLC_SCRIPT(d)           ((d)->olc->script)	/* script editing   */
#define OLC_ITEM_TYPE(d)	((d)->olc->item_type)	/* mob/obj/room     */
@


1.7
log
@Increasing the number of trigger type flags to 20.
@
text
@/***************************************************************************
 * $Id: dg_olc.h,v 1.6 2007/04/17 23:59:16 myc Exp myc $
 ***************************************************************************/
/***************************************************************************
 *  File: dg_olc.h                                        Part of FieryMUD * 
 * Usage: This header file is used in extending Oasis style OLC for        *
 *        dg-scripts onto a CircleMUD that already has dg-scripts (as      *
 *        released by Mark Heilpern on 1/1/98) implemented.                *
 *                                                                         *
 *  All rights reserved.  See license.doc for complete information.        *
 *                                                                         *
 *  FieryMUD Copyright (C) 1998, 1999, 2000 by the Fiery Consortium        *
 ***************************************************************************/

#include "dg_scripts.h"

/* prototype exported functions from dg_olc.c */
void script_copy(void *dst, void *src, int type);
void script_save_to_disk(FILE *fp, void *item, int type);
void dg_olc_script_free(struct descriptor_data *d);
void dg_olc_script_copy(struct descriptor_data *d);
void dg_script_menu(struct descriptor_data *d);
int dg_script_edit_parse(struct descriptor_data *d, char *arg);

/* define the largest set of commands for as trigger */
#define MAX_CMD_LENGTH 16384 /* 16k should be plenty and then some */

#define NUM_TRIG_TYPE_FLAGS		20

/*
 * Submodes of TRIGEDIT connectedness.
 */
#define TRIGEDIT_MAIN_MENU              0
#define TRIGEDIT_TRIGTYPE               1
#define TRIGEDIT_CONFIRM_SAVESTRING	2
#define TRIGEDIT_NAME			3
#define TRIGEDIT_INTENDED		4
#define TRIGEDIT_TYPES			5
#define TRIGEDIT_COMMANDS		6
#define TRIGEDIT_NARG			7
#define TRIGEDIT_ARGUMENT		8

#define OLC_SCRIPT_EDIT		    82766
#define SCRIPT_MAIN_MENU		0
#define SCRIPT_NEW_TRIGGER		1
#define SCRIPT_DEL_TRIGGER		2

#define OLC_SCRIPT_EDIT_MODE(d)	((d)->olc->script_mode)	/* parse input mode */
#define OLC_SCRIPT(d)           ((d)->olc->script)	/* script editing   */
#define OLC_ITEM_TYPE(d)	((d)->olc->item_type)	/* mob/obj/room     */

/***************************************************************************
 * $Log: dg_olc.h,v $
 * Revision 1.6  2007/04/17 23:59:16  myc
 * New trigger type: Load.  It goes off any time a mobile is loaded, whether
 * it be god command, zone command, or trigger command.
 *
 * Revision 1.5  2002/09/13 02:32:10  jjl
 * Updated header comments
 *
 * Revision 1.4  2000/11/21 03:57:30  rsd
 * Altered the comment header to resemble standard Fiery code
 * and added the initial revision rlog message.
 *
 * Revision 1.3  2000/11/11 01:37:49  mtp
 * added ASK trigger
 *
 * Revision 1.2  1999/09/05 07:00:39  jimmy
 * Added RCS Log and Id strings to each source file
 *
 * Revision 1.1  1999/01/29 01:23:30  mud
 * Initial revision
 *
 ***************************************************************************/
@


1.6
log
@New trigger type: Load.  It goes off any time a mobile is loaded, whether
it be god command, zone command, or trigger command.
@
text
@d2 1
a2 1
 * $Id: dg_olc.h,v 1.5 2002/09/13 02:32:10 jjl Exp myc $
d28 1
a28 1
#define NUM_TRIG_TYPE_FLAGS		15
d54 4
@


1.5
log
@Updated header comments
@
text
@d2 1
a2 1
 * $Id: dg_olc.h,v 1.4 2000/11/21 03:57:30 rsd Exp $
d28 1
a28 1
#define NUM_TRIG_TYPE_FLAGS		14
d54 3
@


1.4
log
@Altered the comment header to resemble standard Fiery code
and added the initial revision rlog message.
@
text
@d1 3
a3 1
// $Id: dg_olc.h,v 1.3 2000/11/11 01:37:49 mtp Exp $
d52 16
a67 10
// $Log: dg_olc.h,v $
// Revision 1.3  2000/11/11 01:37:49  mtp
// added ASK trigger
//
// Revision 1.2  1999/09/05 07:00:39  jimmy
// Added RCS Log and Id strings to each source file
//
// Revision 1.1  1999/01/29 01:23:30  mud
// Initial revision
//
@


1.3
log
@added ASK trigger
@
text
@d1 12
a12 6
// $Id: dg_olc.h,v 1.2 1999/09/05 07:00:39 jimmy Exp $
/*
** dg_olc.h: this header file is used in extending Oasis style OLC for
** dg-scripts onto a CircleMUD that already has dg-scripts (as released
** by Mark Heilpern on 1/1/98) implemented.
*/
a14 1

a25 2


a27 1

a40 2


a45 1

d49 1
d51 3
d56 3
@


1.2
log
@Added RCS Log and Id strings to each source file
@
text
@d1 1
a1 1
// $Id$
d23 1
a23 1
#define NUM_TRIG_TYPE_FLAGS		13
d50 4
a53 1
// $Log$
@


1.1
log
@Initial revision
@
text
@d1 1
d50 1
@
