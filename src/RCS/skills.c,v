head	1.69;
access;
symbols;
locks; strict;
comment	@ * @;


1.69
date	2011.08.06.15.22.52;	author rsd;	state Exp;
branches;
next	1.68;

1.68
date	2010.06.05.14.56.27;	author mud;	state Exp;
branches;
next	1.67;

1.67
date	2009.08.02.20.20.27;	author myc;	state Exp;
branches;
next	1.66;

1.66
date	2009.07.18.01.17.23;	author myc;	state Exp;
branches;
next	1.65;

1.65
date	2009.06.20.23.14.13;	author myc;	state Exp;
branches;
next	1.64;

1.64
date	2009.03.21.19.11.37;	author myc;	state Exp;
branches;
next	1.63;

1.63
date	2009.03.21.06.33.36;	author jps;	state Exp;
branches;
next	1.62;

1.62
date	2009.03.21.06.20.43;	author jps;	state Exp;
branches;
next	1.61;

1.61
date	2009.03.20.16.06.04;	author jps;	state Exp;
branches;
next	1.60;

1.60
date	2009.03.20.15.12.04;	author jps;	state Exp;
branches;
next	1.59;

1.59
date	2009.03.20.06.15.17;	author myc;	state Exp;
branches;
next	1.58;

1.58
date	2009.03.17.08.59.25;	author jps;	state Exp;
branches;
next	1.57;

1.57
date	2009.03.16.09.44.13;	author jps;	state Exp;
branches;
next	1.56;

1.56
date	2009.03.09.16.57.47;	author myc;	state Exp;
branches;
next	1.55;

1.55
date	2009.03.08.23.34.14;	author jps;	state Exp;
branches;
next	1.54;

1.54
date	2009.03.08.21.43.27;	author jps;	state Exp;
branches;
next	1.53;

1.53
date	2009.03.04.05.14.16;	author myc;	state Exp;
branches;
next	1.52;

1.52
date	2009.01.16.23.36.34;	author myc;	state Exp;
branches;
next	1.51;

1.51
date	2008.09.20.08.02.27;	author jps;	state Exp;
branches;
next	1.50;

1.50
date	2008.09.12.20.16.36;	author jps;	state Exp;
branches;
next	1.49;

1.49
date	2008.09.11.02.50.02;	author jps;	state Exp;
branches;
next	1.48;

1.48
date	2008.09.01.18.29.38;	author jps;	state Exp;
branches;
next	1.47;

1.47
date	2008.09.01.07.31.31;	author jps;	state Exp;
branches;
next	1.46;

1.46
date	2008.08.25.00.20.33;	author myc;	state Exp;
branches;
next	1.45;

1.45
date	2008.08.24.03.15.57;	author myc;	state Exp;
branches;
next	1.44;

1.44
date	2008.08.20.05.03.13;	author jps;	state Exp;
branches;
next	1.43;

1.43
date	2008.08.10.19.33.58;	author jps;	state Exp;
branches;
next	1.42;

1.42
date	2008.08.10.17.20.26;	author jps;	state Exp;
branches;
next	1.41;

1.41
date	2008.08.10.16.23.11;	author jps;	state Exp;
branches;
next	1.40;

1.40
date	2008.08.10.01.58.49;	author jps;	state Exp;
branches;
next	1.39;

1.39
date	2008.06.21.17.28.38;	author jps;	state Exp;
branches;
next	1.38;

1.38
date	2008.05.19.05.47.00;	author jps;	state Exp;
branches;
next	1.37;

1.37
date	2008.05.18.22.53.22;	author jps;	state Exp;
branches;
next	1.36;

1.36
date	2008.05.18.20.16.11;	author jps;	state Exp;
branches;
next	1.35;

1.35
date	2008.05.18.17.59.40;	author jps;	state Exp;
branches;
next	1.34;

1.34
date	2008.05.18.03.39.05;	author jps;	state Exp;
branches;
next	1.33;

1.33
date	2008.05.18.02.33.28;	author jps;	state Exp;
branches;
next	1.32;

1.32
date	2008.05.18.02.04.21;	author jps;	state Exp;
branches;
next	1.31;

1.31
date	2008.05.12.00.44.21;	author jps;	state Exp;
branches;
next	1.30;

1.30
date	2008.04.23.19.58.53;	author myc;	state Exp;
branches;
next	1.29;

1.29
date	2008.04.19.21.10.31;	author myc;	state Exp;
branches;
next	1.28;

1.28
date	2008.04.14.08.36.09;	author jps;	state Exp;
branches;
next	1.27;

1.27
date	2008.04.14.02.17.16;	author jps;	state Exp;
branches;
next	1.26;

1.26
date	2008.04.13.18.29.59;	author jps;	state Exp;
branches;
next	1.25;

1.25
date	2008.04.07.03.02.54;	author jps;	state Exp;
branches;
next	1.24;

1.24
date	2008.04.05.16.31.36;	author jps;	state Exp;
branches;
next	1.23;

1.23
date	2008.04.02.17.41.56;	author myc;	state Exp;
branches;
next	1.22;

1.22
date	2008.03.30.15.37.36;	author jps;	state Exp;
branches;
next	1.21;

1.21
date	2008.03.29.16.28.58;	author jps;	state Exp;
branches;
next	1.20;

1.20
date	2008.03.28.17.54.53;	author myc;	state Exp;
branches;
next	1.19;

1.19
date	2008.03.27.17.27.26;	author jps;	state Exp;
branches;
next	1.18;

1.18
date	2008.03.25.21.59.32;	author jps;	state Exp;
branches;
next	1.17;

1.17
date	2008.03.24.08.43.09;	author jps;	state Exp;
branches;
next	1.16;

1.16
date	2008.03.23.18.42.21;	author jps;	state Exp;
branches;
next	1.15;

1.15
date	2008.03.21.15.01.17;	author myc;	state Exp;
branches;
next	1.14;

1.14
date	2008.03.10.18.01.17;	author myc;	state Exp;
branches;
next	1.13;

1.13
date	2008.03.09.18.10.19;	author jps;	state Exp;
branches;
next	1.12;

1.12
date	2008.03.09.08.59.55;	author jps;	state Exp;
branches;
next	1.11;

1.11
date	2008.03.08.22.29.06;	author myc;	state Exp;
branches;
next	1.10;

1.10
date	2008.03.07.21.21.57;	author myc;	state Exp;
branches;
next	1.9;

1.9
date	2008.02.23.01.03.54;	author myc;	state Exp;
branches;
next	1.8;

1.8
date	2008.02.09.04.27.47;	author myc;	state Exp;
branches;
next	1.7;

1.7
date	2008.02.06.21.53.53;	author myc;	state Exp;
branches;
next	1.6;

1.6
date	2008.01.29.16.51.12;	author myc;	state Exp;
branches;
next	1.5;

1.5
date	2008.01.27.21.18.20;	author myc;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.26.23.19.28;	author jps;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.26.14.26.31;	author jps;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.26.12.32.23;	author jps;	state Exp;
branches;
next	1.1;

1.1
date	2008.01.26.10.44.41;	author jps;	state Exp;
branches;
next	;


desc
@Initial revision - empty.
@


1.69
log
@Fixed log(buf) to log(%s buf)
@
text
@/***************************************************************************
 * $Id: skills.c,v 1.68 2010/06/05 14:56:27 mud Exp $
 ***************************************************************************/
/***************************************************************************
 *  File: skills.c                                       Part of FieryMUD  *
 *  Usage: Skill-management functions and data                             *
 *                                                                         *
 *  All rights reserved.  See license.doc for complete information.        *
 *                                                                         *
 *  FieryMUD Copyright (C) 1998, 1999, 2000 by the Fiery Consortium        *
 *  FieryMUD is based on CircleMUD Copyright (C) 1993, 94 by the Trustees  *
 *  of the Johns Hopkins University                                        *
 *  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
 ***************************************************************************/

#include "conf.h"
#include "sysdep.h"

#include "structs.h"
#include "utils.h"
#include "db.h"
#include "math.h"
#include "interpreter.h"
#include "comm.h"
#include "skills.h"
#include "casting.h"
#include "races.h"
#include "events.h"
#include "chars.h"
#include "fight.h"
#include "damage.h"

struct skilldef skills[TOP_SKILL_DEFINE + 1];
int skill_sort_info[TOP_SKILL + 1];

const char *talent_types[5] = {
  "talent",
  "spell",
  "skill",
  "chant",
  "song",
};

const char *targets[NUM_TAR_FLAGS + 1] = {
  "IGNORE",
  "CHAR_ROOM",
  "CHAR_WORLD",
  "FIGHT_SELF",
  "FIGHT_VICT",
  "SELF_ONLY",
  "NOT_SELF",
  "OBJ_INV",
  "OBJ_ROOM",
  "OBJ_WORLD",
  "OBJ_EQUIP",
  "STRING",
  "NIGHT_ONLY",
  "DAY_ONLY",
  "OUTDOORS",
  "GROUND",
  "CONTACT",
  "DIRECT",
  "\n"
};

const char *routines[NUM_ROUTINE_TYPES + 1] = {
  "DAMAGE",
  "AFFECT",
  "UNAFFECT",
  "POINT",
  "ALTER_OBJ",
  "GROUP",
  "MASS",
  "AREA",
  "SUMMON",
  "CREATION",
  "MANUAL",
  "ROOM",
  "BULK_OBJS",
  "\n",
};

int talent_type(int skill_num)
{
  if (IS_SKILL(skill_num))
    return SKILL;
  if (IS_SPELL(skill_num))
    return SPELL;
  if (IS_CHANT(skill_num))
    return CHANT;
  if (IS_SONG(skill_num))
    return SONG;
  return TALENT;
}


const char *skill_name(int num)
{
  if (num <= 0 || num >= TOP_SKILL_DEFINE) {
    if (num == -1)
      return "UNUSED";
    else
      return "UNDEFINED";
  }

  return skills[num].name;
}

int find_talent_num(char *name, int restrict)
{
  int index = 0, abbrevmatch = -1, ok;
  char *temp, *temp2;
  char first[256], first2[256], temp3[256];

  skip_spaces(&name);

  /* Loop through the skills to find a match. */
  while (++index <= TOP_SKILL_DEFINE) {

     if ((restrict == SPELL && !IS_SPELL(index)) ||
         (restrict == SKILL && !IS_SKILL(index)) ||
         (restrict == SONG && !IS_SONG(index)) ||
         (restrict == CHANT && !IS_CHANT(index)))
        continue;

    /* Exact match.  This is the skill we're looking for. */
    if (!strcmp(name, skills[index].name))
      return index;

    /*
     * If we found an abbreviated match, we don't want to return its
     * index immediately, in case we find a better match later.
     */
    if (is_abbrev(name, skills[index].name)) {
       if (abbrevmatch == -1 || strcmp(skills[index].name, skills[abbrevmatch].name) == -1) {
         abbrevmatch = index;
         continue;
       }
    }

    /*
     * Check for multiple-word abbreviations.
     */
    ok = 1;
    strcpy(temp3, skills[index].name);
    temp = any_one_arg(temp3, first);
    temp2 = any_one_arg(name, first2);
    while (*first && *first2 && ok) {
      if (!is_abbrev(first2, first))
        ok = 0;
      temp = any_one_arg(temp, first);
      temp2 = any_one_arg(temp2, first2);
    }

    if (ok && !*first2 && abbrevmatch == -1) {
      abbrevmatch = index;
    }
  }

  return abbrevmatch;
}

int find_skill_num(char *name)
{
   return find_talent_num(name, SKILL);
}

int find_spell_num(char *name)
{
   return find_talent_num(name, SPELL);
}

int find_chant_num(char *name)
{
   return find_talent_num(name, CHANT);
}

int find_song_num(char *name)
{
   return find_talent_num(name, SONG);
}

void improve_skill (struct char_data *ch, int skill)
{
   int percent, maxpercent;
   char skillbuf[MAX_STRING_LENGTH];

   if (IS_NPC(ch))
      return;

   /* Skills don't improve in the PK arena. */
   if (ch->in_room != NOWHERE && ROOM_FLAGGED(ch->in_room, ROOM_ARENA))
      return;

   percent = GET_ISKILL(ch, skill);
   maxpercent = return_max_skill(ch, skill);
   if (percent <= 0 || percent >= maxpercent)
      return;
   if (number (0, 140) > GET_WIS (ch) + GET_INT (ch))
      return;

   /* These skills improve a bit faster than most. */
   if (skill == SKILL_FIRST_AID ||
         skill == SKILL_BANDAGE ||
         skill == SKILL_DOUSE ||
         skill == SKILL_CHANT)
      percent += number(4, 7);
   else if (skill == SKILL_TAME ||
                skill == SKILL_BASH ||
                skill == SKILL_DISARM ||
                skill == SKILL_SCRIBE ||
                skill == SKILL_SWITCH)
      percent += 2;
   else
      percent++;

   /* returns 1000 for most skills, but caps some others lower */
   if (percent >= maxpercent) {
      SET_SKILL(ch, skill, maxpercent);
      sprintf(skillbuf, "&8You feel about as skilled in %s as possible!&0\r\n",
            skills[skill].name);
   } else {
      SET_SKILL (ch, skill, percent);
      sprintf (skillbuf, "&8You feel your skill in %s improving.\r\n&0",
            skills[skill].name);
   }
   send_to_char (skillbuf, ch);
}

/* Improve a skill as a result of an offensive act against someone.
 *
 * The primary purpose of this function is to avoid improving a skill when
 * it's used against an illusory creature.
 *
 * In some sense it could be allowed, but I wouldn't want Illusionists to
 * be able to summon safe, harmless punching bags to practice on.  Practicing
 * an offensive skill against someone who you *know* cannot harm you is
 * unlikely to be very effective.  You will lack fear and won't incorporate
 * defensive measures into your actions.
 */

void improve_skill_offensively(struct char_data *ch, struct char_data *victim,
      int skill)
{
   /* Note that for some skills, such as switch, there may be no victim. */
   if (victim && MOB_FLAGGED(victim, MOB_ILLUSORY))
      return;
   improve_skill(ch, skill);
}

/* UPDATE_SKILLS
 *
 * Makes sure that the character has the proper skills, spells,
 * songs, and chants.  Should be called whenever someone is created,
 * or logs in, or gains a level, or changes class/race for any reason.
 *
 * It will automatically handle the spell sphere skills, such as
 * SKILL_SPHERE_GENERIC.  If any spell is assigned to a class, the
 * related sphere skill will be assigned.  Conversely, if there are no
 * spells of a given sphere, players in that class will have the
 * sphere-skill removed.
 *
 * The above will work even if additional spheres are introduced,
 * and even if they are non-contiguous with the current ones.
 * In other words, SKILL_SPHERE_NEXUS could be added as number 500.
 * However, the defines IS_SKILL_SPHERE and NUM_SPHERE_SKILLS must
 * correctly take such changes into account.
 *
 * You have the following opportunities to be allowed any skill:
 *
 * 1. Class allows it.
 * 2. Race allows it.
 * 3. Assigned to a mob by vnum: creatures[] in act.other.c (mainly for shapechange).
 *
 * In addition, if a skill is for humanoids only, you will not be allowed
 * to have it even if class would allow it; but the creatures[] array
 * overrides this rule.
 */

void update_skills(struct char_data *ch)
{
   int skill, i, spherecheck[NUM_SPHERE_SKILLS], prof;
   bool spherepresent;

   /* act.other.c: shapechange creatures */
   extern bool creature_allowed_skill(struct char_data *ch, int skill);

   if (!VALID_CLASS(ch))
      return;

   memset(&spherecheck, 0, sizeof(spherecheck));

   for (skill = 0; skill <= TOP_SKILL; ++skill) {

      /* Skills and spells can be divided into three categories here:
       *
       * 1. That you're guaranteed to have - you meet the level requirement
       *    and it isn't a quest spell.
       * 2. That you're guaranteed NOT to have - which is anything for which you
       *    don't meet the level requirement, and there's no special excuse which
       *    would give it to.
       * 3. That you normally wouldn't have, except that a quest or race
       *    allowance might have qualified you for it.
       *
       * For items in category 1, we make sure you have the skill.
       * Category 2 items we make sure you don't have.
       *
       * For spells in category 1 or 3, we make sure you have the related magical
       * sphere skill. For example, the magic missile spell is in the sphere of
       * generic. Any character with that spell, we ensure that he or she has the
       * skill of SKILL_SPHERE_GENERIC.
       */

      if (skills[skill].min_level[(int)GET_CLASS(ch)] <= GET_LEVEL(ch)
            && !(
                  skills[skill].humanoid &&
                     !(IS_HUMANOID(ch) || creature_allowed_skill(ch, skill))
                )) {
         /* This skill is available because of your class, and you meet
          * the humanoid requirement, if any. */

         /* This is a talent that you do have, or could have. */
         if (skills[skill].quest == FALSE) {
            /* This skill/spell you get because your level is high enough.
             * So: ensure that you have it. */
            if (GET_SKILL(ch, skill) <= 0) {
               /* You don't have it, so set the starting value.  Individual
                * spells and languages don't actually improve, so the value
                * is 1000. */
               if (IS_SPELL(skill))
                  SET_SKILL(ch, skill, 1000);
               /* Barehand and safe fall don't improve either, though with
                * some improvements to the mud, they could. */
               else if (skill == SKILL_BAREHAND || skill == SKILL_SAFEFALL)
                  SET_SKILL(ch, skill, 1000);
               else
               /* Skills, chants, and songs do improve. You get the low
                * starting value. */
                  SET_SKILL(ch, skill, !IS_NPC(ch) ? 50 : roll_mob_skill(GET_LEVEL(ch)));
            }
         }

         /* Remember all spells' related sphere skills. */
         if (IS_SPELL(skill)) {
            for (i = 0; i < NUM_SPHERE_SKILLS; i++) {
               if (spherecheck[i] == skills[skill].sphere || !spherecheck[i]) {
                  spherecheck[i] = skills[skill].sphere;
                  break;
               }
            }
         }

      } else if ((prof = racial_skill_proficiency(skill, GET_RACE(ch), GET_LEVEL(ch)))) {
         /* This skill is available because of your race. */
         if (prof == ROLL_SKILL_PROF) {
            /* This skill improves as you gain levels. So we only want to give
             * you a "pre-improved" value if you're just now gaining it -
             * such as a spawned mob, or a person being switched to the race. */
            if (GET_SKILL(ch, skill) == 0)
               SET_SKILL(ch, skill, roll_mob_skill(GET_LEVEL(ch)));
         } else {
            /* This skill has been given a static amount. Probably 1000. */
            SET_SKILL(ch, skill, prof);
         }

         /* Again, remember the spell-sphere skills. */
         if (IS_SPELL(skill)) {
            for (i = 0; i < NUM_SPHERE_SKILLS; i++) {
               if (spherecheck[i] == skills[skill].sphere || !spherecheck[i]) {
                  spherecheck[i] = skills[skill].sphere;
                  break;
               }
            }
         }

      } else if (!IS_SPHERE_SKILL(skill) && skills[skill].quest == FALSE) {
         /* You don't meet the level requirement. Neither race nor questage
          * could give it to you, so you CAN'T have it. We take it away! */
         SET_SKILL(ch, skill, 0);
      }
   }

   /* Now set the sphere skills according to the spells we saw in the previous loop.
    * I've looped over the entire skill set again under the assumption that the
    * sphere-skills might NOT be contiguous in the future. */
   for (skill = 0; skill <= TOP_SKILL; ++skill) {
      if (IS_SPHERE_SKILL(skill)) {
         spherepresent = FALSE;
         for (i = 0; i < NUM_SPHERE_SKILLS; i++) {
            if (spherecheck[i] == skill) {
               spherepresent = TRUE;
               break;
            }
         }
         if (!spherepresent)
            SET_SKILL(ch, skill, 0);
         else if (GET_SKILL(ch, skill) <= 0)
            SET_SKILL(ch, skill, !IS_NPC(ch) ? 50 : roll_mob_skill(GET_LEVEL(ch)));
      }
   }
}

/* Define the skills on boot up */
void dskill(int skill, char *name, int max_mana, int min_mana, int mana_change,
            int minpos, int ok_fighting, int targets, byte violent, bool humanoid,
            int routines, int mem_time, int cast_time, int damage_type, int sphere,
            int pages, int quest, char *wearoff)
{
  int i;

  skills[skill].name = name;

  for (i = 0; i < NUM_CLASSES; i++)
    skills[skill].min_level[i] = LVL_IMMORT;
  skills[skill].lowest_level = LVL_IMMORT;

  skills[skill].mana_max = max_mana;
  skills[skill].mana_min = min_mana;
  skills[skill].mana_change = mana_change;
  skills[skill].fighting_ok = ok_fighting;
  skills[skill].minpos = minpos;
  skills[skill].targets = targets;
  skills[skill].violent = violent || IS_SET(routines, MAG_DAMAGE);
  skills[skill].humanoid = humanoid;
  skills[skill].routines = routines;
  skills[skill].damage_type = damage_type;
  skills[skill].sphere = sphere;
  skills[skill].pages  = pages;
  skills[skill].quest  = quest;
  skills[skill].wearoff = wearoff;

  skills[skill].mem_time = mem_time;
  skills[skill].cast_time = cast_time;
}


void clear_skill(int skill)
{
  int i;

  skills[skill].name = "!UNUSED!";

  for (i = 0; i < NUM_CLASSES; i++)
    skills[skill].min_level[i] = LVL_IMPL + 1;
  skills[skill].lowest_level = LVL_IMPL + 1;

  skills[skill].mana_max = 0;
  skills[skill].mana_min = 0;
  skills[skill].mana_change = 0;
  skills[skill].minpos = 0;
  skills[skill].fighting_ok = FALSE;
  skills[skill].targets = 0;
  skills[skill].violent = FALSE;
  skills[skill].humanoid = FALSE;
  skills[skill].routines = 0;
  skills[skill].damage_type = DAM_UNDEFINED;
  skills[skill].sphere = 0;
  skills[skill].pages = 0;
  skills[skill].quest = FALSE;
  skills[skill].wearoff = NULL;

  skills[skill].mem_time = 0;
  skills[skill].cast_time = 0;

}

#define skillo(skill, name, humanoid, targets) dskill(skill, name, 0, 0, 0, 0, \
      TRUE, targets, 0, humanoid, 0, 0, 0, 0, 0, 0, 0, NULL);
#define chanto(chant, name, minpos, ok_fighting, targets, violent, routines, damage, quest, wearoff) \
     dskill(chant, name, 0, 0, 0, minpos, ok_fighting, targets, violent, FALSE, \
            routines, 0, 0, damage, 0, 0, quest, wearoff)
#define songo(song, name, minpos, ok_fighting, targets, violent, routines, damage, quest, wearoff) \
     dskill(song, name, 0, 0, 0, minpos, ok_fighting, targets, violent, FALSE, \
            routines, 0, 0, damage, 0, 0, quest, wearoff)
#define spello(spl, name, max_mana, min_mana, mana_change, minpos, ok_fighting, \
            targets, violent, routines, mem_time, \
            cast_time, damage_type, sphere, pages, quest, \
            wearoff) \
     dskill(spl, name, max_mana, min_mana, mana_change, minpos, ok_fighting, \
            targets, violent, FALSE, routines, mem_time, \
            cast_time, damage_type, sphere, pages, quest, \
            wearoff)
#define effecto(eff, name, wearoff) \
     dskill(eff, name, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, wearoff)



/* **** Initialization of skills **** */

void init_skills(void)
{
  int i;

  for (i = 0; i <= TOP_SKILL_DEFINE; i++)
    clear_skill(i);

  skills[0].name = "!RESERVED!";

/*
 * Arguments for spello calls:
 *
 * spellnum, name, maxmana, minmana, manachng, minpos, targets, violent?, routines,
 * mem_time, cast_time, damage_type, sphere, pages, quest, wearoff
 *
 * spellnum:  Number of the spell.  Usually the symbolic name as defined in
 * spells.h (such as SPELL_HEAL).
 *
 * name    :  Name of the spell
 *
 * maxmana :  The maximum mana this spell will take (i.e., the mana it
 * will take when the player first gets the spell).
 *
 * minmana :  The minimum mana this spell will take, no matter how high
 * level the caster is.
 *
 * manachng:  The change in mana for the spell from level to level.  This
 * number should be positive, but represents the reduction in mana cost as
 * the caster's level increases.
 *
 * minpos  :  Minimum position the caster must be in for the spell to work
 * (usually fighting or standing). targets :  A "list" of the valid targets
 * for the spell, joined with bitwise OR ('|').
 *
 * violent :  TRUE or FALSE, depending on if this is considered a violent
 * spell and should not be cast in PEACEFUL rooms or on yourself.  Should be
 * set on any spell that inflicts damage, is considered aggressive (i.e.
 * charm, curse), or is otherwise nasty.
 *
 * routines:  A list of magic routines which are associated with this spell
 * if the spell uses spell templates.  Also joined with bitwise OR ('|').
 *
 * mem_time:
 *
 * cast_time:
 *
 * damage_type:
 *
 * sphere:
 *
 * pages:  Base Number of pages spell takes to write in a spellbook.
 *
 * quest:  TRUE if spell is a quest spell FALSE if not.
 *
 * wearoff: The message seen when the spell wears off.  NULL if none.
 *
 * See the CircleMUD documentation for a more detailed description of these
 * fields.
 */

  spello(SPELL_BARKSKIN, "barkskin", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_PROT, 17, FALSE,
         "Your skin softens back to its original texture.");

  spello(SPELL_CIRCLE_OF_FIRE, "circle of fire", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, TRUE, MAG_ROOM, C1,
         CAST_SPEED6, DAM_FIRE, SKILL_SPHERE_FIRE, 25, FALSE,
         "&1&bThe &1&bfl&3am&1es&0 &1surrounding &1the area &9&bdie out&0.");

  spello(SPELL_GAIAS_CLOAK, "cloak of gaia", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY | TAR_OUTDOORS, FALSE, MAG_AFFECT, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_PROT, 5, FALSE,
         "Your shroud of nature dissolves.");

  spello(SPELL_ACID_BURST, "acid burst", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDG, DAM_ACID, SKILL_SPHERE_GENERIC, 23, FALSE, NULL);

  spello(SPELL_DETONATION, "detonation", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_GROUND | TAR_OUTDOORS,
         TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_CRUSH, SKILL_SPHERE_EARTH, 10, FALSE, NULL);

  spello(SPELL_CONFUSION, "confusion", 0, 0, 0, POS_STANDING, TRUE,
        TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_MENTAL, SKILL_SPHERE_ENCHANT, 19, FALSE,
         "You no longer feel so confused.");

  spello(SPELL_CREATE_SPRING, "create spring", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_CREATION, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_CREMATE, "cremate", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         CAST_SPEED7, DAM_FIRE, SKILL_SPHERE_FIRE, 35, FALSE, NULL);

  spello(SPELL_DARK_FEAST, "dark feast", 0, 0, 0, POS_STANDING, FALSE,
         TAR_OBJ_ROOM | TAR_CONTACT, FALSE, MAG_MANUAL, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);

  spello(SPELL_DARK_PRESENCE, "dark presence", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE, MAG_AFFECT | MAG_ALTER_OBJ, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You feel the dark presence leave you.");

  spello(SPELL_DEMONIC_ASPECT, "demonic aspect", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "The demon within you fades away.");

  spello(SPELL_DEMONIC_MUTATION, "demonic mutation", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You mutate back to your original form.");

  spello(SPELL_DEMONSKIN, "demonskin", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_PROT, 5, FALSE,
         "Your skin reverts back to normal.");

  spello(SPELL_DISCORPORATE, "discorporate", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_DISCORPORATE, SKILL_SPHERE_GENERIC, 14, FALSE, NULL);

  spello(SPELL_DISEASE, "disease", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You are cured of your disease!");

  spello(SPELL_DIVINE_ESSENCE, "divine essence", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_GROUP, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE, NULL);

  spello(SPELL_ENTANGLE, "entangle", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_OUTDOORS, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You break free of the vines.");

  spello(SPELL_EXTINGUISH, "extinguish", 0, 0, 0, POS_SITTING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_WATER, 11, FALSE, NULL);

  spello(SPELL_FAMILIARITY, "familiarity", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 10, FALSE,
         "Your familiar disguise melts away.");

  spello(SPELL_FIRE_DARTS, "fire darts", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDD, DAM_FIRE, SKILL_SPHERE_FIRE, 9, FALSE, NULL);

  spello(SPELL_FIRESHIELD, "fireshield", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_FIRE, SKILL_SPHERE_FIRE, 17, FALSE,
         "The flames around your body dissipate.");

  spello(SPELL_FIRESTORM, "firestorm", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         CAST_SPEED6, DAM_FIRE, SKILL_SPHERE_FIRE, 25, FALSE, NULL);

  spello(SPELL_FLAME_BLADE, "flame blade", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 19, FALSE, NULL);

  spello(SPELL_FLOOD, "flood", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_MANUAL, C1,
         18, DAM_WATER, SKILL_SPHERE_WATER, 35, TRUE, NULL);

  spello(SPELL_FREEZE, "freeze", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_COLD, SKILL_SPHERE_WATER, 25, FALSE, NULL);

  spello(SPELL_FREEZING_WIND, "freezing wind", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         CAST_SPEED4, DAM_COLD, SKILL_SPHERE_AIR, 21, FALSE, NULL);

  spello(SPELL_ARMOR_OF_GAIA, "armor of gaia", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_MANUAL, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_GLORY, "glory", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 17, FALSE,
         "Your visage becomes plain once again.");

  spello(SPELL_GREATER_VITALITY, "greater vitality", 50, 30, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 11, FALSE,
         "Your magical vitality drains away.");

  spello(SPELL_POSITIVE_FIELD, "positive field", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_GROUND, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDF, DAM_SHOCK, SKILL_SPHERE_EARTH, 18, FALSE, NULL);

  spello(SPELL_PHOSPHORIC_EMBERS, "phosphoric embers", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDE, DAM_FIRE, SKILL_SPHERE_FIRE, 18, FALSE, NULL);

  spello(SPELL_HEAVENS_GATE, "heavens gate", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_WORLD, FALSE, MAG_MANUAL, C1,
         16, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);

  spello(SPELL_HELL_BOLT, "hell bolt", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED2, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_HELLS_GATE, "hell gate", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_WORLD, FALSE, MAG_MANUAL, C1,
         18, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);

  spello(SPELL_HELLFIRE_BRIMSTONE, "hellfire and brimstone", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, FALSE, MAG_AREA, C1,
         16, DAM_FIRE, SKILL_SPHERE_FIRE, 5, TRUE, NULL);

  spello(SPELL_HYSTERIA, "hysteria", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_MANUAL, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 16, FALSE,
         "Your courage returns to you.");

  spello(SPELL_ICE_ARMOR, "ice armor", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_PROT, 13, FALSE,
         "Your iced encasing melts away, leaving you vulnerable again.");

  spello(SPELL_ICE_DAGGER, "ice dagger", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 17, FALSE, NULL);

  spello(SPELL_ICE_DARTS, "ice darts", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDD, DAM_COLD, SKILL_SPHERE_WATER, 7, FALSE, NULL);

  spello(SPELL_ICEBALL, "iceball", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDF, DAM_COLD, SKILL_SPHERE_WATER, 29, FALSE, NULL);

  spello(SPELL_ILLUMINATION, "illumination", 50, 25, 5, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE,
         MAG_MANUAL, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "&8The magical light fades away.&0");

  spello(SPELL_ILLUSORY_WALL, "illusory wall", 0, 0, 0, POS_STANDING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         18, DAM_UNDEFINED, SKILL_SPHERE_GENERIC, 27, TRUE,
         "The wall dissolves into tiny motes of light...");

  spello(SPELL_IMMOLATE, "immolate", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDF, DAM_FIRE, SKILL_SPHERE_FIRE, 25, FALSE, NULL);

  spello(SPELL_INSANITY, "insanity", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_MENTAL, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your mind returns to reality.");

  spello(SPELL_INVIGORATE, "invigorate", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_GROUP, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_ISOLATION, "isolation", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         10, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 8, FALSE,
         "It is as if a veil has lifted from the surrounding area.");

  spello(SPELL_NATURES_EMBRACE, "natures embrace", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY | TAR_OUTDOORS, FALSE, MAG_AFFECT | MAG_POINT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Nature releases you from her embrace.");

  spello(SPELL_NIGHTMARE, "nightmare", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDD, DAM_MENTAL, SKILL_SPHERE_DEATH, 12, FALSE, NULL);

  spello(SPELL_MAGIC_TORCH, "magic torch", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 7, FALSE,
         "Your magic torch peters out.");

  spello(SPELL_MELT, "melt", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE,
         C1, CAST_SPEEDE, DAM_FIRE, SKILL_SPHERE_FIRE, 29, FALSE, NULL);

  spello(SPELL_MESMERIZE, "mesmerize", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, TRUE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_MENTAL, SKILL_SPHERE_ENCHANT, 8, FALSE,
         "You regain your senses.");

  spello(SPELL_METEORSWARM, "meteorswarm", 100, 50, 3, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C9,
         CAST_SPEED7, DAM_CRUSH, SKILL_SPHERE_EARTH, 37, TRUE, NULL);

  spello(SPELL_MIRAGE, "mirage", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_FIRE, 17, FALSE,
         "You become more visible as the heat around your body dies out.");

  spello(SPELL_NEGATE_COLD, "negate cold", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_PROT, 29, FALSE,
         "You feel vulnerable to the cold again.");

  spello(SPELL_NEGATE_HEAT, "negate heat", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_PROT, 29, FALSE,
         "Your immunity to heat has passed.");

  spello(SPELL_NIGHT_VISION, "night vision", 0, 0, 0, POS_SITTING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your night vision fades out.");

  spello(SPELL_NOURISHMENT, "nourishment", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_POINT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_PHANTASM, "phantasm", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_SUMMON, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 12, FALSE, NULL);

  spello(SPELL_RAIN, "rain", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_WATER, 23, FALSE, NULL);

  spello(SPELL_RECALL, "recall", 20, 10, 2, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_MANUAL, C1,
         1, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_SANE_MIND, "sane mind", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_SEVERANCE, "severance", 100, 50, 3, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C9,
         CAST_SPEED7, DAM_DISCORPORATE, SKILL_SPHERE_GENERIC, 37, FALSE, NULL);

  spello(SPELL_SIMULACRUM, "simulacrum", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_WORLD, FALSE, MAG_SUMMON, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 15, FALSE, NULL);

  spello(SPELL_SMOKE, "smoke", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_FIRE, 11, FALSE,
         "As the smoke clears, your vision returns.");

  spello(SPELL_SOUL_REAVER, "soul reaver", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C9,
         CAST_SPEED7, DAM_MENTAL, SKILL_SPHERE_DEATH, 30, FALSE, NULL);

  spello(SPELL_STYGIAN_ERUPTION, "stygian eruption", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED4, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_SUNRAY, "sunray", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE | MAG_AFFECT,
         C1, CAST_SPEED6, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE,
         "Your vision has returned.");

  spello(SPELL_SUPERNOVA, "supernova", 100, 50, 3, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         16, DAM_FIRE, SKILL_SPHERE_FIRE, 31, TRUE, NULL);

  spello(SPELL_URBAN_RENEWAL, "urban renewal", 0, 0, 0, POS_SITTING, FALSE,
         TAR_IGNORE | TAR_OUTDOORS, FALSE, MAG_ROOM, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "&2The woods in the surrounding area break apart and crumble.&0");

  spello(SPELL_VAPORFORM, "vaporform", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_PROT, 35, TRUE,
         "Your form condenses into flesh once again.");

  spello(SPELL_VENTRILOQUATE, "ventriloquate", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_NOT_SELF, FALSE, MAG_MANUAL, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_GENERIC, 6, FALSE, NULL);

  spello(SPELL_WALL_OF_ICE, "wall of ice", 0, 0, 0, POS_STANDING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         18, DAM_COLD, SKILL_SPHERE_WATER, 27, TRUE,
         "The wall of ice melts away...");

  spello(SPELL_WALL_OF_STONE, "wall of stone", 0, 0, 0, POS_STANDING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 25, FALSE,
         "The wall of stone crumbles into dust.");

  spello(SPELL_WANDERING_WOODS, "wandering woods", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         16, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "The woods around you shift back to their proper form.");

  spello(SPELL_WATERFORM, "waterform", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_WATER, 27, TRUE,
         "Your form solidifies into flesh once again.");

  spello(SPELL_WINGS_OF_HELL, "wings of hell", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your giant bat-like wings fold up and vanish.");

  spello(SPELL_WRITHING_WEEDS, "writhing weeds", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_OUTDOORS, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED3, DAM_CRUSH, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);

  /* SORTED */

  spello(SPELL_WORD_OF_COMMAND, "word of command", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_MANUAL, C1,
         CAST_SPEED7, DAM_MENTAL, SKILL_SPHERE_GENERIC, 5, TRUE, NULL);

  spello(SPELL_WINGS_OF_HEAVEN, "wings of heaven", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your wings gently fold back and fade away.");

  spello(SPELL_BANISH, "banish", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_NOT_SELF | TAR_FIGHT_VICT, TRUE, MAG_MANUAL,
         C1, CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);

  spello(SPELL_ENLIGHTENMENT, "enlightenment", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_NOT_SELF, FALSE, MAG_MANUAL, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 5, FALSE, NULL);

  spello(SPELL_SPEAK_IN_TONGUES, "speak in tongues", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 5, FALSE,
         "Your vocabulary diminishes drastically.");

  spello(SPELL_EXORCISM, "exorcism", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE,C1,
         18, DAM_ALIGN, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_LESSER_EXORCISM, "lesser exorcism", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED5, DAM_ALIGN, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_DIVINE_RAY, "divine ray", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED5, DAM_ALIGN, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);

  spello(SPELL_DIVINE_BOLT, "divine bolt", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED3, DAM_ALIGN, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);

  spello(SPELL_PRAYER, "prayer", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your holy prayer fades.");

  spello(SPELL_ELEMENTAL_WARDING, "elemental warding", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_PROT, 5, FALSE,
         "You feel less safe from the elements.");

  spello(SPELL_CIRCLE_OF_LIGHT, "circle of light", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "The circle of light above you fades out.");

  spello(SPELL_FIRE_BREATH, "fire breath", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED1, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_GAS_BREATH, "gas breath", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, TRUE, MAG_DAMAGE | MAG_AFFECT, C1,
         CAST_SPEED1, DAM_POISON, SKILL_SPHERE_AIR, 5, FALSE, NULL);

  spello(SPELL_FROST_BREATH, "frost breath", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED1, DAM_COLD, SKILL_SPHERE_WATER, 5, FALSE, NULL);

  spello(SPELL_LIGHTNING_BREATH, "lightning breath", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, TRUE, MAG_DAMAGE | MAG_MANUAL, C1,
         CAST_SPEED1, DAM_SHOCK, SKILL_SPHERE_AIR, 5, FALSE, NULL);

  spello(SPELL_ACID_BREATH, "acid breath", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED1, DAM_ACID, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_FEAR, "fear", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your courage returns to you.");

  spello(SPELL_MISDIRECTION, "misdirection", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 12, FALSE,
         "You no longer feel like you're going every which way at once.");

  spello(SPELL_CHAIN_LIGHTNING, "chain lightning", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE | TAR_DIRECT, TRUE, MAG_AREA, C1,
         CAST_SPEED5, DAM_SHOCK, SKILL_SPHERE_AIR, 27, FALSE, NULL);

  spello(SPELL_MASS_INVIS, "mass invisibility", 0, 0, 0, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_BULK_OBJS | MAG_MASS, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 23, FALSE, NULL);

  spello(SPELL_RELOCATE, "relocate", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_WORLD | TAR_NOT_SELF, FALSE, MAG_MANUAL, C14,
         20, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 35, TRUE, NULL);

  spello(SPELL_DISINTEGRATE, "disintegrate", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE | MAG_MANUAL,
         C1, CAST_SPEEDF, DAM_ACID, SKILL_SPHERE_GENERIC, 27, FALSE, NULL);

  spello(SPELL_HARNESS, "harness", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         2, DAM_UNDEFINED, SKILL_SPHERE_GENERIC, 21, FALSE,
         "&4The harnessed power in your body fades.&0");

  spello(SPELL_MINOR_GLOBE, "minor globe", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_PROT, 23, FALSE,
         "The globe around your body fades out.");

  spello(SPELL_MAJOR_GLOBE, "major globe", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_PROT, 35, TRUE,
         "The globe of force surrounding you dissipates.");

  spello(SPELL_COLDSHIELD, "coldshield", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_COLD, SKILL_SPHERE_WATER, 17, FALSE,
         "The ice formation around your body melts.");

  spello(SPELL_MINOR_PARALYSIS, "minor paralysis", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_NOT_SELF, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 21, FALSE,
         "Your muscles regain feeling.");

  spello(SPELL_TELEPORT, "teleport", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_MANUAL, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 11, FALSE, NULL);

  spello(SPELL_RAY_OF_ENFEEB, "ray of enfeeblement", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 21, FALSE,
         "Your strength returns to you.");

  spello(SPELL_LEVITATE, "levitate", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 13, FALSE,
         "You float back to the ground.");

  spello(SPELL_WIZARD_EYE, "wizard eye", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_WORLD, FALSE, MAG_MANUAL, C1,
         16, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 17, TRUE, NULL);

  spello(SPELL_MINOR_CREATION, "minor creation", 0, 0, 0,POS_SITTING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_DISPEL_MAGIC, "dispel magic", 0, 0, 0, POS_SITTING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_OBJ_ROOM | TAR_OBJ_INV,
         TRUE, MAG_MANUAL, C1, CAST_SPEED4, DAM_DISPEL,
         SKILL_SPHERE_GENERIC, 15, FALSE, NULL);

  spello(SPELL_UNHOLY_WORD, "unholy word", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         1, DAM_ALIGN, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_HOLY_WORD, "holy word", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         1, DAM_ALIGN, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_ARMOR, "armor", 30, 15, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_PROT, 5, FALSE,
         "You feel less protected.");

  spello(SPELL_REDUCE, "reduce", 35, 5, 3, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT | MAG_UNAFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 29, FALSE,
         "&8You return to your normal size.&0");

  spello(SPELL_ENLARGE, "enlarge", 35, 5, 3, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT | MAG_UNAFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 29, FALSE,
         "&8You return to your normal size.&0");

  spello(SPELL_BLESS, "bless", 35, 5, 3, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE, MAG_AFFECT | MAG_ALTER_OBJ,
         C1, CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You feel less righteous.");

  spello(SPELL_BLINDNESS, "blindness", 35, 25, 1, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_NOT_SELF, TRUE,
         MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You feel a cloak of blindness dissolve.");

  spello(SPELL_SILENCE, "silence", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_NOT_SELF, TRUE, MAG_AFFECT,
         C1, CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You can speak again.");

  spello(SPELL_FLAMESTRIKE, "flamestrike", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED3, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_BURNING_HANDS, "burning hands", 30, 10, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDD, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_CONE_OF_COLD, "cone of cold", 35, 15, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_COLD, SKILL_SPHERE_WATER, 19, FALSE, NULL);

  spello(SPELL_BIGBYS_CLENCHED_FIST, "bigbys clenched fist", 90, 35, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_CRUSH, SKILL_SPHERE_GENERIC, 25, FALSE, NULL);

  spello(SPELL_WATERWALK, "waterwalk", 35, 5, 3, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 29, FALSE,
         "Your feet seem less buoyant.");

  spello(SPELL_ICE_SHARDS, "ice shards", 100, 50, 3, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         16, DAM_SLASH, SKILL_SPHERE_WATER, 31, TRUE, NULL);

  spello(SPELL_ICE_STORM, "ice storm", 100, 50, 3, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         CAST_SPEED5, DAM_COLD, SKILL_SPHERE_WATER, 23, FALSE, NULL);

  spello(SPELL_CALL_LIGHTNING, "call lightning", 40, 25, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_OUTDOORS, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED4, DAM_SHOCK, SKILL_SPHERE_AIR, 5, FALSE, NULL);

  spello(SPELL_CHARM, "charm person", 75, 50, 2, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_NOT_SELF, FALSE, MAG_MANUAL, C1,
         CAST_SPEED5, DAM_MENTAL, SKILL_SPHERE_ENCHANT, 35, TRUE,
         "You feel more self-confident.");

  spello(SPELL_PLANE_SHIFT, "plane shift", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_MANUAL, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);

  spello(SPELL_CHILL_TOUCH, "chill touch", 30, 10, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE | MAG_AFFECT,
         C1, CAST_SPEEDD, DAM_COLD, SKILL_SPHERE_WATER, 7, FALSE,
         "You feel your strength return.");

  spello(SPELL_CLONE, "clone", 80, 65, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_SUMMON, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 35, FALSE, NULL);

  spello(SPELL_DARKNESS, "darkness", 50, 25, 5, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE, MAG_MANUAL, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "The magical darkness lifts.");

  /* innate strength */
  spello(SPELL_INN_STRENGTH, "innate strength", 35, 30, 1, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, 0, 0, 7, FALSE,
         "You feel weaker.");

  spello(SPELL_MAJOR_PARALYSIS, "major paralysis", 35, 30, 1, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, TRUE, MAG_MANUAL, C6,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 35, FALSE,
         "You can move again.");

  spello(SPELL_COLOR_SPRAY, "color spray", 30, 15, 3, POS_STANDING, TRUE,
         TAR_IGNORE | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_GENERIC, 21, FALSE, NULL);

  spello(SPELL_CONTROL_WEATHER, "control weather", 75, 25, 5, POS_STANDING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE, NULL);

  spello(SPELL_CREATE_FOOD, "create food", 30, 5, 4, POS_SITTING, FALSE,
         TAR_IGNORE, FALSE, MAG_CREATION, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_CREATE_WATER, "create water", 30, 5, 4, POS_SITTING, FALSE,
         TAR_OBJ_INV | TAR_OBJ_EQUIP, FALSE, MAG_MANUAL, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_CURE_BLIND, "cure blind", 30, 5, 2, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_CURE_CRITIC, "cure critic", 30, 10, 2, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 15, FALSE, NULL);

  spello(SPELL_CURE_SERIOUS, "cure serious", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_CURE_LIGHT, "cure light", 30, 10, 2, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 9, FALSE, NULL);

  spello(SPELL_VIGORIZE_LIGHT, "vigorize light", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_VIGORIZE_SERIOUS, "vigorize serious", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_VIGORIZE_CRITIC, "vigorize critic", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_CURSE, "curse", 80, 50, 2, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, TRUE,
         MAG_AFFECT | MAG_ALTER_OBJ, C1, CAST_SPEED5, 0,
         SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You feel more optimistic.");

  spello(SPELL_DETECT_ALIGN, "detect alignment", 20, 10, 2, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 9, FALSE,
         "You feel less aware.");

  spello(SPELL_DETECT_INVIS, "detect invisibility", 20, 10, 2, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 19, FALSE,
         "Your eyes stop tingling.");

  spello(SPELL_DETECT_MAGIC, "detect magic", 20, 10, 2, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 5, FALSE,
         "The detect magic wears off.");

  spello(SPELL_FLY, "fly", 50, 5, 3, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 17, FALSE,
         "You feel the weight of your body return.");

  spello(SPELL_DETECT_POISON, "detect poison", 15, 5, 1, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 13, FALSE,
         "You feel slightly less aware.");

  spello(SPELL_DISPEL_EVIL, "dispel evil", 40, 25, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED3, DAM_ALIGN, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_DISPEL_GOOD, "dispel good", 40, 25, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED5, DAM_ALIGN, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_EARTHQUAKE, "earthquake", 40, 25, 3, POS_STANDING, TRUE,
         TAR_IGNORE | TAR_OUTDOORS, TRUE, MAG_AREA, C1,
         CAST_SPEED5, DAM_CRUSH, SKILL_SPHERE_EARTH, 5, FALSE, NULL);

  spello(SPELL_DOOM, "doom", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         CAST_SPEED6, DAM_CRUSH, SKILL_SPHERE_EARTH, 35, FALSE, NULL);

  spello(SPELL_CREEPING_DOOM, "creeping doom", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_MANUAL, C1,
         CAST_SPEED7, DAM_CRUSH, SKILL_SPHERE_EARTH, 35, TRUE, NULL);

  spello(SPELL_ENCHANT_WEAPON, "enchant weapon", 150, 100, 10, POS_STANDING, FALSE,
         TAR_OBJ_INV | TAR_OBJ_EQUIP, FALSE, MAG_MANUAL, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 23, FALSE, NULL);

  spello(SPELL_ENERGY_DRAIN, "energy drain", 40, 25, 1, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
         CAST_SPEED5, DAM_HEAL, SKILL_SPHERE_DEATH, 19, FALSE, NULL);

  spello(SPELL_VAMPIRIC_BREATH, "vampiric breath", 40, 25, 1, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE | MAG_MANUAL, C1,
         CAST_SPEED1, DAM_HEAL, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_GROUP_ARMOR, "group armor", 50, 30, 2, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_GROUP, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_PROT, 9, TRUE, NULL);

  spello(SPELL_GROUP_RECALL, "group recall", 50, 30, 2, POS_STANDING, TRUE,
         TAR_IGNORE, FALSE, MAG_GROUP, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);

  spello(SPELL_FIREBALL, "fireball", 40, 30, 2, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_FIRE, SKILL_SPHERE_FIRE, 21, FALSE, NULL);

  spello(SPELL_FULL_HARM, "full harm", 75, 45, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED6, DAM_HEAL, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_FULL_HEAL, "full heal", 75, 50, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT | MAG_UNAFFECT, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_GROUP_HEAL, "group heal", 80, 60, 5, POS_STANDING, TRUE,
         TAR_IGNORE, FALSE, MAG_GROUP, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, TRUE, NULL);

  spello(SPELL_HARM, "harm", 45, 15, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED5, DAM_HEAL, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_HEAL, "heal", 60, 40, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT | MAG_UNAFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_INFRAVISION, "infravision", 25, 10, 1, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 9, FALSE,
         "Your night vision seems to fade.");

  spello(SPELL_INVISIBLE, "invisibility", 35, 25, 1, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, FALSE, MAG_AFFECT |
         MAG_ALTER_OBJ, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 17, FALSE,
         "You fade back into view.");

  spello(SPELL_CONCEALMENT, "concealment", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_POINT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 13, FALSE,
         "You fade back into view.");

  spello(SPELL_LIGHTNING_BOLT, "lightning bolt", 30, 15, 1, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDD, DAM_SHOCK, SKILL_SPHERE_AIR, 17, FALSE, NULL);

  spello(SPELL_LOCATE_OBJECT, "locate object", 25, 20, 1, POS_SITTING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 12, FALSE, NULL);

  spello(SPELL_SUMMON_CORPSE, "summon corpse", 25, 20, 1, POS_STANDING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 17, FALSE, NULL);

  spello(SPELL_SHIFT_CORPSE, "shift corpse", 25, 20, 1, POS_STANDING, FALSE,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 17, TRUE, NULL);

  spello(SPELL_MAGIC_MISSILE, "magic missile", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDD, DAM_PIERCE, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);

  spello(SPELL_POISON, "poison", 50, 20, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_NOT_SELF | TAR_OBJ_INV | TAR_FIGHT_VICT, TRUE,
         MAG_AFFECT | MAG_ALTER_OBJ, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You feel less sick.");

  spello(SPELL_PROT_FROM_EVIL, "protection from evil", 40, 10, 3, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_PROT, 5, FALSE,
         "You feel less protected.");

  spello(SPELL_REMOVE_CURSE, "remove curse", 45, 25, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, FALSE, MAG_MANUAL,
         C1, CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE, NULL);

  spello(SPELL_SANCTUARY, "sanctuary", 110, 85, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_PROT, 35, FALSE,
         "The white aura around your body fades.");

  spello(SPELL_SHOCKING_GRASP, "shocking grasp", 30, 15, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDD, DAM_SHOCK, SKILL_SPHERE_AIR, 9, FALSE, NULL);

  spello(SPELL_SLEEP, "sleep", 40, 25, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_MENTAL, SKILL_SPHERE_ENCHANT, 19, FALSE,
         "You feel less tired.");

  spello(SPELL_STRENGTH, "strength", 35, 30, 1, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You feel weaker.");

  spello(SPELL_SUMMON, "summon", 75, 50, 3, POS_STANDING, FALSE,
         TAR_CHAR_WORLD | TAR_NOT_SELF, FALSE, MAG_MANUAL, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_RESURRECT, "resurrect", 75, 50, 3, POS_STANDING, FALSE,
         TAR_CHAR_WORLD | TAR_NOT_SELF, FALSE, MAG_MANUAL, C1,
         26, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, TRUE, NULL);

  spello(SPELL_PRESERVE, "preserve", 0, 0, 0, POS_SITTING, FALSE,
         TAR_OBJ_ROOM, FALSE, MAG_MANUAL, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 11, FALSE, NULL);

  spello(SPELL_DIMENSION_DOOR, "dimension door", 75, 45, 3, POS_STANDING, FALSE,
         TAR_CHAR_WORLD | TAR_NOT_SELF, FALSE, MAG_MANUAL, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 15, FALSE, NULL);

  spello(SPELL_SUMMON_DRACOLICH, "summon dracolich", 100, 75, 3, POS_STANDING, FALSE,
         TAR_OBJ_ROOM, FALSE, MAG_SUMMON, C1,
         20, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 33, TRUE, NULL);

  spello(SPELL_ANIMATE_DEAD, "animate dead", 75, 15, 3, POS_STANDING, FALSE,
         TAR_OBJ_ROOM, FALSE, MAG_SUMMON, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DEATH, 21, FALSE, NULL);

  spello(SPELL_SUMMON_ELEMENTAL, "summon elemental", 75, 15, 3, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_SUMMON, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 19, FALSE, NULL);

  spello(SPELL_SUMMON_DEMON, "summon demon", 100, 75, 3, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_SUMMON, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 31, FALSE, NULL);

  spello(SPELL_SUMMON_GREATER_DEMON, "summon greater demon", 130, 75, 3, POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_SUMMON, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 35, FALSE, NULL);

  spello(SPELL_WORD_OF_RECALL, "word of recall", 20, 10, 2, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_MANUAL, C1,
         1, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_REMOVE_POISON, "remove poison", 40, 8, 4, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, FALSE, MAG_UNAFFECT
         | MAG_ALTER_OBJ, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_INCENDIARY_NEBULA, "incendiary nebula", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_AREA, C1, 15, DAM_FIRE,
         SKILL_SPHERE_FIRE, 35, FALSE, NULL);

  spello(SPELL_MOONWELL, "moonwell", 50, 50, 0, POS_STANDING, FALSE,
         TAR_CHAR_WORLD | TAR_NOT_SELF, FALSE, MAG_MANUAL, C1,
         18, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);

  spello(SPELL_SENSE_LIFE, "sense life", 20, 10, 2, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 19, FALSE,
         "You feel less aware of your surroundings.");

  spello(SPELL_SOULSHIELD, "soulshield", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_PROT, 5, FALSE,
         "The aura guarding your body fades away.");

  spello(SPELL_DESTROY_UNDEAD, "destroy undead", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED3, DAM_ALIGN, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_STONE_SKIN, "stone skin", 50, 25, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_PROT, 19, FALSE,
         "&3&dYour skin softens and returns to normal.&0");

  spello(SPELL_HASTE, "haste", 50, 25, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 19, FALSE,
         "Your pulse returns to normal.");

  spello(SPELL_BLUR, "blur", 90, 60, 3, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 25, TRUE,
         "The world solidifies as your vision unblurs, and you return to normal speed.");

  spello(SPELL_LESSER_ENDURANCE, "lesser endurance", 50, 30, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your endurance returns to normal.");

  spello(SPELL_ENDURANCE, "endurance", 50, 30, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 7, FALSE,
         "Your endurance returns to normal.");

  spello(SPELL_GREATER_ENDURANCE, "greater endurance", 50, 30, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 11, FALSE,
         "Your endurance returns to normal.");

  spello(SPELL_VITALITY, "vitality", 50, 30, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 7, FALSE,
         "Your magical vitality drains away.");

  spello(SPELL_DRAGONS_HEALTH, "dragons health", 50, 30, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 21, TRUE,
         "Your health returns to normal.");

  spello(SPELL_WALL_OF_FOG, "wall of fog", 50, 25, 5, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_ROOM, C1,
         CAST_SPEED5, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 21, FALSE,
         "The fog seems to clear out.");

  spello(SPELL_FARSEE, "farsee", 25, 10, 1, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 9, FALSE,
         "Your pupils dilate as your vision returns to normal.");

  spello(SPELL_CAUSE_LIGHT, "cause light", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED2, DAM_HEAL, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_CAUSE_SERIOUS, "cause serious", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED3, DAM_HEAL, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_CAUSE_CRITIC, "cause critical", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED4, DAM_HEAL, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_IDENTIFY, "identify", 0, 0, 0, POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM | TAR_CONTACT, FALSE, MAG_MANUAL, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 5, FALSE, NULL);

 spello(SPELL_BONE_ARMOR, "bone armor", 0, 0, 0, POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_PROT, 12, FALSE,
         "&3Your skin returns to normal.&0");

  spello(SPELL_DEGENERATION, "degeneration", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, FALSE, MAG_MANUAL, C1,
         CAST_SPEED4, DAM_HEAL, SKILL_SPHERE_DEATH, 12, TRUE, NULL);

  spello(SPELL_SOUL_TAP, "soul tap", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDF, DAM_HEAL, SKILL_SPHERE_DEATH, 22, FALSE, NULL);

  spello(SPELL_REBUKE_UNDEAD, "rebuke undead", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 8, FALSE, NULL);

  spello(SPELL_DECAY, "decay", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDD, DAM_HEAL, SKILL_SPHERE_DEATH, 5, FALSE, NULL);

  spello(SPELL_SPINECHILLER, "spinechiller", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_AFFECT, C1,
         CAST_SPEEDE, DAM_UNDEFINED, SKILL_SPHERE_DEATH, 10, FALSE,
         "The tingling in your spine subsides.");

  spello(SPELL_PYRE, "pyre", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         CAST_SPEEDD, DAM_FIRE, SKILL_SPHERE_FIRE, 15, FALSE,
         "The flames enveloping you die down.");

  spello(SPELL_IRON_MAIDEN, "iron maiden", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_PIERCE, SKILL_SPHERE_DEATH, 14, FALSE, NULL);

  spello(SPELL_FRACTURE, "fracture", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         CAST_SPEEDE, DAM_SLASH, SKILL_SPHERE_GENERIC, 17, FALSE, NULL);

  spello(SPELL_BONE_DRAW, "bone draw", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED2, DAM_SLASH, SKILL_SPHERE_SUMMON, 16, FALSE,
         "The bones holding you down crumble to dust.");

  spello(SPELL_NATURES_GUIDANCE, "natures guidance", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED2, DAM_UNDEFINED, SKILL_SPHERE_ENCHANT, 8, FALSE,
         "You suddenly feel a little unguided.");

  spello(SPELL_MOONBEAM, "moonbeam", 0, 0, 0, POS_STANDING, TRUE,
         TAR_IGNORE | TAR_OUTDOORS | TAR_NIGHT_ONLY, TRUE, MAG_MANUAL, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_WATER, 10, FALSE, NULL);

  /* Declaration of skills - sets skills up so that immortals can use
   * them by default. Determines whether a skill is considered
   * "humanoid only". */

  /* skillo(skill, name, humanoid, target mode) */
  /* target mode for skills is designed for use with TAR_CONTACT and TAR_DIRECT,
     which allow you to limit whether an attack may be caught by guard or not. */
  skillo(SKILL_BACKSTAB, "backstab", TRUE, TAR_CONTACT);
  skillo(SKILL_INSTANT_KILL, "instant kill", TRUE, TAR_CONTACT);
  skillo(SKILL_BIND, "bind", TRUE, TAR_CONTACT);
  skillo(SKILL_CIRCLE, "circle", FALSE, TAR_CONTACT);
  skillo(SKILL_BASH, "bash", FALSE, TAR_CONTACT);
  skillo(SKILL_DISARM, "disarm", TRUE, TAR_CONTACT);
  skillo(SKILL_HIDE, "hide", FALSE, 0);
  skillo(SKILL_KICK, "kick", TRUE, TAR_CONTACT);
  skillo(SKILL_PICK_LOCK, "pick lock", TRUE, 0);
  skillo(SKILL_PUNCH, "punch", TRUE, TAR_CONTACT);
  skillo(SKILL_RESCUE, "rescue", FALSE, 0);
  skillo(SKILL_SNEAK, "sneak", FALSE, 0);
  skillo(SKILL_STEAL, "steal", TRUE, TAR_CONTACT);
  skillo(SKILL_TRACK, "track", FALSE, 0);
  skillo(SKILL_HUNT, "hunt", FALSE, 0);
  skillo(SKILL_DUAL_WIELD, "dual wield", TRUE, 0);
  skillo(SKILL_DOUBLE_ATTACK, "double attack", FALSE, 0);
  skillo(SKILL_BERSERK, "berserk", FALSE, 0);
  skillo(SKILL_SPRINGLEAP, "springleap", FALSE, TAR_CONTACT);
  skillo(SKILL_MOUNT, "mount", FALSE, 0);
  skillo(SKILL_RIDING, "riding", FALSE, 0);
  skillo(SKILL_TAME, "tame", FALSE, 0);
  skillo(SKILL_THROATCUT, "throatcut", TRUE, TAR_CONTACT);
  skillo(SKILL_DOORBASH, "doorbash", FALSE, 0);
  skillo(SKILL_PARRY, "parry", TRUE, 0);
  skillo(SKILL_DODGE, "dodge", FALSE, 0);
  skillo(SKILL_RIPOSTE, "riposte", TRUE, 0);
  skillo(SKILL_MEDITATE, "meditate", FALSE, 0);
  skillo(SKILL_QUICK_CHANT, "quick chant", FALSE, 0);
  skillo(SKILL_CHANT, "chant", FALSE, 0);
  skillo(SKILL_SAFEFALL, "safefall", FALSE, 0);
  skillo(SKILL_BAREHAND, "barehand", FALSE, TAR_CONTACT);
  skillo(SKILL_SHAPECHANGE, "shapechange", FALSE, 0);
  skillo(SKILL_SWITCH, "switch", FALSE, TAR_CONTACT);
  skillo(SKILL_GUARD, "guard", FALSE, 0);
  skillo(SKILL_BREATHE, "breathe", FALSE, 0);
  skillo(SKILL_SWEEP, "sweep", FALSE, TAR_CONTACT);
  skillo(SKILL_ROAR, "roar", FALSE, 0);
  skillo(SKILL_DOUSE, "douse", FALSE, 0);
  skillo(SKILL_SCRIBE, "scribe", TRUE, 0);
  skillo(SKILL_HITALL, "hitall", FALSE, TAR_CONTACT);
  skillo(SKILL_BANDAGE, "bandage", TRUE, 0);
  skillo(SKILL_FIRST_AID, "first aid", TRUE, 0);
  skillo(SKILL_CHANT, "chant", FALSE, 0);
  skillo(SKILL_SUMMON_MOUNT, "summon mount", TRUE, 0);
  skillo(SKILL_KNOW_SPELL, "spell knowledge", FALSE, 0);
  skillo(SKILL_SPHERE_GENERIC, "sphere of generic", FALSE, 0);
  skillo(SKILL_SPHERE_FIRE, "sphere of fire", FALSE, 0);
  skillo(SKILL_SPHERE_WATER, "sphere of water", FALSE, 0);
  skillo(SKILL_SPHERE_EARTH, "sphere of earth", FALSE, 0);
  skillo(SKILL_SPHERE_AIR, "sphere of air", FALSE, 0);
  skillo(SKILL_SPHERE_HEALING, "sphere of healing", FALSE, 0);
  skillo(SKILL_SPHERE_PROT, "sphere of protection", FALSE, 0);
  skillo(SKILL_SPHERE_ENCHANT, "sphere of enchantment", FALSE, 0);
  skillo(SKILL_SPHERE_SUMMON, "sphere of summoning", FALSE, 0);
  skillo(SKILL_SPHERE_DEATH, "sphere of death", FALSE, 0);
  skillo(SKILL_SPHERE_DIVIN, "sphere of divination", FALSE, 0);
  skillo(SKILL_BLUDGEONING, "bludgeoning weapons", TRUE, TAR_CONTACT);
  skillo(SKILL_PIERCING, "piercing weapons", TRUE, TAR_CONTACT);
  skillo(SKILL_SLASHING, "slashing weapons", TRUE, TAR_CONTACT);
  skillo(SKILL_2H_BLUDGEONING, "2H bludgeoning weapons", TRUE, TAR_CONTACT);
  skillo(SKILL_2H_PIERCING, "2H piercing weapons", TRUE, TAR_CONTACT);
  skillo(SKILL_2H_SLASHING, "2H slashing weapons", TRUE, TAR_CONTACT);
  skillo(SKILL_MISSILE, "missile weapons", TRUE, TAR_DIRECT);
  skillo(SKILL_EYE_GOUGE, "eye gouge", TRUE, TAR_CONTACT);
  skillo(SKILL_RETREAT, "retreat", FALSE, 0);
  skillo(SKILL_GROUP_RETREAT, "group retreat", FALSE, 0);
  skillo(SKILL_CORNER, "corner", FALSE, 0);
  skillo(SKILL_STEALTH, "stealth", FALSE, 0);
  skillo(SKILL_SHADOW, "shadow", FALSE, 0);
  skillo(SKILL_CONCEAL, "conceal", FALSE, 0);
  skillo(SKILL_PECK, "peck", FALSE, TAR_CONTACT);
  skillo(SKILL_CLAW, "claw", FALSE, TAR_CONTACT);
  skillo(SKILL_ELECTRIFY, "electrify", FALSE, TAR_DIRECT);
  skillo(SKILL_TANTRUM, "tantrum", FALSE, TAR_CONTACT);
  skillo(SKILL_GROUND_SHAKER, "ground shaker", FALSE, 0);
  skillo(SKILL_BATTLE_HOWL, "battle howl", FALSE, 0);
  skillo(SKILL_MAUL, "maul", FALSE, TAR_CONTACT);
  skillo(SKILL_BODYSLAM, "bodyslam", FALSE, TAR_CONTACT);
  skillo(SKILL_VAMP_TOUCH, "vampiric touch", FALSE, TAR_CONTACT);

  /* Set up monk/berserker chants */
  chanto(CHANT_REGENERATION, "regeneration", POS_SITTING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, 0, FALSE,
         "Your healthy feeling subsides.");

  chanto(CHANT_BATTLE_HYMN, "battle hymn", POS_STANDING, FALSE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, 0, FALSE,
         "Your rage fades away.");

  chanto(CHANT_WAR_CRY, "war cry", POS_STANDING, FALSE,
         TAR_IGNORE, FALSE, MAG_GROUP, 0, FALSE,
         "Your determination level returns to normal.");

  chanto(CHANT_PEACE, "peace", POS_STANDING, TRUE,
         TAR_IGNORE, FALSE, MAG_MANUAL, 0, FALSE, NULL);

  chanto(CHANT_SHADOWS_SORROW_SONG, "shadows sorrow song", POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_MASS, 0, FALSE,
         "The shadows in your mind clear up.");

  chanto(CHANT_IVORY_SYMPHONY, "ivory symphony", POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_MANUAL, 0, FALSE,
         "Feeling returns to your limbs.");

  chanto(CHANT_ARIA_OF_DISSONANCE, "aria of dissonance", POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, 0, TRUE,
         "The dissonance stops ringing in your ears.");

  chanto(CHANT_SONATA_OF_MALAISE, "sonata of malaise", POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_MASS, 0, FALSE,
         "The sonata of malaise stops echoing in your ears.");

  chanto(CHANT_APOCALYPTIC_ANTHEM, "apocalyptic anthem", POS_STANDING, TRUE,
         TAR_IGNORE, TRUE, MAG_MANUAL, 0, TRUE, NULL);

  chanto(CHANT_SEED_OF_DESTRUCTION, "seed of destruction", POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, 0, TRUE,
         "The disease leaves you.");

  chanto(CHANT_SPIRIT_WOLF, "spirit of the wolf", POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, 0, FALSE,
         "Your fangs recede and you lose your wolf-like spirit.");

  chanto(CHANT_SPIRIT_BEAR, "spirit of the bear", POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, 0, FALSE,
         "Your claws become decidedly less bear-like.");

  chanto(CHANT_INTERMINABLE_WRATH, "interminable wrath", POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_SELF_ONLY,
         FALSE, MAG_AFFECT, 0, FALSE, NULL);

  /* Set up bard songs. */
/*  songo(SONG_CHORUS_OF_COURAGE, "chorus of courage", POS_STANDING, FALSE,
        TAR_CHAR_ROOM, FALSE, MAG_AFFECT, 0, FALSE,
        "Your courage leaves you.");
*/

  /* Set up non-skill effects */
  effecto(SKILL_AWARE, "aware", "");
}

static int skill_comparator(int a, int b)
{
  return strcmp(skills[a].name, skills[b].name);
}

void sort_skills(void)
{
   int i;

   /* initialize array */
   for (i = 0; i <= TOP_SKILL; ++i)
      skill_sort_info[i] = i;

   /* Start at element 1 to skip 'RESERVED' */
   sort(quicksort, &skill_sort_info[1], TOP_SKILL, skill_comparator);
}

void skill_assign(int skillnum, int class, int level)
{
  int okay = TRUE;

  if (skillnum < 0 || skillnum > TOP_SKILL_DEFINE) {
    sprintf(buf, "SYSERR: attempting assign to illegal talent num %d", skillnum);
    log("%s",buf);
    return;
  }

  if (class < 0 || class >= NUM_CLASSES) {
    sprintf(buf, "SYSERR: assigning '%s' to illegal class %d",
            skill_name(skillnum), class);
    log("%s",buf);
    okay = FALSE;
  }

  if (level < 1 || level > LVL_IMPL) {
    sprintf(buf, "SYSERR: assigning '%s' to illegal level %d",
            skill_name(skillnum), level);
    log("%s",buf);
    okay = FALSE;
  }

  if (okay) {
    skills[skillnum].min_level[class] = level;
    skills[skillnum].lowest_level = MIN(skills[skillnum].lowest_level, level);
  }

}


int level_to_circle(int level)
{
   return LIMIT(1, (level - 1) / 8 + 1, NUM_SPELL_CIRCLES);
}

int circle_to_level(int circle)
{
   return LIMIT(1, (circle - 1) * 8 + 1, LVL_IMPL);
}

bool get_spell_assignment_circle(struct char_data *ch, int spell,
      int *circle_assignment, int *level_assignment)
{
   int i, tmp_level;

   if (IS_SPELL(spell)) {
      if (ch && skills[spell].min_level[GET_CLASS(ch)] <= GET_LEVEL(ch) &&
            /* < LVL_IMMORT tests whether the spell is actually assigned
             * to this class (unassigned ones get set to LVL_IMMORT by
             * dskill()). This only matters when imms cast spells that
             * aren't assigned to their class... */
            skills[spell].min_level[GET_CLASS(ch)] < LVL_IMMORT) {
         *level_assignment = skills[spell].min_level[GET_CLASS(ch)];
         *circle_assignment = level_to_circle(*level_assignment);
         return TRUE;
      } else {
         /* No character: may have been cast from an object.
          * Use the lowest class-assignment level. */
         tmp_level = 100;
         for (i = 0; i < NUM_CLASSES; i++) {
            if (skills[spell].min_level[i] < tmp_level) {
               tmp_level = skills[spell].min_level[i];
            }
         }
         if (tmp_level < 100) {
            *level_assignment = tmp_level;
            *circle_assignment = level_to_circle(*level_assignment);
            return TRUE;
         }
      }
   }
   return FALSE;
}

/***************************************************************************
 * $Log: skills.c,v $
 * Revision 1.68  2010/06/05 14:56:27  mud
 * Moving cooldowns to their own file.
 *
 * Revision 1.67  2009/08/02 20:20:27  myc
 * Adding pyre and fracture spells.
 *
 * Revision 1.66  2009/07/18 01:17:23  myc
 * Adding decay, iron maiden, spinechiller, and bone draw spells
 * for necromancer.
 *
 * Revision 1.65  2009/06/20 23:14:13  myc
 * Fix typo in wearoff message for speak in tongues.
 *
 * Revision 1.64  2009/03/21 19:11:37  myc
 * Save the duration each cooldown started at.
 *
 * Revision 1.63  2009/03/21 06:33:36  jps
 * Make phosphoric embers mag_manual
 *
 * Revision 1.62  2009/03/21 06:20:43  jps
 * Fix single-target sorcerer damage for spells that imms cast which
 * are not assigned to their class.
 *
 * Revision 1.61  2009/03/20 16:06:04  jps
 * Removed spells of lesser/greater invocation.
 *
 * Revision 1.60  2009/03/20 15:12:04  jps
 * Added a generic 'recall' spell to be assigned to town recall
 * scrolls, so that the object-spell verifier doesn't complain.
 *
 * Revision 1.59  2009/03/20 06:15:17  myc
 * Adding a TAR_GROUND cast requirement.  Added detonation,
 * phosphoric embers, positive field, and acid burst spells.
 * Removed combust and heatwave.  Made soul tap a manual spell.
 *
 * Revision 1.58  2009/03/17 08:59:25  jps
 * Remove leftover debugging statement
 *
 * Revision 1.57  2009/03/16 09:44:13  jps
 * Allow skills to improve normally if assigned by race
 *
 * Revision 1.56  2009/03/09 16:57:47  myc
 * Made detect poison more like detect align.
 *
 * Revision 1.55  2009/03/08 23:34:14  jps
 * Renamed spells.[ch] to casting.
 *
 * Revision 1.54  2009/03/08 21:43:27  jps
 * Split lifeforce, composition, charsize, and damage types from chars.c
 *
 * Revision 1.53  2009/03/04 05:14:16  myc
 * Change summon corpse/shift corpse to use a custom match function
 * on the new find obj system in order to only target corpses.
 *
 * Revision 1.52  2009/01/16 23:36:34  myc
 * Add "skill" name/wear off message for 'aware'.
 *
 * Revision 1.51  2008/09/20 08:02:27  jps
 * Removed comprehend language spell.
 *
 * Revision 1.50  2008/09/12 20:16:36  jps
 * Made waterform into a quest spell.
 *
 * Revision 1.49  2008/09/11 02:50:02  jps
 * Changed skills so you have a minimum position, and fighting_ok fields.
 *
 * Revision 1.48  2008/09/01 18:29:38  jps
 * consolidating cooldown code in skills.c/h
 *
 * Revision 1.47  2008/09/01 07:31:31  jps
 * Change skill sorter to operate within the range that accessors do
 *
 * Revision 1.46  2008/08/25 00:20:33  myc
 * Changed the way mobs memorize spells.
 *
 * Revision 1.45  2008/08/24 03:15:57  myc
 * Set all skills and spells to default to DAM_UNDEFINED instead
 * of DAM_SLASHING (0).
 *
 * Revision 1.44  2008/08/20 05:03:13  jps
 * Removed the damage type 'magic'.
 *
 * Revision 1.43  2008/08/10 19:33:58  jps
 * Moved level_to_circle to skills.c. Added get_spell_assignment_circle so
 * damage spells can be properly calibrated.
 *
 * Revision 1.42  2008/08/10 17:20:26  jps
 * Mark soul reaver as violent.
 *
 * Revision 1.41  2008/08/10 16:23:11  jps
 * Make severance and soul reaver spells not quest.
 *
 * Revision 1.40  2008/08/10 01:58:49  jps
 * Added spells severance and soul reaver for illusionists.
 *
 * Revision 1.39  2008/06/21 17:28:38  jps
 * Made more use of the VALID_CLASS macro.
 *
 * Revision 1.38  2008/05/19 05:47:00  jps
 * Add mesmerize spell.
 *
 * Revision 1.37  2008/05/18 22:53:22  jps
 * Adding hysteria spell.
 *
 * Revision 1.36  2008/05/18 20:16:11  jps
 * Created fight.h and set dependents.
 *
 * Revision 1.35  2008/05/18 17:59:40  jps
 * Adding spello definition for familiarity.
 *
 * Revision 1.34  2008/05/18 03:39:05  jps
 * Gave the "detect invisibility" and "detect alignment" spells their
 * full, unabbreviated names. I'm sure this will cause output
 * misalignments...
 *
 * Revision 1.33  2008/05/18 02:33:28  jps
 * Change improve_skill_offensively so that it doesn't insist on
 * an opponent. Thus, switch can improve.
 *
 * Revision 1.32  2008/05/18 02:04:21  jps
 * Added isolation spell.
 *
 * Revision 1.31  2008/05/12 00:44:21  jps
 * Add spello calls for nightmare and discorporate.
 *
 * Revision 1.30  2008/04/23 19:58:53  myc
 * Made sort_skills use the quicksort.
 *
 * Revision 1.29  2008/04/19 21:10:31  myc
 * Added a 'show skill' subcommand, which required a list of
 * target flag and routine type strings.
 *
 * Revision 1.28  2008/04/14 08:36:09  jps
 * Add spello() call for spell of illusory wall.
 *
 * Revision 1.27  2008/04/14 02:17:16  jps
 * Adding spello() call for "glory" spell.
 *
 * Revision 1.26  2008/04/13 18:29:59  jps
 * Add spello() call for confusion.
 *
 * Revision 1.25  2008/04/07 03:02:54  jps
 * Changed the POS/STANCE system so that POS reflects the position
 * of your body, while STANCE describes your condition or activity.
 *
 * Revision 1.24  2008/04/05 16:31:36  jps
 * Forgot to add damage type to dispel magic spell.
 *
 * Revision 1.23  2008/04/02 17:41:56  myc
 * Fixed vampiric touch.
 *
 * Revision 1.22  2008/03/30 15:37:36  jps
 * Fix spelling of riposte.
 *
 * Revision 1.21  2008/03/29 16:28:58  jps
 * Make several spells do "mental" damage.
 *
 * Revision 1.20  2008/03/28 17:54:53  myc
 * Now using flagvectors for effect, mob, player, preference, room, and
 * room effect flags.  AFF, AFF2, and AFF3 flags are now just EFF flags.
 *
 * Revision 1.19  2008/03/27 17:27:26  jps
 * Allow dark presence to operate on objects.
 *
 * Revision 1.18  2008/03/25 21:59:32  jps
 * Doing away with earth/air damage, going to crush, shock, water, cold.
 *
 * Revision 1.17  2008/03/24 08:43:09  jps
 * Change acid breath's damage type to acid.
 *
 * Revision 1.16  2008/03/23 18:42:21  jps
 * Using the new damage types defined in chars.h for spell damage.
 *
 * Revision 1.15  2008/03/21 15:01:17  myc
 * Removed languages.
 *
 * Revision 1.14  2008/03/10 18:01:17  myc
 * Added bodyslam skillo define.
 *
 * Revision 1.13  2008/03/09 18:10:19  jps
 * Added definition of misdirection spell.
 *
 * Revision 1.12  2008/03/09 08:59:55  jps
 * Make fear into a manual spell.
 *
 * Revision 1.11  2008/03/08 22:29:06  myc
 * Moving shapechange and chant to the cooldown system.
 *
 * Revision 1.10  2008/03/07 21:21:57  myc
 * Replaced action delays and skill delays with a single list of
 * 'cooldowns', which are decremented by a recurring event and
 * also save to the player file.
 *
 * Revision 1.9  2008/02/23 01:03:54  myc
 * Removing the min_circle and lowest_circle fields on the skillinfo
 * struct.  They are redundant; use the level fields combined with
 * LEVEL_TO_CIRCLE macro.  Renaming spell_level to skill_assign and
 * moving it here.
 *
 * Revision 1.8  2008/02/09 04:27:47  myc
 * Now relying on math header file.
 *
 * Revision 1.7  2008/02/06 21:53:53  myc
 * The first aid skill define was missing.
 *
 * Revision 1.6  2008/01/29 16:51:12  myc
 * Moving skill names to the skilldef struct.
 * Adding the concept of contact and direct skills/spells.
 *
 * Revision 1.5  2008/01/27 21:18:20  myc
 * Adding berserker skill and chant defines.
 *
 * Revision 1.4  2008/01/26 23:19:28  jps
 * Remove the equipment-destroying manual spell for acid breath.
 *
 * Revision 1.3  2008/01/26 14:26:31  jps
 * Moved a lot of skill-related code into skills.h and skills.c.
 *
 * Revision 1.2  2008/01/26 12:32:23  jps
 * Move improve_skills here. Add improve_skills_offensively() so your skills
 * won't improve when used against illusions.
 *
 * Revision 1.1  2008/01/26 10:44:41  jps
 * Initial revision
 *
 ***************************************************************************/
@


1.68
log
@Moving cooldowns to their own file.
@
text
@d2 1
a2 1
 * $Id: skills.c,v 1.67 2009/08/02 20:20:27 myc Exp mud $
d1722 1
a1722 1
    log(buf);
d1729 1
a1729 1
    log(buf);
d1736 1
a1736 1
    log(buf);
d1794 3
@


1.67
log
@Adding pyre and fracture spells.
@
text
@d2 1
a2 1
 * $Id: skills.c,v 1.66 2009/07/18 01:17:23 myc Exp myc $
a1791 90
/* ***** COOLDOWNS ***** */

const char *cooldowns[NUM_COOLDOWNS + 1] = {
  "backstab",
  "bash",
  "instant kill",
  "disarm",
  "fumbling primary weapon",
  "dropped primary weapon",
  "fumbling secondary weapon",
  "dropped secondary weapon",
  "summon mount",
  "lay hands",
  "first aid",
  "eye gouge",
  "throatcut",
  "shapechange",
  "chant",
  "innate invis",
  "inn strength",
  "inn darkness",
  "inn levitate",
  "\n"
};

void cooldown_wearoff(struct char_data *ch, int cooldown) {
  switch (cooldown) {
  case CD_DROPPED_PRIMARY:
  case CD_DROPPED_SECONDARY:
    if (IS_NPC(ch))
      pickup_dropped_weapon(ch);
    break;
  case CD_FUMBLING_PRIMARY:
  case CD_FUMBLING_SECONDARY:
    act("$n finally regains control of $s weapon.", FALSE, ch, 0, 0, TO_ROOM);
    act("You finally regain control of your weapon.", FALSE, ch, 0, 0, TO_CHAR);
    break;
  }
}

EVENTFUNC(cooldown_handler)
{
  struct char_data *ch = (struct char_data *) event_obj;
  int i, found = FALSE;

  for (i = 0; i < NUM_COOLDOWNS; ++i) {
    if (GET_COOLDOWN(ch, i)) {
      /* Decrement cooldown counter */
      if ((GET_COOLDOWN(ch, i) -= PULSE_COOLDOWN) > 0) {
        /* Cooldown still nonzero */
        found = TRUE;
        continue;
      }
      else
        /* Set to zero in case it went negative */
        GET_COOLDOWN(ch, i) = 0;
      /* Cooldown has just worn off */
      cooldown_wearoff(ch, i);
    }
  }

  if (found)
    return PULSE_COOLDOWN;

  REMOVE_FLAG(GET_EVENT_FLAGS(ch), EVENT_COOLDOWN);
  return EVENT_FINISHED;
}

void SET_COOLDOWN(struct char_data *ch, int type, int amount)
{
  GET_COOLDOWN(ch, type) = amount;
  GET_COOLDOWN_MAX(ch, type) = amount;

  if (amount && !EVENT_FLAGGED(ch, EVENT_COOLDOWN)) {
    SET_FLAG(GET_EVENT_FLAGS(ch), EVENT_COOLDOWN);
    event_create(EVENT_COOLDOWN, cooldown_handler, ch, FALSE,
                 &ch->events, PULSE_COOLDOWN);
  }
}

void clear_cooldowns(struct char_data *ch)
{
   int i;
   for (i = 0; i < NUM_COOLDOWNS; ++i)
      GET_COOLDOWN(ch, i) = 0;
   cancel_event(GET_EVENTS(ch), EVENT_COOLDOWN);
}

/* ^^^^^ COOLDOWNS ^^^^^ */

d1794 3
@


1.66
log
@Adding decay, iron maiden, spinechiller, and bone draw spells
for necromancer.
@
text
@d2 1
a2 1
 * $Id: skills.c,v 1.65 2009/06/20 23:14:13 myc Exp myc $
d1524 1
a1524 1
         TAR_CHAR_ROOM | TAR_FIGHT_SELF, TRUE, MAG_MANUAL, C1,
d1533 1
a1533 1
         TAR_CHAR_ROOM | TAR_FIGHT_SELF, TRUE, MAG_MANUAL, C1,
d1884 4
@


1.65
log
@Fix typo in wearoff message for speak in tongues.
@
text
@d2 1
a2 1
 * $Id: skills.c,v 1.64 2009/03/21 19:11:37 myc Exp myc $
d1504 1
a1504 1
         CAST_SPEED4, DAM_HEAL, SKILL_SPHERE_HEALING, 12, TRUE, NULL);
d1514 27
d1884 3
@


1.64
log
@Save the duration each cooldown started at.
@
text
@d2 1
a2 1
 * $Id: skills.c,v $
d918 1
a918 1
         "Your vocabular diminishes drastically.");
d1857 3
@


1.63
log
@Make phosphoric embers mag_manual
@
text
@d2 3
d1790 15
d1822 1
a1822 12
      switch (i) {
      case CD_DROPPED_PRIMARY:
      case CD_DROPPED_SECONDARY:
        if (IS_NPC(ch))
          pickup_dropped_weapon(ch);
        break;
      case CD_FUMBLING_PRIMARY:
      case CD_FUMBLING_SECONDARY:
        act("$n finally regains control of $s weapon.", FALSE, ch, 0, 0, TO_ROOM);
        act("You finally regain control of your weapon.", FALSE, ch, 0, 0, TO_CHAR);
        break;
      }
d1836 1
d1857 3
@


1.62
log
@Fix single-target sorcerer damage for spells that imms cast which
are not assigned to their class.
@
text
@d683 2
a684 2
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_SHOCK, SKILL_SPHERE_EARTH, 18, FALSE, NULL);
d1849 4
@


1.61
log
@Removed spells of lesser/greater invocation.
@
text
@d1734 6
a1739 1
      if (ch && skills[spell].min_level[GET_CLASS(ch)] <= GET_LEVEL(ch)) {
d1748 1
a1748 1
            if (skills[spell].min_level[i] < tmp_level)
d1750 1
d1849 3
@


1.60
log
@Added a generic 'recall' spell to be assigned to town recall
scrolls, so that the object-spell verifier doesn't complain.
@
text
@a916 8
  spello(SPELL_GREATER_INVOCATION, "greater invocation", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_LESSER_INVOCATION, "lesser invocation", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
         CAST_SPEED4, DAM_UNDEFINED, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

d1843 4
@


1.59
log
@Adding a TAR_GROUND cast requirement.  Added detonation,
phosphoric embers, positive field, and acid burst spells.
Removed combust and heatwave.  Made soul tap a manual spell.
@
text
@d812 4
d1851 5
@


1.58
log
@Remove leftover debugging statement
@
text
@d57 1
d562 8
a569 3
  spello(SPELL_COMBUST, "combust", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDF, DAM_FIRE, SKILL_SPHERE_FIRE, 23, FALSE, NULL);
d678 7
a684 3
  spello(SPELL_HEATWAVE, "heatwave", 0, 0, 0, POS_STANDING, TRUE,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_FIRE, SKILL_SPHERE_FIRE, 21, FALSE, NULL);
d1508 2
a1509 3
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED4, DAM_HEAL, SKILL_SPHERE_GENERIC, 15, FALSE,
         "Your hold on another's soul ceases and your own body weakens slightly.");
d1847 3
@


1.57
log
@Allow skills to improve normally if assigned by race
@
text
@a349 1
         printf("%s: prof=%d current skill=%d\n", GET_NAME(ch), prof, GET_SKILL(ch, skill));
d1838 3
@


1.56
log
@Made detect poison more like detect align.
@
text
@d350 1
d352 8
a359 1
         if (GET_SKILL(ch, skill) < prof)
d361 1
d1839 3
@


1.55
log
@Renamed spells.[ch] to casting.
@
text
@d1209 3
a1211 2
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, FALSE, MAG_MANUAL, C1,
         CAST_SPEED1, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 13, FALSE, NULL);
d1830 3
@


1.54
log
@Split lifeforce, composition, charsize, and damage types from chars.c
@
text
@d23 1
a23 1
#include "spells.h"
d1829 3
@


1.53
log
@Change summon corpse/shift corpse to use a custom match function
on the new find obj system in order to only target corpses.
@
text
@d28 1
d1829 4
@


1.52
log
@Add "skill" name/wear off message for 'aware'.
@
text
@d1300 2
a1301 2
         TAR_OBJ_WORLD, FALSE, MAG_MANUAL, C1,
         CAST_SPEED6, DAM_UNDEFINED, SKILL_SPHERE_SUMMON,17, FALSE, NULL);
d1304 1
a1304 1
         TAR_OBJ_WORLD, FALSE, MAG_MANUAL, C1,
d1828 3
@


1.51
log
@Removed comprehend language spell.
@
text
@d470 2
d1649 3
d1828 3
@


1.50
log
@Made waterform into a quest spell.
@
text
@a1071 5
  spello(SPELL_COMPREHEND_LANG, "comprehend language", 45, 30, 1, POS_SITTING, FALSE,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_UNDEFINED, SKILL_SPHERE_DIVIN, 15, FALSE,
         "&8Your magical knowledge of language fades away.&0");

d1823 3
@


1.49
log
@Changed skills so you have a minimum position, and fighting_ok fields.
@
text
@d856 1
a856 1
         CAST_SPEED7, DAM_UNDEFINED, SKILL_SPHERE_WATER, 27, FALSE,
d1828 3
@


1.48
log
@consolidating cooldown code in skills.c/h
@
text
@d392 3
a394 3
            byte stance, int targets, byte violent, bool humanoid, int routines,
            int mem_time, int cast_time, int damage_type, int sphere, int pages,
            int quest, char *wearoff)
d407 2
a408 1
  skills[skill].stance = stance;
d437 2
a438 1
  skills[skill].stance = 0;
d455 3
a457 3
      targets, 0, humanoid, 0, 0, 0, 0, 0, 0, 0, NULL);
#define chanto(chant, name, minpos, targets, violent, routines, damage, quest, wearoff) \
     dskill(chant, name, 0, 0, 0, minpos, targets, violent, FALSE, \
d459 2
a460 2
#define songo(song, name, minpos, targets, violent, routines, damage, quest, wearoff) \
     dskill(song, name, 0, 0, 0, minpos, targets, violent, FALSE, \
d462 1
a462 1
#define spello(spl, name, max_mana, min_mana, mana_change, minpos, \
d466 1
a466 1
     dskill(spl, name, max_mana, min_mana, mana_change, minpos, \
d535 1
a535 1
  spello(SPELL_BARKSKIN, "barkskin", 0, 0, 0, STANCE_FIGHTING,
d540 1
a540 1
  spello(SPELL_CIRCLE_OF_FIRE, "circle of fire", 0, 0, 0, STANCE_ALERT,
d545 1
a545 1
  spello(SPELL_GAIAS_CLOAK, "cloak of gaia", 0, 0, 0, STANCE_ALERT,
d550 1
a550 1
  spello(SPELL_COMBUST, "combust", 0, 0, 0, STANCE_FIGHTING,
d554 1
a554 1
  spello(SPELL_CONFUSION, "confusion", 0, 0, 0, STANCE_FIGHTING,
d559 1
a559 1
  spello(SPELL_CREATE_SPRING, "create spring", 0, 0, 0, STANCE_ALERT,
d563 1
a563 1
  spello(SPELL_CREMATE, "cremate", 0, 0, 0, STANCE_FIGHTING,
d567 1
a567 1
  spello(SPELL_DARK_FEAST, "dark feast", 0, 0, 0, STANCE_ALERT,
d571 1
a571 1
  spello(SPELL_DARK_PRESENCE, "dark presence", 0, 0, 0, STANCE_ALERT,
d576 1
a576 1
  spello(SPELL_DEMONIC_ASPECT, "demonic aspect", 0, 0, 0, STANCE_FIGHTING,
d581 1
a581 1
  spello(SPELL_DEMONIC_MUTATION, "demonic mutation", 0, 0, 0, STANCE_ALERT,
d586 1
a586 1
  spello(SPELL_DEMONSKIN, "demonskin", 0, 0, 0, STANCE_FIGHTING,
d591 1
a591 1
  spello(SPELL_DISCORPORATE, "discorporate", 0, 0, 0, STANCE_FIGHTING,
d595 1
a595 1
  spello(SPELL_DISEASE, "disease", 0, 0, 0, STANCE_FIGHTING,
d600 1
a600 1
  spello(SPELL_DIVINE_ESSENCE, "divine essence", 0, 0, 0, STANCE_ALERT,
d604 1
a604 1
  spello(SPELL_ENTANGLE, "entangle", 0, 0, 0, STANCE_FIGHTING,
d609 1
a609 1
  spello(SPELL_EXTINGUISH, "extinguish", 0, 0, 0, STANCE_FIGHTING,
d613 1
a613 1
  spello(SPELL_FAMILIARITY, "familiarity", 0, 0, 0, STANCE_ALERT,
d618 1
a618 1
  spello(SPELL_FIRE_DARTS, "fire darts", 0, 0, 0, STANCE_FIGHTING,
d622 1
a622 1
  spello(SPELL_FIRESHIELD, "fireshield", 0, 0, 0, STANCE_ALERT,
d627 1
a627 1
  spello(SPELL_FIRESTORM, "firestorm", 0, 0, 0, STANCE_FIGHTING,
d631 1
a631 1
  spello(SPELL_FLAME_BLADE, "flame blade", 0, 0, 0, STANCE_ALERT,
d635 1
a635 1
  spello(SPELL_FLOOD, "flood", 0, 0, 0, STANCE_FIGHTING,
d639 1
a639 1
  spello(SPELL_FREEZE, "freeze", 0, 0, 0, STANCE_FIGHTING,
d643 1
a643 1
  spello(SPELL_FREEZING_WIND, "freezing wind", 0, 0, 0, STANCE_FIGHTING,
d647 1
a647 1
  spello(SPELL_ARMOR_OF_GAIA, "armor of gaia", 0, 0, 0, STANCE_ALERT,
d651 1
a651 1
  spello(SPELL_GLORY, "glory", 0, 0, 0, STANCE_ALERT,
d656 1
a656 1
  spello(SPELL_GREATER_VITALITY, "greater vitality", 50, 30, 5, STANCE_ALERT,
d661 1
a661 1
  spello(SPELL_HEATWAVE, "heatwave", 0, 0, 0, STANCE_FIGHTING,
d665 1
a665 1
  spello(SPELL_HEAVENS_GATE, "heavens gate", 0, 0, 0, STANCE_ALERT,
d669 1
a669 1
  spello(SPELL_HELL_BOLT, "hell bolt", 0, 0, 0, STANCE_FIGHTING,
d673 1
a673 1
  spello(SPELL_HELLS_GATE, "hell gate", 0, 0, 0, STANCE_ALERT,
d677 1
a677 1
  spello(SPELL_HELLFIRE_BRIMSTONE, "hellfire and brimstone", 0, 0, 0, STANCE_FIGHTING,
d681 1
a681 1
  spello(SPELL_HYSTERIA, "hysteria", 0, 0, 0, STANCE_FIGHTING,
d686 1
a686 1
  spello(SPELL_ICE_ARMOR, "ice armor", 0, 0, 0, STANCE_ALERT,
d691 1
a691 1
  spello(SPELL_ICE_DAGGER, "ice dagger", 0, 0, 0, STANCE_ALERT,
d695 1
a695 1
  spello(SPELL_ICE_DARTS, "ice darts", 0, 0, 0, STANCE_FIGHTING,
d699 1
a699 1
  spello(SPELL_ICEBALL, "iceball", 0, 0, 0, STANCE_FIGHTING,
d703 1
a703 1
  spello(SPELL_ILLUMINATION, "illumination", 50, 25, 5, STANCE_ALERT,
d709 1
a709 1
  spello(SPELL_ILLUSORY_WALL, "illusory wall", 0, 0, 0, STANCE_ALERT,
d714 1
a714 1
  spello(SPELL_IMMOLATE, "immolate", 0, 0, 0, STANCE_FIGHTING,
d718 1
a718 1
  spello(SPELL_INSANITY, "insanity", 0, 0, 0, STANCE_FIGHTING,
d723 1
a723 1
  spello(SPELL_INVIGORATE, "invigorate", 0, 0, 0, STANCE_ALERT,
d727 1
a727 1
  spello(SPELL_ISOLATION, "isolation", 0, 0, 0, STANCE_ALERT,
d732 1
a732 1
  spello(SPELL_NATURES_EMBRACE, "natures embrace", 0, 0, 0, STANCE_ALERT,
d737 1
a737 1
  spello(SPELL_NIGHTMARE, "nightmare", 0, 0, 0, STANCE_FIGHTING,
d741 1
a741 1
  spello(SPELL_MAGIC_TORCH, "magic torch", 0, 0, 0, STANCE_FIGHTING,
d746 1
a746 1
  spello(SPELL_MELT, "melt", 0, 0, 0, STANCE_FIGHTING,
d750 1
a750 1
  spello(SPELL_MESMERIZE, "mesmerize", 0, 0, 0, STANCE_ALERT,
d755 1
a755 1
  spello(SPELL_METEORSWARM, "meteorswarm", 100, 50, 3, STANCE_FIGHTING,
d759 1
a759 1
  spello(SPELL_MIRAGE, "mirage", 0, 0, 0, STANCE_FIGHTING,
d764 1
a764 1
  spello(SPELL_NEGATE_COLD, "negate cold", 0, 0, 0, STANCE_ALERT,
d769 1
a769 1
  spello(SPELL_NEGATE_HEAT, "negate heat", 0, 0, 0, STANCE_ALERT,
d774 1
a774 1
  spello(SPELL_NIGHT_VISION, "night vision", 0, 0, 0, STANCE_FIGHTING,
d779 1
a779 1
  spello(SPELL_NOURISHMENT, "nourishment", 0, 0, 0, STANCE_ALERT,
d783 1
a783 1
  spello(SPELL_PHANTASM, "phantasm", 0, 0, 0, STANCE_ALERT,
d787 1
a787 1
  spello(SPELL_RAIN, "rain", 0, 0, 0, STANCE_ALERT,
d791 1
a791 1
  spello(SPELL_SANE_MIND, "sane mind", 0, 0, 0, STANCE_ALERT,
d795 1
a795 1
  spello(SPELL_SEVERANCE, "severance", 100, 50, 3, STANCE_FIGHTING,
d799 1
a799 1
  spello(SPELL_SIMULACRUM, "simulacrum", 0, 0, 0, STANCE_ALERT,
d803 1
a803 1
  spello(SPELL_SMOKE, "smoke", 0, 0, 0, STANCE_FIGHTING,
d808 1
a808 1
  spello(SPELL_SOUL_REAVER, "soul reaver", 0, 0, 0, STANCE_FIGHTING,
d812 1
a812 1
  spello(SPELL_STYGIAN_ERUPTION, "stygian eruption", 0, 0, 0, STANCE_FIGHTING,
d816 1
a816 1
  spello(SPELL_SUNRAY, "sunray", 0, 0, 0, STANCE_FIGHTING,
d821 1
a821 1
  spello(SPELL_SUPERNOVA, "supernova", 100, 50, 3, STANCE_FIGHTING,
d825 1
a825 1
  spello(SPELL_URBAN_RENEWAL, "urban renewal", 0, 0, 0, STANCE_ALERT,
d830 1
a830 1
  spello(SPELL_VAPORFORM, "vaporform", 0, 0, 0, STANCE_ALERT,
d835 1
a835 1
  spello(SPELL_VENTRILOQUATE, "ventriloquate", 0, 0, 0, STANCE_RESTING,
d839 1
a839 1
  spello(SPELL_WALL_OF_ICE, "wall of ice", 0, 0, 0, STANCE_ALERT,
d844 1
a844 1
  spello(SPELL_WALL_OF_STONE, "wall of stone", 0, 0, 0, STANCE_ALERT,
d849 1
a849 1
  spello(SPELL_WANDERING_WOODS, "wandering woods", 0, 0, 0, STANCE_ALERT,
d854 1
a854 1
  spello(SPELL_WATERFORM, "waterform", 0, 0, 0, STANCE_ALERT,
d859 1
a859 1
  spello(SPELL_WINGS_OF_HELL, "wings of hell", 0, 0, 0, STANCE_ALERT,
d864 1
a864 1
  spello(SPELL_WRITHING_WEEDS, "writhing weeds", 0, 0, 0, STANCE_FIGHTING,
d870 1
a870 1
  spello(SPELL_WORD_OF_COMMAND, "word of command", 0, 0, 0, STANCE_ALERT,
d874 1
a874 1
  spello(SPELL_WINGS_OF_HEAVEN, "wings of heaven", 0, 0, 0, STANCE_ALERT,
d879 1
a879 1
  spello(SPELL_BANISH, "banish", 0, 0, 0, STANCE_FIGHTING,
d883 1
a883 1
  spello(SPELL_ENLIGHTENMENT, "enlightenment", 0, 0, 0, STANCE_ALERT,
d887 1
a887 1
  spello(SPELL_SPEAK_IN_TONGUES, "speak in tongues", 0, 0, 0, STANCE_ALERT,
d892 1
a892 1
  spello(SPELL_GREATER_INVOCATION, "greater invocation", 0, 0, 0, STANCE_FIGHTING,
d896 1
a896 1
  spello(SPELL_LESSER_INVOCATION, "lesser invocation", 0, 0, 0, STANCE_FIGHTING,
d900 1
a900 1
  spello(SPELL_EXORCISM, "exorcism", 0, 0, 0, STANCE_FIGHTING,
d904 1
a904 1
  spello(SPELL_LESSER_EXORCISM, "lesser exorcism", 0, 0, 0, STANCE_FIGHTING,
d908 1
a908 1
  spello(SPELL_DIVINE_RAY, "divine ray", 0, 0, 0, STANCE_FIGHTING,
d912 1
a912 1
  spello(SPELL_DIVINE_BOLT, "divine bolt", 0, 0, 0, STANCE_FIGHTING,
d916 1
a916 1
  spello(SPELL_PRAYER, "prayer", 0, 0, 0, STANCE_ALERT,
d921 1
a921 1
  spello(SPELL_ELEMENTAL_WARDING, "elemental warding", 0, 0, 0, STANCE_ALERT,
d926 1
a926 1
  spello(SPELL_CIRCLE_OF_LIGHT, "circle of light", 0, 0, 0, STANCE_ALERT,
d931 1
a931 1
  spello(SPELL_FIRE_BREATH, "fire breath", 0, 0, 0, STANCE_FIGHTING,
d935 1
a935 1
  spello(SPELL_GAS_BREATH, "gas breath", 0, 0, 0, STANCE_FIGHTING,
d939 1
a939 1
  spello(SPELL_FROST_BREATH, "frost breath", 0, 0, 0, STANCE_FIGHTING,
d943 1
a943 1
  spello(SPELL_LIGHTNING_BREATH, "lightning breath", 0, 0, 0, STANCE_FIGHTING,
d947 1
a947 1
  spello(SPELL_ACID_BREATH, "acid breath", 0, 0, 0, STANCE_FIGHTING,
d951 1
a951 1
  spello(SPELL_FEAR, "fear", 0, 0, 0, STANCE_FIGHTING,
d956 1
a956 1
  spello(SPELL_MISDIRECTION, "misdirection", 0, 0, 0, STANCE_ALERT,
d961 1
a961 1
  spello(SPELL_CHAIN_LIGHTNING, "chain lightning", 0, 0, 0, STANCE_FIGHTING,
d965 1
a965 1
  spello(SPELL_MASS_INVIS, "mass invisibility", 0, 0, 0, STANCE_ALERT,
d969 1
a969 1
  spello(SPELL_RELOCATE, "relocate", 0, 0, 0, STANCE_ALERT,
d973 1
a973 1
  spello(SPELL_DISINTEGRATE, "disintegrate", 0, 0, 0, STANCE_FIGHTING,
d977 1
a977 1
  spello(SPELL_HARNESS, "harness", 0, 0, 0, STANCE_FIGHTING,
d982 1
a982 1
  spello(SPELL_MINOR_GLOBE, "minor globe", 0, 0, 0, STANCE_ALERT,
d987 1
a987 1
  spello(SPELL_MAJOR_GLOBE, "major globe", 0, 0, 0, STANCE_ALERT,
d992 1
a992 1
  spello(SPELL_COLDSHIELD, "coldshield", 0, 0, 0, STANCE_ALERT,
d997 1
a997 1
  spello(SPELL_MINOR_PARALYSIS, "minor paralysis", 0, 0, 0, STANCE_FIGHTING,
d1002 1
a1002 1
  spello(SPELL_TELEPORT, "teleport", 0, 0, 0, STANCE_FIGHTING,
d1006 1
a1006 1
  spello(SPELL_RAY_OF_ENFEEB, "ray of enfeeblement", 0, 0, 0, STANCE_FIGHTING,
d1011 1
a1011 1
  spello(SPELL_LEVITATE, "levitate", 0, 0, 0, STANCE_ALERT,
d1016 1
a1016 1
  spello(SPELL_WIZARD_EYE, "wizard eye", 0, 0, 0, STANCE_ALERT,
d1020 1
a1020 1
  spello(SPELL_MINOR_CREATION, "minor creation", 0, 0, 0,STANCE_ALERT,
d1024 1
a1024 1
  spello(SPELL_DISPEL_MAGIC, "dispel magic", 0, 0, 0, STANCE_FIGHTING,
d1029 1
a1029 1
  spello(SPELL_UNHOLY_WORD, "unholy word", 0, 0, 0, STANCE_FIGHTING,
d1033 1
a1033 1
  spello(SPELL_HOLY_WORD, "holy word", 0, 0, 0, STANCE_FIGHTING,
d1037 1
a1037 1
  spello(SPELL_ARMOR, "armor", 30, 15, 3, STANCE_FIGHTING,
d1042 1
a1042 1
  spello(SPELL_REDUCE, "reduce", 35, 5, 3, STANCE_ALERT,
d1047 1
a1047 1
  spello(SPELL_ENLARGE, "enlarge", 35, 5, 3, STANCE_ALERT,
d1052 1
a1052 1
  spello(SPELL_BLESS, "bless", 35, 5, 3, STANCE_ALERT,
d1057 1
a1057 1
  spello(SPELL_BLINDNESS, "blindness", 35, 25, 1, STANCE_FIGHTING,
d1063 1
a1063 1
  spello(SPELL_SILENCE, "silence", 0, 0, 0, STANCE_FIGHTING,
d1068 1
a1068 1
  spello(SPELL_FLAMESTRIKE, "flamestrike", 0, 0, 0, STANCE_FIGHTING,
d1072 1
a1072 1
  spello(SPELL_COMPREHEND_LANG, "comprehend language", 45, 30, 1, STANCE_ALERT,
d1077 1
a1077 1
  spello(SPELL_BURNING_HANDS, "burning hands", 30, 10, 3, STANCE_FIGHTING,
d1081 1
a1081 1
  spello(SPELL_CONE_OF_COLD, "cone of cold", 35, 15, 3, STANCE_FIGHTING,
d1085 1
a1085 1
  spello(SPELL_BIGBYS_CLENCHED_FIST, "bigbys clenched fist", 90, 35, 3, STANCE_FIGHTING,
d1089 1
a1089 1
  spello(SPELL_WATERWALK, "waterwalk", 35, 5, 3, STANCE_ALERT,
d1094 1
a1094 1
  spello(SPELL_ICE_SHARDS, "ice shards", 100, 50, 3, STANCE_FIGHTING,
d1098 1
a1098 1
  spello(SPELL_ICE_STORM, "ice storm", 100, 50, 3, STANCE_FIGHTING,
d1102 1
a1102 1
  spello(SPELL_CALL_LIGHTNING, "call lightning", 40, 25, 3, STANCE_FIGHTING,
d1106 1
a1106 1
  spello(SPELL_CHARM, "charm person", 75, 50, 2, STANCE_ALERT,
d1111 1
a1111 1
  spello(SPELL_PLANE_SHIFT, "plane shift", 0, 0, 0, STANCE_ALERT,
d1115 1
a1115 1
  spello(SPELL_CHILL_TOUCH, "chill touch", 30, 10, 3, STANCE_FIGHTING,
d1120 1
a1120 1
  spello(SPELL_CLONE, "clone", 80, 65, 5, STANCE_ALERT,
d1124 1
a1124 1
  spello(SPELL_DARKNESS, "darkness", 50, 25, 5, STANCE_ALERT,
d1130 1
a1130 1
  spello(SPELL_INN_STRENGTH, "innate strength", 35, 30, 1, STANCE_ALERT,
d1135 1
a1135 1
  spello(SPELL_MAJOR_PARALYSIS, "major paralysis", 35, 30, 1, STANCE_ALERT,
d1140 1
a1140 1
  spello(SPELL_COLOR_SPRAY, "color spray", 30, 15, 3, STANCE_FIGHTING,
d1144 1
a1144 1
  spello(SPELL_CONTROL_WEATHER, "control weather", 75, 25, 5, STANCE_ALERT,
d1148 1
a1148 1
  spello(SPELL_CREATE_FOOD, "create food", 30, 5, 4, STANCE_ALERT,
d1152 1
a1152 1
  spello(SPELL_CREATE_WATER, "create water", 30, 5, 4, STANCE_ALERT,
d1156 1
a1156 1
  spello(SPELL_CURE_BLIND, "cure blind", 30, 5, 2, STANCE_ALERT,
d1160 1
a1160 1
  spello(SPELL_CURE_CRITIC, "cure critic", 30, 10, 2, STANCE_FIGHTING,
d1164 1
a1164 1
  spello(SPELL_CURE_SERIOUS, "cure serious", 0, 0, 0, STANCE_FIGHTING,
d1168 1
a1168 1
  spello(SPELL_CURE_LIGHT, "cure light", 30, 10, 2, STANCE_FIGHTING,
d1172 1
a1172 1
  spello(SPELL_VIGORIZE_LIGHT, "vigorize light", 0, 0, 0, STANCE_ALERT,
d1176 1
a1176 1
  spello(SPELL_VIGORIZE_SERIOUS, "vigorize serious", 0, 0, 0, STANCE_ALERT,
d1180 1
a1180 1
  spello(SPELL_VIGORIZE_CRITIC, "vigorize critic", 0, 0, 0, STANCE_ALERT,
d1184 1
a1184 1
  spello(SPELL_CURSE, "curse", 80, 50, 2, STANCE_FIGHTING,
d1190 1
a1190 1
  spello(SPELL_DETECT_ALIGN, "detect alignment", 20, 10, 2, STANCE_ALERT,
d1195 1
a1195 1
  spello(SPELL_DETECT_INVIS, "detect invisibility", 20, 10, 2, STANCE_ALERT,
d1200 1
a1200 1
  spello(SPELL_DETECT_MAGIC, "detect magic", 20, 10, 2, STANCE_ALERT,
d1205 1
a1205 1
  spello(SPELL_FLY, "fly", 50, 5, 3, STANCE_ALERT,
d1210 1
a1210 1
  spello(SPELL_DETECT_POISON, "detect poison", 15, 5, 1, STANCE_ALERT,
d1214 1
a1214 1
  spello(SPELL_DISPEL_EVIL, "dispel evil", 40, 25, 3, STANCE_FIGHTING,
d1218 1
a1218 1
  spello(SPELL_DISPEL_GOOD, "dispel good", 40, 25, 3, STANCE_FIGHTING,
d1222 1
a1222 1
  spello(SPELL_EARTHQUAKE, "earthquake", 40, 25, 3, STANCE_FIGHTING,
d1226 1
a1226 1
  spello(SPELL_DOOM, "doom", 0, 0, 0, STANCE_FIGHTING,
d1230 1
a1230 1
  spello(SPELL_CREEPING_DOOM, "creeping doom", 0, 0, 0, STANCE_FIGHTING,
d1234 1
a1234 1
  spello(SPELL_ENCHANT_WEAPON, "enchant weapon", 150, 100, 10, STANCE_ALERT,
d1238 1
a1238 1
  spello(SPELL_ENERGY_DRAIN, "energy drain", 40, 25, 1, STANCE_FIGHTING,
d1242 1
a1242 1
  spello(SPELL_VAMPIRIC_BREATH, "vampiric breath", 40, 25, 1, STANCE_FIGHTING,
d1246 1
a1246 1
  spello(SPELL_GROUP_ARMOR, "group armor", 50, 30, 2, STANCE_ALERT,
d1250 1
a1250 1
  spello(SPELL_GROUP_RECALL, "group recall", 50, 30, 2, STANCE_FIGHTING,
d1254 1
a1254 1
  spello(SPELL_FIREBALL, "fireball", 40, 30, 2, STANCE_FIGHTING,
d1258 1
a1258 1
  spello(SPELL_FULL_HARM, "full harm", 75, 45, 3, STANCE_FIGHTING,
d1262 1
a1262 1
  spello(SPELL_FULL_HEAL, "full heal", 75, 50, 3, STANCE_FIGHTING,
d1266 1
a1266 1
  spello(SPELL_GROUP_HEAL, "group heal", 80, 60, 5, STANCE_FIGHTING,
d1270 1
a1270 1
  spello(SPELL_HARM, "harm", 45, 15, 3, STANCE_FIGHTING,
d1274 1
a1274 1
  spello(SPELL_HEAL, "heal", 60, 40, 3, STANCE_FIGHTING,
d1278 1
a1278 1
  spello(SPELL_INFRAVISION, "infravision", 25, 10, 1, STANCE_ALERT,
d1283 1
a1283 1
  spello(SPELL_INVISIBLE, "invisibility", 35, 25, 1, STANCE_ALERT,
d1289 1
a1289 1
  spello(SPELL_CONCEALMENT, "concealment", 0, 0, 0, STANCE_ALERT,
d1294 1
a1294 1
  spello(SPELL_LIGHTNING_BOLT, "lightning bolt", 30, 15, 1, STANCE_FIGHTING,
d1298 1
a1298 1
  spello(SPELL_LOCATE_OBJECT, "locate object", 25, 20, 1, STANCE_ALERT,
d1302 1
a1302 1
  spello(SPELL_SUMMON_CORPSE, "summon corpse", 25, 20, 1, STANCE_ALERT,
d1306 1
a1306 1
  spello(SPELL_SHIFT_CORPSE, "shift corpse", 25, 20, 1, STANCE_ALERT,
d1310 1
a1310 1
  spello(SPELL_MAGIC_MISSILE, "magic missile", 0, 0, 0, STANCE_FIGHTING,
d1314 1
a1314 1
  spello(SPELL_POISON, "poison", 50, 20, 3, STANCE_FIGHTING,
d1320 1
a1320 1
  spello(SPELL_PROT_FROM_EVIL, "protection from evil", 40, 10, 3, STANCE_ALERT,
d1325 1
a1325 1
  spello(SPELL_REMOVE_CURSE, "remove curse", 45, 25, 5, STANCE_ALERT,
d1329 1
a1329 1
  spello(SPELL_SANCTUARY, "sanctuary", 110, 85, 5, STANCE_ALERT,
d1334 1
a1334 1
  spello(SPELL_SHOCKING_GRASP, "shocking grasp", 30, 15, 3, STANCE_FIGHTING,
d1338 1
a1338 1
  spello(SPELL_SLEEP, "sleep", 40, 25, 5, STANCE_ALERT,
d1343 1
a1343 1
  spello(SPELL_STRENGTH, "strength", 35, 30, 1, STANCE_ALERT,
d1348 1
a1348 1
  spello(SPELL_SUMMON, "summon", 75, 50, 3, STANCE_ALERT,
d1352 1
a1352 1
  spello(SPELL_RESURRECT, "resurrect", 75, 50, 3, STANCE_ALERT,
d1356 1
a1356 1
  spello(SPELL_PRESERVE, "preserve", 0, 0, 0, STANCE_ALERT,
d1360 1
a1360 1
  spello(SPELL_DIMENSION_DOOR, "dimension door", 75, 45, 3, STANCE_ALERT,
d1364 1
a1364 1
  spello(SPELL_SUMMON_DRACOLICH, "summon dracolich", 100, 75, 3, STANCE_RESTING,
d1368 1
a1368 1
  spello(SPELL_ANIMATE_DEAD, "animate dead", 75, 15, 3, STANCE_RESTING,
d1372 1
a1372 1
  spello(SPELL_SUMMON_ELEMENTAL, "summon elemental", 75, 15, 3, STANCE_RESTING,
d1376 1
a1376 1
  spello(SPELL_SUMMON_DEMON, "summon demon", 100, 75, 3, STANCE_RESTING,
d1380 1
a1380 1
  spello(SPELL_SUMMON_GREATER_DEMON, "summon greater demon", 130, 75, 3, STANCE_RESTING,
d1384 1
a1384 1
  spello(SPELL_WORD_OF_RECALL, "word of recall", 20, 10, 2, STANCE_FIGHTING,
d1388 1
a1388 1
  spello(SPELL_REMOVE_POISON, "remove poison", 40, 8, 4, STANCE_ALERT,
d1393 1
a1393 1
  spello(SPELL_INCENDIARY_NEBULA, "incendiary nebula", 0, 0, 0, STANCE_FIGHTING,
d1397 1
a1397 1
  spello(SPELL_MOONWELL, "moonwell", 50, 50, 0, STANCE_ALERT,
d1401 1
a1401 1
  spello(SPELL_SENSE_LIFE, "sense life", 20, 10, 2, STANCE_ALERT,
d1406 1
a1406 1
  spello(SPELL_SOULSHIELD, "soulshield", 0, 0, 0, STANCE_ALERT,
d1411 1
a1411 1
  spello(SPELL_DESTROY_UNDEAD, "destroy undead", 0, 0, 0, STANCE_FIGHTING,
d1415 1
a1415 1
  spello(SPELL_STONE_SKIN, "stone skin", 50, 25, 3, STANCE_FIGHTING,
d1420 1
a1420 1
  spello(SPELL_HASTE, "haste", 50, 25, 3, STANCE_FIGHTING,
d1425 1
a1425 1
  spello(SPELL_BLUR, "blur", 90, 60, 3, STANCE_FIGHTING,
d1430 1
a1430 1
  spello(SPELL_LESSER_ENDURANCE, "lesser endurance", 50, 30, 5, STANCE_ALERT,
d1435 1
a1435 1
  spello(SPELL_ENDURANCE, "endurance", 50, 30, 5, STANCE_ALERT,
d1440 1
a1440 1
  spello(SPELL_GREATER_ENDURANCE, "greater endurance", 50, 30, 5, STANCE_ALERT,
d1445 1
a1445 1
  spello(SPELL_VITALITY, "vitality", 50, 30, 5, STANCE_ALERT,
d1450 1
a1450 1
  spello(SPELL_DRAGONS_HEALTH, "dragons health", 50, 30, 5, STANCE_ALERT,
d1455 1
a1455 1
  spello(SPELL_WALL_OF_FOG, "wall of fog", 50, 25, 5, STANCE_ALERT,
d1460 1
a1460 1
  spello(SPELL_FARSEE, "farsee", 25, 10, 1, STANCE_ALERT,
d1465 1
a1465 1
  spello(SPELL_CAUSE_LIGHT, "cause light", 0, 0, 0, STANCE_FIGHTING,
d1469 1
a1469 1
  spello(SPELL_CAUSE_SERIOUS, "cause serious", 0, 0, 0, STANCE_FIGHTING,
d1473 1
a1473 1
  spello(SPELL_CAUSE_CRITIC, "cause critical", 0, 0, 0, STANCE_FIGHTING,
d1477 1
a1477 1
  spello(SPELL_IDENTIFY, "identify", 0, 0, 0, STANCE_ALERT,
d1481 1
a1481 1
 spello(SPELL_BONE_ARMOR, "bone armor", 0, 0, 0, STANCE_ALERT,
d1486 1
a1486 1
  spello(SPELL_DEGENERATION, "degeneration", 0, 0, 0, STANCE_FIGHTING,
d1490 1
a1490 1
  spello(SPELL_SOUL_TAP, "soul tap", 0, 0, 0, STANCE_FIGHTING,
d1495 1
a1495 1
  spello(SPELL_REBUKE_UNDEAD, "rebuke undead", 0, 0, 0, STANCE_FIGHTING,
d1499 1
a1499 1
  spello(SPELL_NATURES_GUIDANCE, "natures guidance", 0, 0, 0, STANCE_FIGHTING,
d1504 1
a1504 1
  spello(SPELL_MOONBEAM, "moonbeam", 0, 0, 0, STANCE_FIGHTING,
d1597 1
a1597 1
  chanto(CHANT_REGENERATION, "regeneration", STANCE_RESTING,
d1601 1
a1601 1
  chanto(CHANT_BATTLE_HYMN, "battle hymn", STANCE_ALERT,
d1605 1
a1605 1
  chanto(CHANT_WAR_CRY, "war cry", STANCE_ALERT,
d1609 1
a1609 1
  chanto(CHANT_PEACE, "peace", STANCE_FIGHTING,
d1612 1
a1612 1
  chanto(CHANT_SHADOWS_SORROW_SONG, "shadows sorrow song", STANCE_FIGHTING,
d1616 1
a1616 1
  chanto(CHANT_IVORY_SYMPHONY, "ivory symphony", STANCE_FIGHTING,
d1620 1
a1620 1
  chanto(CHANT_ARIA_OF_DISSONANCE, "aria of dissonance", STANCE_FIGHTING,
d1624 1
a1624 1
  chanto(CHANT_SONATA_OF_MALAISE, "sonata of malaise", STANCE_FIGHTING,
d1628 1
a1628 1
  chanto(CHANT_APOCALYPTIC_ANTHEM, "apocalyptic anthem", STANCE_FIGHTING,
d1631 1
a1631 1
  chanto(CHANT_SEED_OF_DESTRUCTION, "seed of destruction", STANCE_FIGHTING,
d1635 1
a1635 1
  chanto(CHANT_SPIRIT_WOLF, "spirit of the wolf", STANCE_FIGHTING,
d1639 1
a1639 1
  chanto(CHANT_SPIRIT_BEAR, "spirit of the bear", STANCE_FIGHTING,
d1643 1
a1643 1
  chanto(CHANT_INTERMINABLE_WRATH, "interminable wrath", STANCE_FIGHTING,
d1648 1
a1648 1
/*  songo(SONG_CHORUS_OF_COURAGE, "chorus of courage", STANCE_ALERT,
d1828 3
@


1.47
log
@Change skill sorter to operate within the range that accessors do
@
text
@d1701 63
d1769 1
a1769 1
  for (i = 0; i < MAX_COOLDOWNS; ++i) {
d1814 1
a1814 6
int level_to_circle(int level)
{
   return LIMIT(1, (level - 1) / 8 + 1, NUM_SPELL_CIRCLES);
}

int circle_to_level(int circle)
d1816 4
a1819 29
   return LIMIT(1, (circle - 1) * 8 + 1, LVL_IMPL);
}

bool get_spell_assignment_circle(struct char_data *ch, int spell,
      int *circle_assignment, int *level_assignment)
{
   int i, tmp_level;

   if (IS_SPELL(spell)) {
      if (ch && skills[spell].min_level[GET_CLASS(ch)] <= GET_LEVEL(ch)) {
         *level_assignment = skills[spell].min_level[GET_CLASS(ch)];
         *circle_assignment = level_to_circle(*level_assignment);
         return TRUE;
      } else {
         /* No character: may have been cast from an object.
          * Use the lowest class-assignment level. */
         tmp_level = 100;
         for (i = 0; i < NUM_CLASSES; i++) {
            if (skills[spell].min_level[i] < tmp_level)
               tmp_level = skills[spell].min_level[i];
         }
         if (tmp_level < 100) {
            *level_assignment = tmp_level;
            *circle_assignment = level_to_circle(*level_assignment);
            return TRUE;
         }
      }
   }
   return FALSE;
d1822 1
d1826 3
@


1.46
log
@Changed the way mobs memorize spells.
@
text
@d1666 1
a1666 1
   sort(quicksort, &skill_sort_info[1], TOP_SKILL + 1, skill_comparator);
d1792 3
@


1.45
log
@Set all skills and spells to default to DAM_UNDEFINED instead
of DAM_SLASHING (0).
@
text
@d1753 6
a1758 26
   if (level < CIRCLE_2)
      return 1;
   else if (level < CIRCLE_3)
      return 2;
   else if (level < CIRCLE_4)
      return 3;
   else if (level < CIRCLE_5)
      return 4;
   else if (level < CIRCLE_6)
      return 5;
   else if (level < CIRCLE_7)
      return 6;
   else if (level < CIRCLE_8)
      return 7;
   else if (level < CIRCLE_9)
      return 8;
   else if (level < CIRCLE_10)
      return 9;
   else if (level < CIRCLE_11)
      return 10;
   else if (level < CIRCLE_12)
      return 11;
   else if (level < CIRCLE_13)
      return 12;
   else
      return 13;
d1792 4
@


1.44
log
@Removed the damage type 'magic'.
@
text
@d438 1
a438 1
  skills[skill].violent = 0;
d441 1
a441 1
  skills[skill].damage_type = 0;
d444 1
a444 1
  skills[skill].quest = 0;
d535 1
a535 1
         CAST_SPEED2, 0, SKILL_SPHERE_PROT, 17, FALSE,
d545 1
a545 1
         CAST_SPEED6, 0, SKILL_SPHERE_PROT, 5, FALSE,
d559 1
a559 1
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d567 1
a567 1
         CAST_SPEED2, 0, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);
d571 1
a571 1
         CAST_SPEED2, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d576 1
a576 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d581 1
a581 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d586 1
a586 1
         CAST_SPEED1, 0, SKILL_SPHERE_PROT, 5, FALSE,
d595 1
a595 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d600 1
a600 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 5, FALSE, NULL);
d604 1
a604 1
         CAST_SPEED7, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d609 1
a609 1
         CAST_SPEED3, 0, SKILL_SPHERE_WATER, 11, FALSE, NULL);
d613 1
a613 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 10, FALSE,
d631 1
a631 1
         CAST_SPEED4, 0, SKILL_SPHERE_SUMMON, 19, FALSE, NULL);
d647 1
a647 1
         CAST_SPEED7, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d651 1
a651 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 17, FALSE,
d656 1
a656 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 11, FALSE,
d665 1
a665 1
         16, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);
d673 1
a673 1
         18, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);
d681 1
a681 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 16, FALSE,
d686 1
a686 1
         CAST_SPEED3, 0, SKILL_SPHERE_PROT, 13, FALSE,
d691 1
a691 1
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 17, FALSE, NULL);
d704 1
a704 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d709 1
a709 1
         18, 0, SKILL_SPHERE_GENERIC, 27, TRUE,
d723 1
a723 1
         CAST_SPEED7, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d727 1
a727 1
         10, 0, SKILL_SPHERE_ENCHANT, 8, FALSE,
d732 1
a732 1
         CAST_SPEED7, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d741 1
a741 1
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 7, FALSE,
d759 1
a759 1
         CAST_SPEED4, 0, SKILL_SPHERE_FIRE, 17, FALSE,
d764 1
a764 1
         CAST_SPEED7, 0, SKILL_SPHERE_PROT, 29, FALSE,
d769 1
a769 1
         CAST_SPEED7, 0, SKILL_SPHERE_PROT, 29, FALSE,
d774 1
a774 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d779 1
a779 1
         CAST_SPEED4, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d783 1
a783 1
         CAST_SPEED4, 0, SKILL_SPHERE_SUMMON, 12, FALSE, NULL);
d787 1
a787 1
         CAST_SPEED6, 0, SKILL_SPHERE_WATER, 23, FALSE, NULL);
d791 1
a791 1
         CAST_SPEED5, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d799 1
a799 1
         CAST_SPEED5, 0, SKILL_SPHERE_SUMMON, 15, FALSE, NULL);
d803 1
a803 1
         CAST_SPEED3, 0, SKILL_SPHERE_FIRE, 11, FALSE,
d825 1
a825 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d830 1
a830 1
         CAST_SPEED7, 0, SKILL_SPHERE_PROT, 35, TRUE,
d835 1
a835 1
         CAST_SPEED2, 0, SKILL_SPHERE_GENERIC, 6, FALSE, NULL);
d844 1
a844 1
         CAST_SPEED5, 0, SKILL_SPHERE_SUMMON, 25, FALSE,
d849 1
a849 1
         16, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d854 1
a854 1
         CAST_SPEED7, 0, SKILL_SPHERE_WATER, 27, FALSE,
d859 1
a859 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d874 1
a874 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d879 1
a879 1
         C1, CAST_SPEED7, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);
d883 1
a883 1
         CAST_SPEED5, 0, SKILL_SPHERE_DIVIN, 5, FALSE, NULL);
d887 1
a887 1
         CAST_SPEED5, 0, SKILL_SPHERE_DIVIN, 5, FALSE,
d892 1
a892 1
         CAST_SPEED6, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d896 1
a896 1
         CAST_SPEED4, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d916 1
a916 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d921 1
a921 1
         CAST_SPEED4, 0, SKILL_SPHERE_PROT, 5, FALSE,
d926 1
a926 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d951 1
a951 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d956 1
a956 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 12, FALSE,
d965 1
a965 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 23, FALSE, NULL);
d969 1
a969 1
         20, 0, SKILL_SPHERE_SUMMON, 35, TRUE, NULL);
d977 1
a977 1
         2, 0, SKILL_SPHERE_GENERIC, 21, FALSE,
d982 1
a982 1
         CAST_SPEED4, 0, SKILL_SPHERE_PROT, 23, FALSE,
d987 1
a987 1
         CAST_SPEED7, 0, SKILL_SPHERE_PROT, 35, TRUE,
d997 1
a997 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 21, FALSE,
d1002 1
a1002 1
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 11, FALSE, NULL);
d1006 1
a1006 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 21, FALSE,
d1011 1
a1011 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 13, FALSE,
d1016 1
a1016 1
         16, 0, SKILL_SPHERE_DIVIN, 17, TRUE, NULL);
d1020 1
a1020 1
         CAST_SPEED1, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d1037 1
a1037 1
         CAST_SPEED2, 0, SKILL_SPHERE_PROT, 5, FALSE,
d1042 1
a1042 1
         CAST_SPEED7, 0, SKILL_SPHERE_ENCHANT, 29, FALSE,
d1047 1
a1047 1
         CAST_SPEED7, 0, SKILL_SPHERE_ENCHANT, 29, FALSE,
d1052 1
a1052 1
         C1, CAST_SPEED2, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d1058 1
a1058 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d1063 1
a1063 1
         C1, CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d1072 1
a1072 1
         CAST_SPEED3, 0, SKILL_SPHERE_DIVIN, 15, FALSE,
d1089 1
a1089 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 29, FALSE,
d1111 1
a1111 1
         CAST_SPEED6, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);
d1120 1
a1120 1
         CAST_SPEED7, 0, SKILL_SPHERE_SUMMON, 35, FALSE, NULL);
d1124 1
a1124 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d1135 1
a1135 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 35, FALSE,
d1140 1
a1140 1
         CAST_SPEED5, 0, SKILL_SPHERE_GENERIC, 21, FALSE, NULL);
d1144 1
a1144 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE, NULL);
d1148 1
a1148 1
         CAST_SPEED1, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d1152 1
a1152 1
         CAST_SPEED1, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d1156 1
a1156 1
         CAST_SPEED2, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1160 1
a1160 1
         CAST_SPEED4, 0, SKILL_SPHERE_HEALING, 15, FALSE, NULL);
d1164 1
a1164 1
         CAST_SPEED3, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1168 1
a1168 1
         CAST_SPEED2, 0, SKILL_SPHERE_HEALING, 9, FALSE, NULL);
d1172 1
a1172 1
         CAST_SPEED2, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1176 1
a1176 1
         CAST_SPEED3, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1180 1
a1180 1
         CAST_SPEED4, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1190 1
a1190 1
         CAST_SPEED3, 0, SKILL_SPHERE_DIVIN, 9, FALSE,
d1195 1
a1195 1
         CAST_SPEED3, 0, SKILL_SPHERE_DIVIN, 19, FALSE,
d1200 1
a1200 1
         CAST_SPEED3, 0, SKILL_SPHERE_DIVIN, 5, FALSE,
d1205 1
a1205 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 17, FALSE,
d1210 1
a1210 1
         CAST_SPEED1, 0, SKILL_SPHERE_DIVIN, 13, FALSE, NULL);
d1234 1
a1234 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 23, FALSE, NULL);
d1246 1
a1246 1
         CAST_SPEED5, 0, SKILL_SPHERE_PROT, 9, TRUE, NULL);
d1250 1
a1250 1
         CAST_SPEED7, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);
d1262 1
a1262 1
         CAST_SPEED6, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1266 1
a1266 1
         CAST_SPEED6, 0, SKILL_SPHERE_HEALING, 5, TRUE, NULL);
d1274 1
a1274 1
         CAST_SPEED5, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1278 1
a1278 1
         CAST_SPEED3, 0, SKILL_SPHERE_DIVIN, 9, FALSE,
d1284 1
a1284 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 17, FALSE,
d1289 1
a1289 1
         CAST_SPEED2, 0, SKILL_SPHERE_ENCHANT, 13, FALSE,
d1298 1
a1298 1
         CAST_SPEED4, 0, SKILL_SPHERE_DIVIN, 12, FALSE, NULL);
d1302 1
a1302 1
         CAST_SPEED6, 0, SKILL_SPHERE_SUMMON,17, FALSE, NULL);
d1306 1
a1306 1
         CAST_SPEED7, 0, SKILL_SPHERE_SUMMON, 17, TRUE, NULL);
d1315 1
a1315 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d1320 1
a1320 1
         CAST_SPEED3, 0, SKILL_SPHERE_PROT, 5, FALSE,
d1325 1
a1325 1
         C1, CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE, NULL);
d1329 1
a1329 1
         CAST_SPEED1, 0, SKILL_SPHERE_PROT, 35, FALSE,
d1343 1
a1343 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d1348 1
a1348 1
         CAST_SPEED5, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d1352 1
a1352 1
         26, 0, SKILL_SPHERE_HEALING, 5, TRUE, NULL);
d1356 1
a1356 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 11, FALSE, NULL);
d1360 1
a1360 1
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 15, FALSE, NULL);
d1364 1
a1364 1
         20, 0, SKILL_SPHERE_SUMMON, 33, TRUE, NULL);
d1368 1
a1368 1
         CAST_SPEED3, 0, SKILL_SPHERE_DEATH, 21, FALSE, NULL);
d1372 1
a1372 1
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 19, FALSE, NULL);
d1376 1
a1376 1
         CAST_SPEED5, 0, SKILL_SPHERE_SUMMON, 31, FALSE, NULL);
d1380 1
a1380 1
         CAST_SPEED7, 0, SKILL_SPHERE_SUMMON, 35, FALSE, NULL);
d1384 1
a1384 1
         1, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);
d1389 1
a1389 1
         CAST_SPEED3, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1397 1
a1397 1
         18, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);
d1401 1
a1401 1
         CAST_SPEED3, 0, SKILL_SPHERE_DIVIN, 19, FALSE,
d1406 1
a1406 1
         CAST_SPEED3, 0, SKILL_SPHERE_PROT, 5, FALSE,
d1415 1
a1415 1
         CAST_SPEED3, 0, SKILL_SPHERE_PROT, 19, FALSE,
d1420 1
a1420 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 19, FALSE,
d1425 1
a1425 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 25, TRUE,
d1430 1
a1430 1
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d1435 1
a1435 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 7, FALSE,
d1440 1
a1440 1
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 11, FALSE,
d1445 1
a1445 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 7, FALSE,
d1450 1
a1450 1
         CAST_SPEED7, 0, SKILL_SPHERE_ENCHANT, 21, TRUE,
d1455 1
a1455 1
         CAST_SPEED5, 0, SKILL_SPHERE_SUMMON, 21, FALSE,
d1460 1
a1460 1
         CAST_SPEED2, 0, SKILL_SPHERE_DIVIN, 9, FALSE,
d1477 1
a1477 1
         CAST_SPEED3, 0, SKILL_SPHERE_DIVIN, 5, FALSE, NULL);
d1481 1
a1481 1
         CAST_SPEED1, 0, SKILL_SPHERE_PROT, 12, FALSE,
d1495 1
a1495 1
         CAST_SPEED2, 0, SKILL_SPHERE_ENCHANT, 8, FALSE, NULL);
d1499 1
a1499 1
         CAST_SPEED2, 0, SKILL_SPHERE_ENCHANT, 8, FALSE,
d1504 1
a1504 1
         CAST_SPEED4, 0, SKILL_SPHERE_WATER, 10, FALSE, NULL);
d1812 3
@


1.43
log
@Moved level_to_circle to skills.c. Added get_spell_assignment_circle so
damage spells can be properly calibrated.
@
text
@d973 1
a973 1
         C1, CAST_SPEEDF, DAM_MAGIC, SKILL_SPHERE_GENERIC, 27, FALSE, NULL);
d1085 1
a1085 1
         CAST_SPEEDE, DAM_MAGIC, SKILL_SPHERE_GENERIC, 25, FALSE, NULL);
d1310 1
a1310 1
         CAST_SPEEDD, DAM_MAGIC, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);
d1812 4
@


1.42
log
@Mark soul reaver as violent.
@
text
@d1751 59
d1812 3
@


1.41
log
@Make severance and soul reaver spells not quest.
@
text
@d807 1
a807 1
         TAR_IGNORE, FALSE, MAG_AREA, C9,
d1753 3
@


1.40
log
@Added spells severance and soul reaver for illusionists.
@
text
@d795 1
a795 1
         CAST_SPEED7, DAM_DISCORPORATE, SKILL_SPHERE_GENERIC, 37, TRUE, NULL);
d808 1
a808 1
         CAST_SPEED7, DAM_MENTAL, SKILL_SPHERE_DEATH, 30, TRUE, NULL);
d1753 3
@


1.39
log
@Made more use of the VALID_CLASS macro.
@
text
@d574 10
d598 4
d663 4
d675 4
d753 4
d793 4
d806 8
a856 24
  spello(SPELL_WRITHING_WEEDS, "writhing weeds", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_OUTDOORS, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED3, DAM_CRUSH, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);

  /* SORTED */

  spello(SPELL_DEMONIC_ASPECT, "demonic aspect", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "The demon within you fades away.");

  spello(SPELL_HELLFIRE_BRIMSTONE, "hellfire and brimstone", 0, 0, 0, STANCE_FIGHTING,
         TAR_IGNORE, FALSE, MAG_AREA, C1,
         16, DAM_FIRE, SKILL_SPHERE_FIRE, 5, TRUE, NULL);

  spello(SPELL_STYGIAN_ERUPTION, "stygian eruption", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED4, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_DEMONIC_MUTATION, "demonic mutation", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You mutate back to your original form.");

d862 3
a864 3
  spello(SPELL_DIVINE_ESSENCE, "divine essence", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE, FALSE, MAG_GROUP, C1,
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 5, FALSE, NULL);
d866 1
a866 3
  spello(SPELL_HEAVENS_GATE, "heavens gate", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_WORLD, FALSE, MAG_MANUAL, C1,
         16, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);
a1086 4
  spello(SPELL_METEORSWARM, "meteorswarm", 100, 50, 3, STANCE_FIGHTING,
         TAR_IGNORE, TRUE, MAG_AREA, C9,
         CAST_SPEED7, DAM_CRUSH, SKILL_SPHERE_EARTH, 37, TRUE, NULL);

d1753 3
@


1.38
log
@Add mesmerize spell.
@
text
@d283 1
a283 1
   if (GET_CLASS(ch) == CLASS_UNDEFINED)
d1745 3
@


1.37
log
@Adding hysteria spell.
@
text
@d533 5
d557 4
d565 14
d583 5
d649 8
d694 9
d708 5
d726 5
d746 5
d763 4
d804 5
a818 30
  /* SORTED */

  spello(SPELL_NATURES_EMBRACE, "natures embrace", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_SELF_ONLY | TAR_OUTDOORS, FALSE, MAG_AFFECT | MAG_POINT, C1,
         CAST_SPEED7, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Nature releases you from her embrace.");

  spello(SPELL_INVIGORATE, "invigorate", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE, FALSE, MAG_GROUP, C1,
         CAST_SPEED7, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_WALL_OF_STONE, "wall of stone", 0, 0, 0, STANCE_ALERT,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         CAST_SPEED5, 0, SKILL_SPHERE_SUMMON, 25, FALSE,
         "The wall of stone crumbles into dust.");

  spello(SPELL_CREATE_SPRING, "create spring", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE, FALSE, MAG_CREATION, C1,
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_BARKSKIN, "barkskin", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED2, 0, SKILL_SPHERE_PROT, 17, FALSE,
         "Your skin softens back to its original texture.");

  spello(SPELL_NIGHT_VISION, "night vision", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your night vision fades out.");

d823 1
a823 35
  spello(SPELL_HELLS_GATE, "hell gate", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_WORLD, FALSE, MAG_MANUAL, C1,
         18, 0, SKILL_SPHERE_SUMMON, 5, TRUE, NULL);

  spello(SPELL_SANE_MIND, "sane mind", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECT, C1,
         CAST_SPEED5, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_DARK_PRESENCE, "dark presence", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE, MAG_AFFECT | MAG_ALTER_OBJ, C1,
         CAST_SPEED2, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You feel the dark presence leave you.");

  spello(SPELL_DEMONSKIN, "demonskin", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED1, 0, SKILL_SPHERE_PROT, 5, FALSE,
         "Your skin reverts back to normal.");

  spello(SPELL_DARK_FEAST, "dark feast", 0, 0, 0, STANCE_ALERT,
         TAR_OBJ_ROOM | TAR_CONTACT, FALSE, MAG_MANUAL, C1,
         CAST_SPEED2, 0, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);

  spello(SPELL_HELL_BOLT, "hell bolt", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEED2, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);

  spello(SPELL_DISEASE, "disease", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED3, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You are cured of your disease!");

  spello(SPELL_INSANITY, "insanity", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED5, DAM_MENTAL, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "Your mind returns to reality.");
d1745 3
@


1.36
log
@Created fight.h and set dependents.
@
text
@d621 5
d1740 3
@


1.35
log
@Adding spello definition for familiarity.
@
text
@d27 1
a1687 2
  extern void pickup_dropped_weapon(struct char_data *ch);

d1735 3
@


1.34
log
@Gave the "detect invisibility" and "detect alignment" spells their
full, unabbreviated names. I'm sure this will cause output
misalignments...
@
text
@d537 9
d559 5
d568 5
d602 4
d611 5
d637 6
d680 9
d706 5
d715 5
a745 32
  spello(SPELL_NEGATE_HEAT, "negate heat", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, 0, SKILL_SPHERE_PROT, 29, FALSE,
         "Your immunity to heat has passed.");

  spello(SPELL_COMBUST, "combust", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDF, DAM_FIRE, SKILL_SPHERE_FIRE, 23, FALSE, NULL);

  spello(SPELL_URBAN_RENEWAL, "urban renewal", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE | TAR_OUTDOORS, FALSE, MAG_ROOM, C1,
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "&2The woods in the surrounding area break apart and crumble.&0");

  spello(SPELL_SUNRAY, "sunray", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE | MAG_AFFECT,
         C1, CAST_SPEED6, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE,
         "Your vision has returned.");

  spello(SPELL_ARMOR_OF_GAIA, "armor of gaia", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_MANUAL, C1,
         CAST_SPEED7, 0, SKILL_SPHERE_SUMMON, 5, FALSE, NULL);

  spello(SPELL_NOURISHMENT, "nourishment", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_POINT, C1,
         CAST_SPEED4, 0, SKILL_SPHERE_HEALING, 5, FALSE, NULL);

  spello(SPELL_GAIAS_CLOAK, "cloak of gaia", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_SELF_ONLY | TAR_OUTDOORS, FALSE, MAG_AFFECT, C1,
         CAST_SPEED6, 0, SKILL_SPHERE_PROT, 5, FALSE,
         "Your shroud of nature dissolves.");

a750 5
  spello(SPELL_ENTANGLE, "entangle", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_OUTDOORS, FALSE, MAG_AFFECT, C1,
         CAST_SPEED7, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "You break free of the vines.");

a1107 6
  spello(SPELL_ILLUMINATION, "illumination", 50, 25, 5, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE,
         MAG_MANUAL, C1,
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "&8The magical light fades away.&0");

a1428 5
  spello(SPELL_GREATER_VITALITY, "greater vitality", 50, 30, 5, STANCE_ALERT,
         TAR_CHAR_ROOM, FALSE, MAG_AFFECT, C1,
         CAST_SPEED6, 0, SKILL_SPHERE_ENCHANT, 11, FALSE,
         "Your magical vitality drains away.");

d1736 5
@


1.33
log
@Change improve_skill_offensively so that it doesn't insist on
an opponent. Thus, switch can improve.
@
text
@d1159 1
a1159 1
  spello(SPELL_DETECT_ALIGN, "detect align", 20, 10, 2, STANCE_ALERT,
d1164 1
a1164 1
  spello(SPELL_DETECT_INVIS, "detect invis", 20, 10, 2, STANCE_ALERT,
d1731 4
@


1.32
log
@Added isolation spell.
@
text
@d239 2
a240 1
   if (!victim || MOB_FLAGGED(victim, MOB_ILLUSORY))
d1731 3
@


1.31
log
@Add spello calls for nightmare and discorporate.
@
text
@d513 8
d530 6
d541 4
d562 4
d587 4
d613 9
d631 4
d662 4
d680 5
a691 29
  spello(SPELL_HEATWAVE, "heatwave", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE, C1,
         CAST_SPEEDE, DAM_FIRE, SKILL_SPHERE_FIRE, 21, FALSE, NULL);

  spello(SPELL_FIRESTORM, "firestorm", 0, 0, 0, STANCE_FIGHTING,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         CAST_SPEED6, DAM_FIRE, SKILL_SPHERE_FIRE, 25, FALSE, NULL);

  spello(SPELL_MELT, "melt", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE,
         C1, CAST_SPEEDE, DAM_FIRE, SKILL_SPHERE_FIRE, 29, FALSE, NULL);

  spello(SPELL_CIRCLE_OF_FIRE, "circle of fire", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE, TRUE, MAG_ROOM, C1,
         CAST_SPEED6, DAM_FIRE, SKILL_SPHERE_FIRE, 25, FALSE,
         "&1&bThe &1&bfl&3am&1es&0 &1surrounding &1the area &9&bdie out&0.");

  spello(SPELL_IMMOLATE, "immolate", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDF, DAM_FIRE, SKILL_SPHERE_FIRE, 25, FALSE, NULL);

  spello(SPELL_SUPERNOVA, "supernova", 100, 50, 3, STANCE_FIGHTING,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         16, DAM_FIRE, SKILL_SPHERE_FIRE, 31, TRUE, NULL);

  spello(SPELL_CREMATE, "cremate", 0, 0, 0, STANCE_FIGHTING,
         TAR_IGNORE, TRUE, MAG_AREA, C1,
         CAST_SPEED7, DAM_FIRE, SKILL_SPHERE_FIRE, 35, FALSE, NULL);

a714 5
  spello(SPELL_WANDERING_WOODS, "wandering woods", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         16, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
         "The woods around you shift back to their proper form.");

d1730 3
@


1.30
log
@Made sort_skills use the quicksort.
@
text
@d527 4
d587 4
d1716 3
@


1.29
log
@Added a 'show skill' subcommand, which required a list of
target flag and routine type strings.
@
text
@d1605 5
d1612 1
a1612 1
   int a, b, tmp;
d1615 2
a1616 2
   for (a = 1; a <= TOP_SKILL; a++)
      skill_sort_info[a] = a;
d1618 2
a1619 8
   /* Sort.   'a' starts at 1, not 0, to remove 'RESERVED' */
   for (a = 1; a < TOP_SKILL; a++)
      for (b = a + 1; b <= TOP_SKILL; b++)
         if (strcmp(skills[skill_sort_info[a]].name, skills[skill_sort_info[b]].name) > 0) {
            tmp = skill_sort_info[a];
            skill_sort_info[a] = skill_sort_info[b];
            skill_sort_info[b] = tmp;
         }
d1708 4
@


1.28
log
@Add spello() call for spell of illusory wall.
@
text
@d31 60
d1709 3
@


1.27
log
@Adding spello() call for "glory" spell.
@
text
@d518 5
d534 1
a534 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,	
d1649 3
@


1.26
log
@Add spello() call for confusion.
@
text
@d467 17
d496 4
a499 3
  spello(SPELL_ICE_DARTS, "ice darts", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDD, DAM_COLD, SKILL_SPHERE_WATER, 7, FALSE, NULL);
d510 4
d518 10
d537 4
d545 4
a548 4
  spello(SPELL_WALL_OF_ICE, "wall of ice", 0, 0, 0, STANCE_ALERT,
         TAR_STRING, FALSE, MAG_MANUAL, C1,
         18, DAM_COLD, SKILL_SPHERE_WATER, 27, TRUE,
         "The wall of ice melts away...");
d559 5
d569 1
a569 30
  spello(SPELL_EXTINGUISH, "extinguish", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECT, C1,
         CAST_SPEED3, 0, SKILL_SPHERE_WATER, 11, FALSE, NULL);

  spello(SPELL_RAIN, "rain", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         CAST_SPEED6, 0, SKILL_SPHERE_WATER, 23, FALSE, NULL);

  spello(SPELL_FIRE_DARTS, "fire darts", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_MANUAL, C1,
         CAST_SPEEDD, DAM_FIRE, SKILL_SPHERE_FIRE, 9, FALSE, NULL);

  spello(SPELL_MAGIC_TORCH, "magic torch", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, 0, SKILL_SPHERE_SUMMON, 7, FALSE,
         "Your magic torch peters out.");

  spello(SPELL_SMOKE, "smoke", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_AFFECT, C1,
         CAST_SPEED3, 0, SKILL_SPHERE_FIRE, 11, FALSE,
         "As the smoke clears, your vision returns.");

  spello(SPELL_MIRAGE, "mirage", 0, 0, 0, STANCE_FIGHTING,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED4, 0, SKILL_SPHERE_FIRE, 17, FALSE,
         "You become more visible as the heat around your body dies out.");

  spello(SPELL_FLAME_BLADE, "flame blade", 0, 0, 0, STANCE_ALERT,
         TAR_IGNORE, FALSE, MAG_MANUAL, C1,
         CAST_SPEED4, 0, SKILL_SPHERE_SUMMON, 19, FALSE, NULL);
a862 5
  spello(SPELL_FIRESHIELD, "fireshield", 0, 0, 0, STANCE_ALERT,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECT, C1,
         CAST_SPEED3, DAM_FIRE, SKILL_SPHERE_FIRE, 17, FALSE,
         "The flames around your body dissipate.");

d1644 3
@


1.25
log
@Changed the POS/STANCE system so that POS reflects the position
of your body, while STANCE describes your condition or activity.
@
text
@d462 5
d1637 4
@


1.24
log
@Forgot to add damage type to dispel magic spell.
@
text
@d330 1
a330 1
            byte minpos, int targets, byte violent, bool humanoid, int routines,
d345 1
a345 1
  skills[skill].min_position = minpos;
d374 1
a374 1
  skills[skill].min_position = 0;
d462 1
a462 1
  spello(SPELL_FLOOD, "flood", 0, 0, 0, POS_FIGHTING,
d466 1
a466 1
  spello(SPELL_FREEZE, "freeze", 0, 0, 0, POS_FIGHTING,
d470 1
a470 1
  spello(SPELL_FREEZING_WIND, "freezing wind", 0, 0, 0, POS_FIGHTING,
d474 1
a474 1
  spello(SPELL_ICE_DARTS, "ice darts", 0, 0, 0, POS_FIGHTING,
d478 1
a478 1
  spello(SPELL_ICE_ARMOR, "ice armor", 0, 0, 0, POS_STANDING,
d483 1
a483 1
  spello(SPELL_ICE_DAGGER, "ice dagger", 0, 0, 0, POS_STANDING,
d487 1
a487 1
  spello(SPELL_ICEBALL, "iceball", 0, 0, 0, POS_FIGHTING,
d491 1
a491 1
  spello(SPELL_NEGATE_COLD, "negate cold", 0, 0, 0, POS_STANDING,
d496 1
a496 1
  spello(SPELL_PHANTASM, "phantasm", 0, 0, 0, POS_STANDING,
d500 1
a500 1
  spello(SPELL_SIMULACRUM, "simulacrum", 0, 0, 0, POS_STANDING,
d504 1
a504 1
  spello(SPELL_WALL_OF_ICE, "wall of ice", 0, 0, 0, POS_STANDING,
d509 1
a509 1
  spello(SPELL_VAPORFORM, "vaporform", 0, 0, 0, POS_STANDING,
d514 1
a514 1
  spello(SPELL_VENTRILOQUATE, "ventriloquate", 0, 0, 0, POS_RESTING,
d518 1
a518 1
  spello(SPELL_WATERFORM, "waterform", 0, 0, 0, POS_STANDING,
d523 1
a523 1
  spello(SPELL_EXTINGUISH, "extinguish", 0, 0, 0, POS_FIGHTING,
d527 1
a527 1
  spello(SPELL_RAIN, "rain", 0, 0, 0, POS_STANDING,
d531 1
a531 1
  spello(SPELL_FIRE_DARTS, "fire darts", 0, 0, 0, POS_FIGHTING,
d535 1
a535 1
  spello(SPELL_MAGIC_TORCH, "magic torch", 0, 0, 0, POS_FIGHTING,
d540 1
a540 1
  spello(SPELL_SMOKE, "smoke", 0, 0, 0, POS_FIGHTING,
d545 1
a545 1
  spello(SPELL_MIRAGE, "mirage", 0, 0, 0, POS_FIGHTING,
d550 1
a550 1
  spello(SPELL_FLAME_BLADE, "flame blade", 0, 0, 0, POS_STANDING,
d554 1
a554 1
  spello(SPELL_HEATWAVE, "heatwave", 0, 0, 0, POS_FIGHTING,
d558 1
a558 1
  spello(SPELL_FIRESTORM, "firestorm", 0, 0, 0, POS_FIGHTING,
d562 1
a562 1
  spello(SPELL_MELT, "melt", 0, 0, 0, POS_FIGHTING,
d566 1
a566 1
  spello(SPELL_CIRCLE_OF_FIRE, "circle of fire", 0, 0, 0, POS_STANDING,
d571 1
a571 1
  spello(SPELL_IMMOLATE, "immolate", 0, 0, 0, POS_FIGHTING,
d575 1
a575 1
  spello(SPELL_SUPERNOVA, "supernova", 100, 50, 3, POS_FIGHTING,
d579 1
a579 1
  spello(SPELL_CREMATE, "cremate", 0, 0, 0, POS_FIGHTING,
d583 1
a583 1
  spello(SPELL_NEGATE_HEAT, "negate heat", 0, 0, 0, POS_STANDING,
d588 1
a588 1
  spello(SPELL_COMBUST, "combust", 0, 0, 0, POS_FIGHTING,
d592 1
a592 1
  spello(SPELL_URBAN_RENEWAL, "urban renewal", 0, 0, 0, POS_STANDING,
d597 1
a597 1
  spello(SPELL_SUNRAY, "sunray", 0, 0, 0, POS_FIGHTING,
d602 1
a602 1
  spello(SPELL_ARMOR_OF_GAIA, "armor of gaia", 0, 0, 0, POS_STANDING,
d606 1
a606 1
  spello(SPELL_WANDERING_WOODS, "wandering woods", 0, 0, 0, POS_STANDING,
d611 1
a611 1
  spello(SPELL_NOURISHMENT, "nourishment", 0, 0, 0, POS_STANDING,
d615 1
a615 1
  spello(SPELL_GAIAS_CLOAK, "cloak of gaia", 0, 0, 0, POS_STANDING,
d620 1
a620 1
  spello(SPELL_NATURES_EMBRACE, "natures embrace", 0, 0, 0, POS_STANDING,
d625 1
a625 1
  spello(SPELL_ENTANGLE, "entangle", 0, 0, 0, POS_FIGHTING,
d630 1
a630 1
  spello(SPELL_INVIGORATE, "invigorate", 0, 0, 0, POS_STANDING,
d634 1
a634 1
  spello(SPELL_WALL_OF_STONE, "wall of stone", 0, 0, 0, POS_STANDING,
d639 1
a639 1
  spello(SPELL_CREATE_SPRING, "create spring", 0, 0, 0, POS_STANDING,
d643 1
a643 1
  spello(SPELL_BARKSKIN, "barkskin", 0, 0, 0, POS_FIGHTING,
d648 1
a648 1
  spello(SPELL_NIGHT_VISION, "night vision", 0, 0, 0, POS_FIGHTING,
d653 1
a653 1
  spello(SPELL_WRITHING_WEEDS, "writhing weeds", 0, 0, 0, POS_FIGHTING,
d657 1
a657 1
  spello(SPELL_HELLS_GATE, "hell gate", 0, 0, 0, POS_STANDING,
d661 1
a661 1
  spello(SPELL_SANE_MIND, "sane mind", 0, 0, 0, POS_STANDING,
d665 1
a665 1
  spello(SPELL_DARK_PRESENCE, "dark presence", 0, 0, 0, POS_STANDING,
d670 1
a670 1
  spello(SPELL_DEMONSKIN, "demonskin", 0, 0, 0, POS_FIGHTING,
d675 1
a675 1
  spello(SPELL_DARK_FEAST, "dark feast", 0, 0, 0, POS_STANDING,
d679 1
a679 1
  spello(SPELL_HELL_BOLT, "hell bolt", 0, 0, 0, POS_FIGHTING,
d683 1
a683 1
  spello(SPELL_DISEASE, "disease", 0, 0, 0, POS_FIGHTING,
d688 1
a688 1
  spello(SPELL_INSANITY, "insanity", 0, 0, 0, POS_FIGHTING,
d693 1
a693 1
  spello(SPELL_DEMONIC_ASPECT, "demonic aspect", 0, 0, 0, POS_FIGHTING,
d698 1
a698 1
  spello(SPELL_HELLFIRE_BRIMSTONE, "hellfire and brimstone", 0, 0, 0, POS_FIGHTING,
d702 1
a702 1
  spello(SPELL_STYGIAN_ERUPTION, "stygian eruption", 0, 0, 0, POS_FIGHTING,
d706 1
a706 1
  spello(SPELL_DEMONIC_MUTATION, "demonic mutation", 0, 0, 0, POS_STANDING,
d711 1
a711 1
  spello(SPELL_WINGS_OF_HELL, "wings of hell", 0, 0, 0, POS_STANDING,
d716 1
a716 1
  spello(SPELL_DIVINE_ESSENCE, "divine essence", 0, 0, 0, POS_STANDING,
d720 1
a720 1
  spello(SPELL_HEAVENS_GATE, "heavens gate", 0, 0, 0, POS_STANDING,
d724 1
a724 1
  spello(SPELL_WORD_OF_COMMAND, "word of command", 0, 0, 0, POS_STANDING,
d728 1
a728 1
  spello(SPELL_WINGS_OF_HEAVEN, "wings of heaven", 0, 0, 0, POS_STANDING,
d733 1
a733 1
  spello(SPELL_BANISH, "banish", 0, 0, 0, POS_FIGHTING,
d737 1
a737 1
  spello(SPELL_ENLIGHTENMENT, "enlightenment", 0, 0, 0, POS_STANDING,
d741 1
a741 1
  spello(SPELL_SPEAK_IN_TONGUES, "speak in tongues", 0, 0, 0, POS_STANDING,
d746 1
a746 1
  spello(SPELL_GREATER_INVOCATION, "greater invocation", 0, 0, 0, POS_FIGHTING,
d750 1
a750 1
  spello(SPELL_LESSER_INVOCATION, "lesser invocation", 0, 0, 0, POS_FIGHTING,
d754 1
a754 1
  spello(SPELL_EXORCISM, "exorcism", 0, 0, 0, POS_FIGHTING,
d758 1
a758 1
  spello(SPELL_LESSER_EXORCISM, "lesser exorcism", 0, 0, 0, POS_FIGHTING,
d762 1
a762 1
  spello(SPELL_DIVINE_RAY, "divine ray", 0, 0, 0, POS_FIGHTING,
d766 1
a766 1
  spello(SPELL_DIVINE_BOLT, "divine bolt", 0, 0, 0, POS_FIGHTING,
d770 1
a770 1
  spello(SPELL_PRAYER, "prayer", 0, 0, 0, POS_STANDING,
d775 1
a775 1
  spello(SPELL_ELEMENTAL_WARDING, "elemental warding", 0, 0, 0, POS_STANDING,
d780 1
a780 1
  spello(SPELL_CIRCLE_OF_LIGHT, "circle of light", 0, 0, 0, POS_STANDING,
d785 1
a785 1
  spello(SPELL_FIRE_BREATH, "fire breath", 0, 0, 0, POS_FIGHTING,
d789 1
a789 1
  spello(SPELL_GAS_BREATH, "gas breath", 0, 0, 0, POS_FIGHTING,
d793 1
a793 1
  spello(SPELL_FROST_BREATH, "frost breath", 0, 0, 0, POS_FIGHTING,
d797 1
a797 1
  spello(SPELL_LIGHTNING_BREATH, "lightning breath", 0, 0, 0, POS_FIGHTING,
d801 1
a801 1
  spello(SPELL_ACID_BREATH, "acid breath", 0, 0, 0, POS_FIGHTING,
d805 1
a805 1
  spello(SPELL_FEAR, "fear", 0, 0, 0, POS_FIGHTING,
d810 1
a810 1
  spello(SPELL_MISDIRECTION, "misdirection", 0, 0, 0, POS_STANDING,
d815 1
a815 1
  spello(SPELL_CHAIN_LIGHTNING, "chain lightning", 0, 0, 0, POS_FIGHTING,
d819 1
a819 1
  spello(SPELL_MASS_INVIS, "mass invisibility", 0, 0, 0, POS_STANDING,
d823 1
a823 1
  spello(SPELL_RELOCATE, "relocate", 0, 0, 0, POS_STANDING,
d827 1
a827 1
  spello(SPELL_DISINTEGRATE, "disintegrate", 0, 0, 0, POS_FIGHTING,
d831 1
a831 1
  spello(SPELL_HARNESS, "harness", 0, 0, 0, POS_FIGHTING,
d836 1
a836 1
  spello(SPELL_MINOR_GLOBE, "minor globe", 0, 0, 0, POS_STANDING,
d841 1
a841 1
  spello(SPELL_MAJOR_GLOBE, "major globe", 0, 0, 0, POS_STANDING,
d846 1
a846 1
  spello(SPELL_FIRESHIELD, "fireshield", 0, 0, 0, POS_STANDING,
d851 1
a851 1
  spello(SPELL_COLDSHIELD, "coldshield", 0, 0, 0, POS_STANDING,
d856 1
a856 1
  spello(SPELL_MINOR_PARALYSIS, "minor paralysis", 0, 0, 0, POS_FIGHTING,
d861 1
a861 1
  spello(SPELL_TELEPORT, "teleport", 0, 0, 0, POS_FIGHTING,
d865 1
a865 1
  spello(SPELL_RAY_OF_ENFEEB, "ray of enfeeblement", 0, 0, 0, POS_FIGHTING,
d870 1
a870 1
  spello(SPELL_LEVITATE, "levitate", 0, 0, 0, POS_STANDING,
d875 1
a875 1
  spello(SPELL_WIZARD_EYE, "wizard eye", 0, 0, 0, POS_STANDING,
d879 1
a879 1
  spello(SPELL_MINOR_CREATION, "minor creation", 0, 0, 0,POS_STANDING,
d883 1
a883 1
  spello(SPELL_DISPEL_MAGIC, "dispel magic", 0, 0, 0, POS_FIGHTING,
d888 1
a888 1
  spello(SPELL_UNHOLY_WORD, "unholy word", 0, 0, 0, POS_FIGHTING,
d892 1
a892 1
  spello(SPELL_HOLY_WORD, "holy word", 0, 0, 0, POS_FIGHTING,
d896 1
a896 1
  spello(SPELL_ARMOR, "armor", 30, 15, 3, POS_FIGHTING,
d901 1
a901 1
  spello(SPELL_REDUCE, "reduce", 35, 5, 3, POS_STANDING,
d906 1
a906 1
  spello(SPELL_ENLARGE, "enlarge", 35, 5, 3, POS_STANDING,
d911 1
a911 1
  spello(SPELL_BLESS, "bless", 35, 5, 3, POS_STANDING,
d916 1
a916 1
  spello(SPELL_BLINDNESS, "blindness", 35, 25, 1, POS_FIGHTING,
d922 1
a922 1
  spello(SPELL_SILENCE, "silence", 0, 0, 0, POS_FIGHTING,
d927 1
a927 1
  spello(SPELL_FLAMESTRIKE, "flamestrike", 0, 0, 0, POS_FIGHTING,
d931 1
a931 1
  spello(SPELL_COMPREHEND_LANG, "comprehend language", 45, 30, 1, POS_STANDING,
d936 1
a936 1
  spello(SPELL_BURNING_HANDS, "burning hands", 30, 10, 3, POS_FIGHTING,
d940 1
a940 1
  spello(SPELL_CONE_OF_COLD, "cone of cold", 35, 15, 3, POS_FIGHTING,
d944 1
a944 1
  spello(SPELL_BIGBYS_CLENCHED_FIST, "bigbys clenched fist", 90, 35, 3, POS_FIGHTING,
d948 1
a948 1
  spello(SPELL_METEORSWARM, "meteorswarm", 100, 50, 3, POS_FIGHTING,
d952 1
a952 1
  spello(SPELL_WATERWALK, "waterwalk", 35, 5, 3, POS_STANDING,
d957 1
a957 1
  spello(SPELL_ICE_SHARDS, "ice shards", 100, 50, 3, POS_FIGHTING,
d961 1
a961 1
  spello(SPELL_ICE_STORM, "ice storm", 100, 50, 3, POS_FIGHTING,
d965 1
a965 1
  spello(SPELL_CALL_LIGHTNING, "call lightning", 40, 25, 3, POS_FIGHTING,
d969 1
a969 1
  spello(SPELL_CHARM, "charm person", 75, 50, 2, POS_STANDING,
d974 1
a974 1
  spello(SPELL_PLANE_SHIFT, "plane shift", 0, 0, 0, POS_STANDING,
d978 1
a978 1
  spello(SPELL_CHILL_TOUCH, "chill touch", 30, 10, 3, POS_FIGHTING,
d983 1
a983 1
  spello(SPELL_CLONE, "clone", 80, 65, 5, POS_STANDING,
d987 1
a987 1
  spello(SPELL_DARKNESS, "darkness", 50, 25, 5, POS_STANDING,
d992 1
a992 1
  spello(SPELL_ILLUMINATION, "illumination", 50, 25, 5, POS_STANDING,
d999 1
a999 1
  spello(SPELL_INN_STRENGTH, "innate strength", 35, 30, 1, POS_STANDING,
d1004 1
a1004 1
  spello(SPELL_MAJOR_PARALYSIS, "major paralysis", 35, 30, 1, POS_STANDING,
d1009 1
a1009 1
  spello(SPELL_COLOR_SPRAY, "color spray", 30, 15, 3, POS_FIGHTING,
d1013 1
a1013 1
  spello(SPELL_CONTROL_WEATHER, "control weather", 75, 25, 5, POS_STANDING,
d1017 1
a1017 1
  spello(SPELL_CREATE_FOOD, "create food", 30, 5, 4, POS_STANDING,
d1021 1
a1021 1
  spello(SPELL_CREATE_WATER, "create water", 30, 5, 4, POS_STANDING,
d1025 1
a1025 1
  spello(SPELL_CURE_BLIND, "cure blind", 30, 5, 2, POS_STANDING,
d1029 1
a1029 1
  spello(SPELL_CURE_CRITIC, "cure critic", 30, 10, 2, POS_FIGHTING,
d1033 1
a1033 1
  spello(SPELL_CURE_SERIOUS, "cure serious", 0, 0, 0, POS_FIGHTING,
d1037 1
a1037 1
  spello(SPELL_CURE_LIGHT, "cure light", 30, 10, 2, POS_FIGHTING,
d1041 1
a1041 1
  spello(SPELL_VIGORIZE_LIGHT, "vigorize light", 0, 0, 0, POS_STANDING,
d1045 1
a1045 1
  spello(SPELL_VIGORIZE_SERIOUS, "vigorize serious", 0, 0, 0, POS_STANDING,
d1049 1
a1049 1
  spello(SPELL_VIGORIZE_CRITIC, "vigorize critic", 0, 0, 0, POS_STANDING,
d1053 1
a1053 1
  spello(SPELL_CURSE, "curse", 80, 50, 2, POS_FIGHTING,
d1059 1
a1059 1
  spello(SPELL_DETECT_ALIGN, "detect align", 20, 10, 2, POS_STANDING,
d1064 1
a1064 1
  spello(SPELL_DETECT_INVIS, "detect invis", 20, 10, 2, POS_STANDING,
d1069 1
a1069 1
  spello(SPELL_DETECT_MAGIC, "detect magic", 20, 10, 2, POS_STANDING,
d1074 1
a1074 1
  spello(SPELL_FLY, "fly", 50, 5, 3, POS_STANDING,
d1079 1
a1079 1
  spello(SPELL_DETECT_POISON, "detect poison", 15, 5, 1, POS_STANDING,
d1083 1
a1083 1
  spello(SPELL_DISPEL_EVIL, "dispel evil", 40, 25, 3, POS_FIGHTING,
d1087 1
a1087 1
  spello(SPELL_DISPEL_GOOD, "dispel good", 40, 25, 3, POS_FIGHTING,
d1091 1
a1091 1
  spello(SPELL_EARTHQUAKE, "earthquake", 40, 25, 3, POS_FIGHTING,
d1095 1
a1095 1
  spello(SPELL_DOOM, "doom", 0, 0, 0, POS_FIGHTING,
d1099 1
a1099 1
  spello(SPELL_CREEPING_DOOM, "creeping doom", 0, 0, 0, POS_FIGHTING,
d1103 1
a1103 1
  spello(SPELL_ENCHANT_WEAPON, "enchant weapon", 150, 100, 10, POS_STANDING,
d1107 1
a1107 1
  spello(SPELL_ENERGY_DRAIN, "energy drain", 40, 25, 1, POS_FIGHTING,
d1111 1
a1111 1
  spello(SPELL_VAMPIRIC_BREATH, "vampiric breath", 40, 25, 1, POS_FIGHTING,
d1115 1
a1115 1
  spello(SPELL_GROUP_ARMOR, "group armor", 50, 30, 2, POS_STANDING,
d1119 1
a1119 1
  spello(SPELL_GROUP_RECALL, "group recall", 50, 30, 2, POS_FIGHTING,
d1123 1
a1123 1
  spello(SPELL_FIREBALL, "fireball", 40, 30, 2, POS_FIGHTING,
d1127 1
a1127 1
  spello(SPELL_FULL_HARM, "full harm", 75, 45, 3, POS_FIGHTING,
d1131 1
a1131 1
  spello(SPELL_FULL_HEAL, "full heal", 75, 50, 3, POS_FIGHTING,
d1135 1
a1135 1
  spello(SPELL_GROUP_HEAL, "group heal", 80, 60, 5, POS_FIGHTING,
d1139 1
a1139 1
  spello(SPELL_HARM, "harm", 45, 15, 3, POS_FIGHTING,
d1143 1
a1143 1
  spello(SPELL_HEAL, "heal", 60, 40, 3, POS_FIGHTING,
d1147 1
a1147 1
  spello(SPELL_INFRAVISION, "infravision", 25, 10, 1, POS_STANDING,
d1152 1
a1152 1
  spello(SPELL_INVISIBLE, "invisibility", 35, 25, 1, POS_STANDING,
d1158 1
a1158 1
  spello(SPELL_CONCEALMENT, "concealment", 0, 0, 0, POS_STANDING,
d1163 1
a1163 1
  spello(SPELL_LIGHTNING_BOLT, "lightning bolt", 30, 15, 1, POS_FIGHTING,
d1167 1
a1167 1
  spello(SPELL_LOCATE_OBJECT, "locate object", 25, 20, 1, POS_STANDING,
d1171 1
a1171 1
  spello(SPELL_SUMMON_CORPSE, "summon corpse", 25, 20, 1, POS_STANDING,
d1175 1
a1175 1
  spello(SPELL_SHIFT_CORPSE, "shift corpse", 25, 20, 1, POS_STANDING,
d1179 1
a1179 1
  spello(SPELL_MAGIC_MISSILE, "magic missile", 0, 0, 0, POS_FIGHTING,
d1183 1
a1183 1
  spello(SPELL_POISON, "poison", 50, 20, 3, POS_FIGHTING,
d1189 1
a1189 1
  spello(SPELL_PROT_FROM_EVIL, "protection from evil", 40, 10, 3, POS_STANDING,
d1194 1
a1194 1
  spello(SPELL_REMOVE_CURSE, "remove curse", 45, 25, 5, POS_STANDING,
d1198 1
a1198 1
  spello(SPELL_SANCTUARY, "sanctuary", 110, 85, 5, POS_STANDING,
d1203 1
a1203 1
  spello(SPELL_SHOCKING_GRASP, "shocking grasp", 30, 15, 3, POS_FIGHTING,
d1207 1
a1207 1
  spello(SPELL_SLEEP, "sleep", 40, 25, 5, POS_STANDING,
d1212 1
a1212 1
  spello(SPELL_STRENGTH, "strength", 35, 30, 1, POS_STANDING,
d1217 1
a1217 1
  spello(SPELL_SUMMON, "summon", 75, 50, 3, POS_STANDING,
d1221 1
a1221 1
  spello(SPELL_RESURRECT, "resurrect", 75, 50, 3, POS_STANDING,
d1225 1
a1225 1
  spello(SPELL_PRESERVE, "preserve", 0, 0, 0, POS_STANDING,
d1229 1
a1229 1
  spello(SPELL_DIMENSION_DOOR, "dimension door", 75, 45, 3, POS_STANDING,
d1233 1
a1233 1
  spello(SPELL_SUMMON_DRACOLICH, "summon dracolich", 100, 75, 3, POS_SITTING,
d1237 1
a1237 1
  spello(SPELL_ANIMATE_DEAD, "animate dead", 75, 15, 3, POS_SITTING,
d1241 1
a1241 1
  spello(SPELL_SUMMON_ELEMENTAL, "summon elemental", 75, 15, 3, POS_SITTING,
d1245 1
a1245 1
  spello(SPELL_SUMMON_DEMON, "summon demon", 100, 75, 3, POS_SITTING,
d1249 1
a1249 1
  spello(SPELL_SUMMON_GREATER_DEMON, "summon greater demon", 130, 75, 3, POS_SITTING,
d1253 1
a1253 1
  spello(SPELL_WORD_OF_RECALL, "word of recall", 20, 10, 2, POS_FIGHTING,
d1257 1
a1257 1
  spello(SPELL_REMOVE_POISON, "remove poison", 40, 8, 4, POS_STANDING,
d1262 1
a1262 1
  spello(SPELL_INCENDIARY_NEBULA, "incendiary nebula", 0, 0, 0, POS_FIGHTING,
d1266 1
a1266 1
  spello(SPELL_MOONWELL, "moonwell", 50, 50, 0, POS_STANDING,
d1270 1
a1270 1
  spello(SPELL_SENSE_LIFE, "sense life", 20, 10, 2, POS_STANDING,
d1275 1
a1275 1
  spello(SPELL_SOULSHIELD, "soulshield", 0, 0, 0, POS_STANDING,
d1280 1
a1280 1
  spello(SPELL_DESTROY_UNDEAD, "destroy undead", 0, 0, 0, POS_FIGHTING,
d1284 1
a1284 1
  spello(SPELL_STONE_SKIN, "stone skin", 50, 25, 3, POS_FIGHTING,
d1289 1
a1289 1
  spello(SPELL_HASTE, "haste", 50, 25, 3, POS_FIGHTING,
d1294 1
a1294 1
  spello(SPELL_BLUR, "blur", 90, 60, 3, POS_FIGHTING,
d1299 1
a1299 1
  spello(SPELL_LESSER_ENDURANCE, "lesser endurance", 50, 30, 5, POS_STANDING,
d1304 1
a1304 1
  spello(SPELL_ENDURANCE, "endurance", 50, 30, 5, POS_STANDING,
d1309 1
a1309 1
  spello(SPELL_GREATER_ENDURANCE, "greater endurance", 50, 30, 5, POS_STANDING,
d1314 1
a1314 1
  spello(SPELL_VITALITY, "vitality", 50, 30, 5, POS_STANDING,
d1319 1
a1319 1
  spello(SPELL_GREATER_VITALITY, "greater vitality", 50, 30, 5, POS_STANDING,
d1324 1
a1324 1
  spello(SPELL_DRAGONS_HEALTH, "dragons health", 50, 30, 5, POS_STANDING,
d1329 1
a1329 1
  spello(SPELL_WALL_OF_FOG, "wall of fog", 50, 25, 5, POS_STANDING,
d1334 1
a1334 1
  spello(SPELL_FARSEE, "farsee", 25, 10, 1, POS_STANDING,
d1339 1
a1339 1
  spello(SPELL_CAUSE_LIGHT, "cause light", 0, 0, 0, POS_FIGHTING,
d1343 1
a1343 1
  spello(SPELL_CAUSE_SERIOUS, "cause serious", 0, 0, 0, POS_FIGHTING,
d1347 1
a1347 1
  spello(SPELL_CAUSE_CRITIC, "cause critical", 0, 0, 0, POS_FIGHTING,
d1351 1
a1351 1
  spello(SPELL_IDENTIFY, "identify", 0, 0, 0, POS_STANDING,
d1355 1
a1355 1
 spello(SPELL_BONE_ARMOR, "bone armor", 0, 0, 0, POS_STANDING,
d1360 1
a1360 1
  spello(SPELL_DEGENERATION, "degeneration", 0, 0, 0, POS_FIGHTING,
d1364 1
a1364 1
  spello(SPELL_SOUL_TAP, "soul tap", 0, 0, 0, POS_FIGHTING,
d1369 1
a1369 1
  spello(SPELL_REBUKE_UNDEAD, "rebuke undead", 0, 0, 0, POS_FIGHTING,
d1373 1
a1373 1
  spello(SPELL_NATURES_GUIDANCE, "natures guidance", 0, 0, 0, POS_FIGHTING,
d1378 1
a1378 1
  spello(SPELL_MOONBEAM, "moonbeam", 0, 0, 0, POS_FIGHTING,
d1471 1
a1471 1
  chanto(CHANT_REGENERATION, "regeneration", POS_RESTING,
d1475 1
a1475 1
  chanto(CHANT_BATTLE_HYMN, "battle hymn", POS_STANDING,
d1479 1
a1479 1
  chanto(CHANT_WAR_CRY, "war cry", POS_STANDING,
d1483 1
a1483 1
  chanto(CHANT_PEACE, "peace", POS_FIGHTING,
d1486 1
a1486 1
  chanto(CHANT_SHADOWS_SORROW_SONG, "shadows sorrow song", POS_FIGHTING, 
d1490 1
a1490 1
  chanto(CHANT_IVORY_SYMPHONY, "ivory symphony", POS_FIGHTING, 
d1494 1
a1494 1
  chanto(CHANT_ARIA_OF_DISSONANCE, "aria of dissonance", POS_FIGHTING,
d1498 1
a1498 1
  chanto(CHANT_SONATA_OF_MALAISE, "sonata of malaise", POS_FIGHTING, 
d1502 1
a1502 1
  chanto(CHANT_APOCALYPTIC_ANTHEM, "apocalyptic anthem", POS_FIGHTING, 
d1505 1
a1505 1
  chanto(CHANT_SEED_OF_DESTRUCTION, "seed of destruction", POS_FIGHTING, 
d1509 1
a1509 1
  chanto(CHANT_SPIRIT_WOLF, "spirit of the wolf", POS_FIGHTING, 
d1513 1
a1513 1
  chanto(CHANT_SPIRIT_BEAR, "spirit of the bear", POS_FIGHTING, 
d1517 1
a1517 1
  chanto(CHANT_INTERMINABLE_WRATH, "interminable wrath", POS_FIGHTING, 
d1522 1
a1522 1
/*  songo(SONG_CHORUS_OF_COURAGE, "chorus of courage", POS_STANDING,
d1632 3
@


1.23
log
@Fixed vampiric touch.
@
text
@d885 2
a886 2
         TRUE, MAG_MANUAL,
         C1, CAST_SPEED4, 0, SKILL_SPHERE_GENERIC, 15, FALSE, NULL);
d1632 3
@


1.22
log
@Fix spelling of riposte.
@
text
@d1468 1
d1632 3
@


1.21
log
@Make several spells do "mental" damage.
@
text
@d1415 1
a1415 1
  skillo(SKILL_RIPOST, "ripost", TRUE, 0);
d1631 3
@


1.20
log
@Now using flagvectors for effect, mob, player, preference, room, and
room effect flags.  AFF, AFF2, and AFF3 flags are now just EFF flags.
@
text
@d690 1
a690 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 5, FALSE,
d726 1
a726 1
         CAST_SPEED7, 0, SKILL_SPHERE_GENERIC, 5, TRUE, NULL);
d971 1
a971 1
         CAST_SPEED5, 0, SKILL_SPHERE_ENCHANT, 35, TRUE,
d1011 1
a1011 1
         CAST_SPEED5, DAM_MAGIC, SKILL_SPHERE_GENERIC, 21, FALSE, NULL);
d1209 1
a1209 1
         CAST_SPEED4, 0, SKILL_SPHERE_ENCHANT, 19, FALSE,
d1631 4
@


1.19
log
@Allow dark presence to operate on objects.
@
text
@d179 1
a179 1
   if (!victim || MOB2_FLAGGED(victim, MOB2_ILLUSORY))
d471 1
a471 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d479 1
a479 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d492 1
a492 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,	
d497 1
a497 1
         TAR_IGNORE, FALSE, MAG_SUMMONS, C1,
d501 1
a501 1
         TAR_CHAR_WORLD, FALSE, MAG_SUMMONS, C1,
d510 1
a510 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d519 1
a519 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d524 1
a524 1
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECTS, C1,
d536 1
a536 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d541 1
a541 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_AFFECTS, C1,
d546 1
a546 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d559 1
a559 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d576 1
a576 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d580 1
a580 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d584 1
a584 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d598 1
a598 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_DAMAGE | MAG_AFFECTS,
d612 1
a612 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_POINTS, C1,
d616 1
a616 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY | TAR_OUTDOORS, FALSE, MAG_AFFECTS, C1,
d621 1
a621 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY | TAR_OUTDOORS, FALSE, MAG_AFFECTS | MAG_POINTS, C1,
d626 1
a626 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_OUTDOORS, FALSE, MAG_AFFECTS, C1,
d631 1
a631 1
         TAR_IGNORE, FALSE, MAG_GROUPS, C1,
d640 1
a640 1
         TAR_IGNORE, FALSE, MAG_CREATIONS, C1,
d644 1
a644 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d649 1
a649 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d662 1
a662 1
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECTS, C1,
d666 1
a666 1
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE, MAG_AFFECTS | MAG_ALTER_OBJS, C1,
d671 1
a671 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d684 1
a684 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_DIRECT, TRUE, MAG_AFFECTS, C1,
d689 1
a689 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECTS, C1,
d694 1
a694 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d699 1
a699 1
         TAR_IGNORE, FALSE, MAG_AREAS, C1,
d707 1
a707 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d712 1
a712 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d717 1
a717 1
         TAR_IGNORE, FALSE, MAG_GROUPS, C1,
d729 1
a729 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d742 1
a742 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d771 1
a771 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d776 1
a776 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d781 1
a781 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d790 1
a790 1
         TAR_CHAR_ROOM, TRUE, MAG_DAMAGE | MAG_AFFECTS, C1,
d811 1
a811 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d816 1
a816 1
         TAR_IGNORE | TAR_DIRECT, TRUE, MAG_AREAS, C1,
d820 1
a820 1
         TAR_IGNORE, FALSE, MAG_BULK_OBJS | MAG_MASSES, C1,
d832 1
a832 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d837 1
a837 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d842 1
a842 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d847 1
a847 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d852 1
a852 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d857 1
a857 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_NOT_SELF, FALSE, MAG_AFFECTS, C1,
d866 1
a866 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECTS, C1,
d871 1
a871 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d889 1
a889 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d893 1
a893 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d897 1
a897 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d902 1
a902 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS | MAG_UNAFFECTS, C1,
d907 1
a907 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS | MAG_UNAFFECTS, C1,
d912 1
a912 1
         TAR_CHAR_ROOM | TAR_OBJ_INV, FALSE, MAG_AFFECTS | MAG_ALTER_OBJS,
d918 1
a918 1
         MAG_AFFECTS, C1,
d923 1
a923 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_NOT_SELF, TRUE, MAG_AFFECTS,
d932 1
a932 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d949 1
a949 1
         TAR_IGNORE, TRUE, MAG_AREAS, C9,
d953 1
a953 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d958 1
a958 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d962 1
a962 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d979 1
a979 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT | TAR_CONTACT, TRUE, MAG_DAMAGE | MAG_AFFECTS,
d984 1
a984 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_SUMMONS, C1,
d1000 1
a1000 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1018 1
a1018 1
         TAR_IGNORE, FALSE, MAG_CREATIONS, C1,
d1026 1
a1026 1
         TAR_CHAR_ROOM, FALSE, MAG_UNAFFECTS, C1,
d1030 1
a1030 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS, C1,
d1034 1
a1034 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS, C1,
d1038 1
a1038 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS, C1,
d1042 1
a1042 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS, C1,
d1046 1
a1046 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS, C1,
d1050 1
a1050 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS, C1,
d1055 1
a1055 1
         MAG_AFFECTS | MAG_ALTER_OBJS, C1, CAST_SPEED5, 0,
d1060 1
a1060 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1065 1
a1065 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1070 1
a1070 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1075 1
a1075 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1092 1
a1092 1
         TAR_IGNORE | TAR_OUTDOORS, TRUE, MAG_AREAS, C1,
d1096 1
a1096 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d1116 1
a1116 1
         TAR_IGNORE, FALSE, MAG_GROUPS, C1,
d1120 1
a1120 1
         TAR_IGNORE, FALSE, MAG_GROUPS, C1,
d1132 1
a1132 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS | MAG_UNAFFECTS, C1,
d1136 1
a1136 1
         TAR_IGNORE, FALSE, MAG_GROUPS, C1,
d1144 1
a1144 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS | MAG_UNAFFECTS, C1,
d1148 1
a1148 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1153 2
a1154 2
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, FALSE, MAG_AFFECTS |
         MAG_ALTER_OBJS, C1,
d1159 1
a1159 1
         TAR_CHAR_ROOM, FALSE, MAG_POINTS, C1,
d1185 1
a1185 1
         MAG_AFFECTS | MAG_ALTER_OBJS, C1,
d1190 1
a1190 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1199 1
a1199 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1208 1
a1208 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1213 1
a1213 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1234 1
a1234 1
         TAR_OBJ_ROOM, FALSE, MAG_SUMMONS, C1,
d1238 1
a1238 1
         TAR_OBJ_ROOM, FALSE, MAG_SUMMONS, C1,
d1242 1
a1242 1
         TAR_IGNORE, FALSE, MAG_SUMMONS, C1,
d1246 1
a1246 1
         TAR_IGNORE, FALSE, MAG_SUMMONS, C1,
d1250 1
a1250 1
         TAR_IGNORE, FALSE, MAG_SUMMONS, C1,
d1258 2
a1259 2
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, FALSE, MAG_UNAFFECTS
         | MAG_ALTER_OBJS, C1,
d1263 1
a1263 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1, 15, DAM_FIRE,
d1271 1
a1271 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d1276 1
a1276 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d1285 1
a1285 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1290 1
a1290 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1295 1
a1295 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d1300 1
a1300 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1305 1
a1305 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1310 1
a1310 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1315 1
a1315 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1320 1
a1320 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1325 1
a1325 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1335 1
a1335 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1356 1
a1356 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d1370 1
a1370 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECTS, C1,
d1374 1
a1374 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d1471 1
a1471 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, 0, FALSE,
d1475 1
a1475 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, 0, FALSE,
d1479 1
a1479 1
         TAR_IGNORE, FALSE, MAG_GROUPS, 0, FALSE,
d1486 1
a1486 1
         TAR_IGNORE, TRUE, MAG_MASSES, 0, FALSE,
d1494 1
a1494 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECTS, 0, TRUE,
d1498 1
a1498 1
         TAR_IGNORE, TRUE, MAG_MASSES, 0, FALSE,
d1505 1
a1505 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECTS, 0, TRUE,
d1509 1
a1509 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, 0, FALSE,
d1513 1
a1513 1
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, 0, FALSE,
d1518 1
a1518 1
         FALSE, MAG_AFFECTS, 0, FALSE, NULL);
d1522 1
a1522 1
        TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, 0, FALSE,
d1631 3
@


1.18
log
@Doing away with earth/air damage, going to crush, shock, water, cold.
@
text
@d666 1
a666 1
         TAR_CHAR_ROOM, FALSE, MAG_AFFECTS, C1,
d1631 3
@


1.17
log
@Change acid breath's damage type to acid.
@
text
@d468 1
a468 1
         CAST_SPEEDE, DAM_WATER, SKILL_SPHERE_WATER, 25, FALSE, NULL);
d472 1
a472 1
         CAST_SPEED4, DAM_WATER, SKILL_SPHERE_AIR, 21, FALSE, NULL);
d476 1
a476 1
         CAST_SPEEDD, DAM_WATER, SKILL_SPHERE_WATER, 7, FALSE, NULL);
d489 1
a489 1
         CAST_SPEEDF, DAM_WATER, SKILL_SPHERE_WATER, 29, FALSE, NULL);
d506 1
a506 1
         18, DAM_WATER, SKILL_SPHERE_WATER, 27, TRUE,
d791 1
a791 1
         CAST_SPEED1, DAM_AIR, SKILL_SPHERE_AIR, 5, FALSE, NULL);
d795 1
a795 1
         CAST_SPEED1, DAM_WATER, SKILL_SPHERE_WATER, 5, FALSE, NULL);
d799 1
a799 1
         CAST_SPEED1, DAM_AIR, SKILL_SPHERE_AIR, 5, FALSE, NULL);
d817 1
a817 1
         CAST_SPEED5, DAM_AIR, SKILL_SPHERE_AIR, 27, FALSE, NULL);
d853 1
a853 1
         CAST_SPEED3, DAM_WATER, SKILL_SPHERE_WATER, 17, FALSE,
d942 1
a942 1
         CAST_SPEEDE, DAM_WATER, SKILL_SPHERE_WATER, 19, FALSE, NULL);
d950 1
a950 1
         CAST_SPEED7, DAM_EARTH, SKILL_SPHERE_EARTH, 37, TRUE, NULL);
d959 1
a959 1
         16, DAM_WATER, SKILL_SPHERE_WATER, 31, TRUE, NULL);
d963 1
a963 1
         CAST_SPEED5, DAM_WATER, SKILL_SPHERE_WATER, 23, FALSE, NULL);
d967 1
a967 1
         CAST_SPEED4, DAM_AIR, SKILL_SPHERE_AIR, 5, FALSE, NULL);
d980 1
a980 1
         C1, CAST_SPEEDD, DAM_WATER, SKILL_SPHERE_WATER, 7, FALSE,
d1093 1
a1093 1
         CAST_SPEED5, DAM_EARTH, SKILL_SPHERE_EARTH, 5, FALSE, NULL);
d1097 1
a1097 1
         CAST_SPEED6, DAM_EARTH, SKILL_SPHERE_EARTH, 35, FALSE, NULL);
d1101 1
a1101 1
         CAST_SPEED7, DAM_EARTH, SKILL_SPHERE_EARTH, 35, TRUE, NULL);
d1165 1
a1165 1
         CAST_SPEEDD, DAM_AIR, SKILL_SPHERE_AIR, 17, FALSE, NULL);
d1205 1
a1205 1
         CAST_SPEEDD, DAM_AIR, SKILL_SPHERE_AIR, 9, FALSE, NULL);
d1631 3
@


1.16
log
@Using the new damage types defined in chars.h for spell damage.
@
text
@d803 1
a803 1
         CAST_SPEED1, DAM_FIRE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);
d1631 3
@


1.15
log
@Removed languages.
@
text
@d26 1
d464 1
a464 1
         18, COLD_DAMAGE, SKILL_SPHERE_WATER, 35, TRUE, NULL);
d468 1
a468 1
         CAST_SPEEDE, COLD_DAMAGE, SKILL_SPHERE_WATER, 25, FALSE, NULL);
d472 1
a472 1
         CAST_SPEED4, COLD_DAMAGE, SKILL_SPHERE_AIR, 21, FALSE, NULL);
d476 1
a476 1
         CAST_SPEEDD, COLD_DAMAGE, SKILL_SPHERE_WATER, 7, FALSE, NULL);
d489 1
a489 1
         CAST_SPEEDF, COLD_DAMAGE, SKILL_SPHERE_WATER, 29, FALSE, NULL);
d506 1
a506 1
         18, COLD_DAMAGE, SKILL_SPHERE_WATER, 27, TRUE,
d533 1
a533 1
         CAST_SPEEDD, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 9, FALSE, NULL);
d556 1
a556 1
         CAST_SPEEDE, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 21, FALSE, NULL);
d560 1
a560 1
         CAST_SPEED6, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 25, FALSE, NULL);
d564 1
a564 1
         C1, CAST_SPEEDE, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 29, FALSE, NULL);
d568 1
a568 1
         CAST_SPEED6, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 25, FALSE,
d573 1
a573 1
         CAST_SPEEDF, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 25, FALSE, NULL);
d577 1
a577 1
         16, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 31, TRUE, NULL);
d581 1
a581 1
         CAST_SPEED7, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 35, FALSE, NULL);
d590 1
a590 1
         CAST_SPEEDF, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 23, FALSE, NULL);
d599 1
a599 1
         C1, CAST_SPEED6, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, FALSE,
d655 1
a655 1
         CAST_SPEED3, GENERIC_DAMAGE, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);
d681 1
a681 1
         CAST_SPEED2, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);
d700 1
a700 1
         16, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, TRUE, NULL);
d704 1
a704 1
         CAST_SPEED4, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);
d756 1
a756 1
         18, ALIGN_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d760 1
a760 1
         CAST_SPEED5, ALIGN_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d764 1
a764 1
         CAST_SPEED5, ALIGN_DAMAGE, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);
d768 1
a768 1
         CAST_SPEED3, ALIGN_DAMAGE, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);
d787 1
a787 1
         CAST_SPEED1, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);
d791 1
a791 1
         CAST_SPEED1, AIR_DAMAGE, SKILL_SPHERE_AIR, 5, FALSE, NULL);
d795 1
a795 1
         CAST_SPEED1, COLD_DAMAGE, SKILL_SPHERE_WATER, 5, FALSE, NULL);
d799 1
a799 1
         CAST_SPEED1, SHOCK_DAMAGE, SKILL_SPHERE_AIR, 5, FALSE, NULL);
d803 1
a803 1
         CAST_SPEED1, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);
d817 1
a817 1
         CAST_SPEED5, SHOCK_DAMAGE, SKILL_SPHERE_AIR, 27, FALSE, NULL);
d829 1
a829 1
         C1, CAST_SPEEDF, GENERIC_DAMAGE, SKILL_SPHERE_GENERIC, 27, FALSE, NULL);
d848 1
a848 1
         CAST_SPEED3, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 17, FALSE,
d853 1
a853 1
         CAST_SPEED3, COLD_DAMAGE, SKILL_SPHERE_WATER, 17, FALSE,
d890 1
a890 1
         1, ALIGN_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d894 1
a894 1
         1, ALIGN_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d929 1
a929 1
         CAST_SPEED3, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);
d938 1
a938 1
         CAST_SPEEDD, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 5, FALSE, NULL);
d942 1
a942 1
         CAST_SPEEDE, COLD_DAMAGE, SKILL_SPHERE_WATER, 19, FALSE, NULL);
d946 1
a946 1
         CAST_SPEEDE, GENERIC_DAMAGE, SKILL_SPHERE_GENERIC, 25, FALSE, NULL);
d950 1
a950 1
         CAST_SPEED7, EARTH_DAMAGE, SKILL_SPHERE_EARTH, 37, TRUE, NULL);
d959 1
a959 1
         16, COLD_DAMAGE, SKILL_SPHERE_WATER, 31, TRUE, NULL);
d963 1
a963 1
         CAST_SPEED5, COLD_DAMAGE, SKILL_SPHERE_WATER, 23, FALSE, NULL);
d967 1
a967 1
         CAST_SPEED4, SHOCK_DAMAGE, SKILL_SPHERE_AIR, 5, FALSE, NULL);
d980 1
a980 1
         C1, CAST_SPEEDD, COLD_DAMAGE, SKILL_SPHERE_WATER, 7, FALSE,
d1011 1
a1011 1
         CAST_SPEED5, GENERIC_DAMAGE, SKILL_SPHERE_GENERIC, 21, FALSE, NULL);
d1085 1
a1085 1
         CAST_SPEED3, ALIGN_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d1089 1
a1089 1
         CAST_SPEED5, ALIGN_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d1093 1
a1093 1
         CAST_SPEED5, EARTH_DAMAGE, SKILL_SPHERE_EARTH, 5, FALSE, NULL);
d1097 1
a1097 1
         CAST_SPEED6, EARTH_DAMAGE, SKILL_SPHERE_EARTH, 35, FALSE, NULL);
d1101 1
a1101 1
         CAST_SPEED7, EARTH_DAMAGE, SKILL_SPHERE_EARTH, 35, TRUE, NULL);
d1109 1
a1109 1
         CAST_SPEED5, DEATH_DAMAGE, SKILL_SPHERE_DEATH, 19, FALSE, NULL);
d1113 1
a1113 1
         CAST_SPEED1, DEATH_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d1125 1
a1125 1
         CAST_SPEEDE, FIRE_DAMAGE, SKILL_SPHERE_FIRE, 21, FALSE, NULL);
d1129 1
a1129 1
         CAST_SPEED6, HEALING_DAMAGE, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1141 1
a1141 1
         CAST_SPEED5, HEALING_DAMAGE, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1165 1
a1165 1
         CAST_SPEEDD, SHOCK_DAMAGE, SKILL_SPHERE_AIR, 17, FALSE, NULL);
d1181 1
a1181 1
         CAST_SPEEDD, GENERIC_DAMAGE, SKILL_SPHERE_GENERIC, 5, FALSE, NULL);
d1205 1
a1205 1
         CAST_SPEEDD, SHOCK_DAMAGE, SKILL_SPHERE_AIR, 9, FALSE, NULL);
d1263 1
a1263 1
         TAR_IGNORE, TRUE, MAG_AREAS, C1, 15, FIRE_DAMAGE,
d1282 1
a1282 1
         CAST_SPEED3, ALIGN_DAMAGE, SKILL_SPHERE_DEATH, 5, FALSE, NULL);
d1341 1
a1341 1
         CAST_SPEED2, HEALING_DAMAGE, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1345 1
a1345 1
         CAST_SPEED3, HEALING_DAMAGE, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1349 1
a1349 1
         CAST_SPEED4, HEALING_DAMAGE, SKILL_SPHERE_HEALING, 5, FALSE, NULL);
d1362 1
a1362 1
         CAST_SPEED4, HEALING_DAMAGE, SKILL_SPHERE_HEALING, 12, TRUE, NULL);
d1366 1
a1366 1
         CAST_SPEED4, HEALING_DAMAGE, SKILL_SPHERE_GENERIC, 15, FALSE,
d1631 3
@


1.14
log
@Added bodyslam skillo define.
@
text
@d262 1
a262 1
               if (IS_SPELL(skill) || IS_LANGUAGE(skill))
a1419 11
  skillo(LANG_BARBARIAN, "barbarian", FALSE, 0);
  skillo(LANG_GNOMISH, "gnomish", FALSE, 0);
  skillo(LANG_DUERGAR, "duergar", FALSE, 0);
  skillo(LANG_DROW, "drow", FALSE, 0);
  skillo(LANG_ORCISH, "orcish", FALSE, 0);
  skillo(LANG_OGRE, "ogre", FALSE, 0);
  skillo(LANG_COMMON, "common", FALSE, 0);
  skillo(LANG_ELVEN, "elven", FALSE, 0);
  skillo(LANG_DWARVEN, "dwarven", FALSE, 0);
  skillo(LANG_TROLLISH, "trollish", FALSE, 0);
  skillo(LANG_HALFLING, "halfling", FALSE, 0);
d1630 3
@


1.13
log
@Added definition of misdirection spell.
@
text
@d1477 1
d1641 3
@


1.12
log
@Make fear into a manual spell.
@
text
@d809 5
d1640 3
@


1.11
log
@Moving shapechange and chant to the cooldown system.
@
text
@d422 2
a423 1
 * spellnum, name, maxmana, minmana, manachng, minpos, targets, violent?, routines.
d805 1
a805 1
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECTS, C1,
d1635 3
@


1.10
log
@Replaced action delays and skill delays with a single list of
'cooldowns', which are decremented by a recurring event and
also save to the player file.
@
text
@d1618 1
a1618 1
  return 0;
d1626 1
a1628 1
    SET_FLAG(GET_EVENT_FLAGS(ch), EVENT_COOLDOWN);
d1634 5
@


1.9
log
@Removing the min_circle and lowest_circle fields on the skillinfo
struct.  They are redundant; use the level fields combined with
LEVEL_TO_CIRCLE macro.  Renaming spell_level to skill_assign and
moving it here.
@
text
@d25 1
d1580 52
d1634 6
@


1.8
log
@Now relying on math header file.
@
text
@a353 4
  for (i = 0; i < NUM_CLASSES; i++)
    skills[skill].min_circle[i] = NUM_SPELL_CIRCLES;
  skills[skill].lowest_circle = NUM_SPELL_CIRCLES;

a382 4
  for (i = 0; i < NUM_CLASSES; i++)
    skills[skill].min_circle[i] = NUM_SPELL_CIRCLES;
  skills[skill].lowest_circle = NUM_SPELL_CIRCLES;

d1386 1
d1547 30
d1581 3
@


1.7
log
@The first aid skill define was missing.
@
text
@d19 1
a19 1

d1558 3
@


1.6
log
@Moving skill names to the skilldef struct.
Adding the concept of contact and direct skills/spells.
@
text
@d1441 1
d1558 4
@


1.5
log
@Adding berserker skill and chant defines.
@
text
@d29 1
a29 414
/*
 * This arrangement is pretty stupid, but the number of skills is limited by
 * the playerfile.  We can arbitrarily increase the number of skills by
 * increasing the space in the playerfile. Meanwhile, this should provide
 * ample slots for skills.
 */

char *skillnames[] =
{
  "!RESERVED!",                        /* 0 - reserved */

  /* SPELLS */

  "armor",                        /* 1 */
  "teleport",
  "bless",
  "blindness",
  "burning hands",
  "call lightning",
  "charm person",
  "chill touch",
  "clone",
  "color spray",                /* 10 */
  "control weather",
  "create food",
  "create water",
  "cure blind",
  "cure critical",
  "cure light",
  "curse",
  "detect alignment",
  "detect invisibility",
  "detect magic",                /* 20 */
  "detect poison",
  "dispel evil",
  "earthquake",
  "enchant weapon",
  "energy drain",
  "fireball",
  "harm",
  "heal",
  "invisibility",
  "lightning bolt",                /* 30 */
  "locate object",
  "magic missile",
  "poison",
  "protection from evil",
  "remove curse",
  "sanctuary",
  "shocking grasp",
  "sleep",
  "strength",
  "summon",                        /* 40 */
  "ventriloquate",
  "word of recall",
  "remove poison",
  "sense life",
  "animate dead",
  "dispel good",
  "group armor",
  "group heal",
  "group recall",
  "infravision",                /* 50 */
  "waterwalk",
  "stone skin",
  "full heal",
  "full harm",
  "wall of fog",
  "wall of stone",
  "fly",
  "summon dracolich",
  "summon elemental",
  "summon demon",
  "summon greater demon",                        /* 61 */
  "dimension door",
  "creeping doom",
  "doom",
  "meteorswarm",        /* 65 */
  "bigbys clenched fist",
  "farsee",
  "haste",
  "blur",
  "greater endurance",        /* 70 */
  "moonwell",
  "inn strength",
  "darkness",
  "illumination",
  "comprehend language",        /* 75 */
  "cone of cold",
  "ice storm",
  "ice shards",
  "major paralysis",
  "vampiric breath",        /* 80 */
  "resurrect",
  "incendiary nebula",
  "minor paralysis",
  "cause light",
  "cause serious",      /* 85 */
  "cause critical",
  "preserve",
  "cure serious",
  "vigorize light",
  "vigorize serious",        /* 90 */
  "vigorize critic",
  "soulshield",
  "destroy undead",
  "silence",
  "flamestrike",        /* 95 */
  "unholy word",
  "holy word",
  "plane shift",
  "dispel magic",
  "minor creation",        /* 100 */
  "concealment",
  "ray of enfeeblement",
  "levitate",
  "wizard eye",
  "fireshield",                /* 105 */
  "coldshield",
  "minor globe",
  "major globe",
  "disintegrate",
  "harness",                /* 110 */
  "chain lightning",
  "mass invisibility",
  "relocate",
  "fear",
  "circle of light",        /* 115 */
  "divine bolt",
  "prayer",
  "elemental warding",
  "divine ray",
  "lesser exorcism",        /* 120 */
  "lesser invocation",
  "speak in tongues",
  "enlightenment",
  "exorcism",
  "greater invocation",  /* 125 */
  "wings of heaven",
  "banish",
  "word of command",
  "divine essence",
  "heavens gate",         /* 130 */
  "dark presence",
  "demonskin",
  "dark feast",
  "hell bolt",
  "disease",             /* 135 */
  "insanity",
  "demonic aspect",
  "hellfire and brimstone",
  "stygian eruption",
  "demonic mutation",    /* 140 */
  "wings of hell",
  "sane mind",
  "hell gate",
  "barkskin",
  "night vision",        /* 145 */
  "writhing weeds",
  "create spring",
  "nourishment",
  "cloak of gaia",
  "natures embrace",     /* 150 */
  "entangle",
  "invigorate",
  "wandering woods",
  "urban renewal",
  "sunray",              /* 155 */
  "armor of gaia",
   "fire darts",
   "magic torch",
   "smoke",
   "mirage",             /* 160 */
   "flame blade",
   "heatwave",
   "firestorm",
   "melt",
   "circle of fire",     /* 165 */
   "immolate",
   "supernova",
   "cremate",
   "negate heat",
   "combust",            /* 170 */
   "ice darts",
   "ice armor",
   "ice dagger",
   "freezing wind",
   "freeze",             /* 175 */
   "wall of ice",
   "iceball",
   "flood",
   "vaporform",
   "negate cold",        /* 180 */
   "waterform",
   "extinguish",
   "rain",
   "reduce",
   "enlarge",            /* 185 */
  "identify",
  "bone armor",
  "summon corpse",
  "shift corpse",

  /* languages */
  "!UNUSED!",/* 190 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 195 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 200 */

  "fire breath",
  "gas breath",
  "frost breath",
  "acid breath",
  "lightning breath",        /* 205 */

  "lesser endurance",
  "endurance",
  "vitality",
  "greater vitality",
  "dragons health", /* 210 */

  "rebuke undead",
  "degeneration",
  "soul tap",
  "natures guidance",
  "moonbeam", /* 215 */
  "phantasm",
  "simulacrum",

  "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 220 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 225 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 230 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 235 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 240 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 245 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 250 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 255 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 260 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 265 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 270 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 275 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 280 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 285 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 290 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 295 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 300 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 305 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 310 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 315 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 320 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 325 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 330 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 335 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 340 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 345 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 350 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 355 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 360 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 365 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 370 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 375 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 380 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 385 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 390 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 395 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",/* 400 */

/* SKILLS */

  "backstab",            /* 401 */
  "bash",                /* 402 */
  "hide",                /* 403 */
  "kick",                /* 404 */
  "pick lock",           /* 405 */
  "punch",               /* 406 */
  "rescue",              /* 407 */
  "sneak",               /* 408 */
  "steal",               /* 409 */
  "track",               /* 410 */
  "dual wield",          /* 411 */
  "double attack",       /* 412 */
  "berserk",             /* 413 */
  "springleap",          /* 414 */
  "mount",               /* 415 */
  "riding",              /* 416 */
  "tame",                /* 417 */
  "throatcut",           /* 418 */
  "doorbash",            /* 419 */
  "parry",               /* 420 */
  "dodge",               /* 421 */
  "riposte",             /* 422 */
  "meditate",            /* 423 */
  "quick chant",         /* 424 */
  "utility",             /* 425 */
  "circle",              /* 426 */
  "bodyslam",
  "bind",                /* 428 */
  "shapechange",
  "switch",              /* 430 */
  "disarm",
  "fumbling weapon",     /* fumbling */
  "dropped weapon",      /* dropped */
  "guard",
  "breath",              /* 435 */
  "sweep",
  "roar",
  "douse",
  "aware",
  "instant kill",        /* 440 */
  "hitall",
  "hunt",
  "bandage",
  "first aid",
  "vampiric touch",        /* 445 */
  "chant",
  "scribe",
  "safefall",
  "barehand",
  "summon mount",          /* 450 */
  "spell knowledge",
  "sphere of generic",
  "sphere of fire",
  "sphere of water",
  "sphere of earth",           /* 455 */
  "sphere of air",
  "sphere of healing",
  "sphere of protection",
  "sphere of enchantment",
  "sphere of summoning",   /* 460 */
  "sphere of death",
  "sphere of divination",
  "bludgeoning weapons",
  "piercing weapons",
  "slashing weapons",        /* 465 */
  "2H bludgeoning weapons",
  "2H piercing weapons",
  "2H slashing weapons",
  "missile weapons",
  "!ONFIRE!",        /* 470 */
  "lay hands",
  "eye gouge",
  "retreat",
  "group retreat",
  "corner",        /* 475 */
  "stealth",
  "shadow",
  "conceal",
  "peck",
  "claw",        /* 480 */
  "electrify",
  "tantrum",
  "ground shaker",
  "battle howl",
  "maul",	/* 485 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 490 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 495 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 500 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 505 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 510 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 515 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 520 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 525 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 530 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 535 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 540 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 545 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 550 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 555 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 560 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 565 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 570 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 575 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 580 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 585 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 590 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 595 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 600 */

  /* MONK CHANTS */
  "regeneration",
  "battle hymn",
  "war cry",
  "peace",
  "shadows sorrow song",        /* 605 */
  "ivory symphony",
  "aria of dissonance",
  "sonata of malaise",
  "apocalyptic anthem",
  "seed of destruction",        /* 610 */
  "spirit of the wolf",
  "spirit of the bear",
  "interminable wrath",
  "!UNUSED!", "!UNUSED!",        /* 615 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 620 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 625 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 630 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 635 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 640 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 645 */
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 650 */



  /* OBJECT SPELLS AND NPC SPELLS/SKILLS */

  "!UNUSED!",            /* 651 */
  "fire breath",         /* 652 */
  "gas breath",          /* 653 */
  "frost breath",        /* 654 */
  "acid breath",         /* 655 */
  "lightning breath",    /* 656 */
  "\n"                 /* the end */
};

char *skill_name(int num)
d31 1
a31 3
  int i = 0;

  if (num <= 0) {
d38 1
a38 9
  while (num && *skillnames[i] != '\n') {
    num--;
    i++;
  }

  if (*skillnames[i] != '\n')
    return skillnames[i];
  else
    return "UNDEFINED";
d45 1
a45 1
  char first[256], first2[256];
d50 1
a50 1
  while (*skillnames[++index] != '\n') {
d59 1
a59 1
    if (!strcmp(name, skillnames[index]))
d66 2
a67 2
    if (is_abbrev(name, skillnames[index])) {
       if (abbrevmatch == -1 || strcmp(skillnames[index], skillnames[abbrevmatch]) == -1) {
d77 2
a78 1
    temp = any_one_arg(skillnames[index], first);
d153 1
a153 1
            skillnames[skill]);
d157 1
a157 1
            skillnames[skill]);
d327 4
a330 4
void dskill(int skill, int max_mana, int min_mana, int mana_change, byte minpos,
            int targets, byte violent, bool humanoid, int routines, int mem_time,
            int cast_time, int damage_type, int sphere, int pages, int quest,
            char *wearoff)
d334 2
d367 2
d396 9
a404 9
#define skillo(skill, humanoid) dskill(skill, 0, 0, 0, 0, 0, 0, humanoid, \
      0, 0, 0, 0, 0, 0, 0, NULL);
#define chanto(chant, minpos, targets, violent, routines, damage, quest, wearoff) \
     dskill(chant, 0, 0, 0, minpos, targets, violent, FALSE, routines, 0, 0, \
            damage, 0, 0, quest, wearoff)
#define songo(song, minpos, targets, violent, routines, damage, quest, wearoff) \
     dskill(song, 0, 0, 0, minpos, targets, violent, FALSE, routines, 0, 0, \
            damage, 0, 0, quest, wearoff)
#define spello(spl, max_mana, min_mana, mana_change, minpos, \
d408 1
a408 1
     dskill (spl, max_mana, min_mana, mana_change, minpos, \
d421 1
a421 1
  for (i = 1; i <= TOP_SKILL_DEFINE; i++)
d424 2
d429 1
a429 1
 * spellnum, maxmana, minmana, manachng, minpos, targets, violent?, routines.
d434 2
d467 1
a467 1
  spello(SPELL_FLOOD, 0, 0, 0, POS_FIGHTING,
d471 1
a471 1
  spello(SPELL_FREEZE, 0, 0, 0, POS_FIGHTING,
d475 1
a475 1
  spello(SPELL_FREEZING_WIND, 0, 0, 0, POS_FIGHTING,
d479 2
a480 2
  spello(SPELL_ICE_DARTS, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
d483 1
a483 1
  spello(SPELL_ICE_ARMOR, 0, 0, 0, POS_STANDING,
d488 1
a488 1
  spello(SPELL_ICE_DAGGER, 0, 0, 0, POS_STANDING,
d492 2
a493 2
  spello(SPELL_ICEBALL, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d496 2
a497 2
  spello(SPELL_NEGATE_COLD, 0, 0, 0, POS_STANDING,
         TAR_CHAR_ROOM | TAR_SELF_ONLY, FALSE, MAG_AFFECTS, C1,
d501 1
a501 1
  spello(SPELL_PHANTASM, 0, 0, 0, POS_STANDING,
d505 1
a505 1
  spello(SPELL_SIMULACRUM, 0, 0, 0, POS_STANDING,
d509 1
a509 1
  spello(SPELL_WALL_OF_ICE, 0, 0, 0, POS_STANDING,
d514 1
a514 1
  spello(SPELL_VAPORFORM, 0, 0, 0, POS_STANDING,
d519 1
a519 1
  spello(SPELL_VENTRILOQUATE, 0, 0, 0, POS_RESTING,
d523 1
a523 1
  spello(SPELL_WATERFORM, 0, 0, 0, POS_STANDING,
d528 1
a528 1
  spello(SPELL_EXTINGUISH, 0, 0, 0, POS_FIGHTING,
d532 1
a532 1
  spello(SPELL_RAIN, 0, 0, 0, POS_STANDING,
d536 2
a537 2
  spello(SPELL_FIRE_DARTS, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
d540 1
a540 1
  spello(SPELL_MAGIC_TORCH, 0, 0, 0, POS_FIGHTING,
d545 2
a546 2
  spello(SPELL_SMOKE, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_AFFECTS, C1,
d550 1
a550 1
  spello(SPELL_MIRAGE, 0, 0, 0, POS_FIGHTING,
d555 1
a555 1
  spello(SPELL_FLAME_BLADE, 0, 0, 0, POS_STANDING,
d559 2
a560 2
  spello(SPELL_HEATWAVE, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d563 1
a563 1
  spello(SPELL_FIRESTORM, 0, 0, 0, POS_FIGHTING,
d567 1
a567 1
  spello(SPELL_MELT, 0, 0, 0, POS_FIGHTING,
d571 1
a571 1
  spello(SPELL_CIRCLE_OF_FIRE, 0, 0, 0, POS_STANDING,
d576 2
a577 2
  spello(SPELL_IMMOLATE, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
d580 1
a580 1
  spello(SPELL_SUPERNOVA, 100, 50, 3, POS_FIGHTING,
d584 1
a584 1
  spello(SPELL_CREMATE, 0, 0, 0, POS_FIGHTING,
d588 1
a588 1
  spello(SPELL_NEGATE_HEAT, 0, 0, 0, POS_STANDING,
d593 1
a593 1
  spello(SPELL_COMBUST, 0, 0, 0, POS_FIGHTING,
d597 1
a597 1
  spello(SPELL_URBAN_RENEWAL, 0, 0, 0, POS_STANDING,
d602 2
a603 2
  spello(SPELL_SUNRAY, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE | MAG_AFFECTS,
d607 1
a607 1
  spello(SPELL_ARMOR_OF_GAIA, 0, 0, 0, POS_STANDING,
d611 1
a611 1
  spello(SPELL_WANDERING_WOODS, 0, 0, 0, POS_STANDING,
d616 1
a616 1
  spello(SPELL_NOURISHMENT, 0, 0, 0, POS_STANDING,
d620 1
a620 1
  spello(SPELL_GAIAS_CLOAK, 0, 0, 0, POS_STANDING,
d625 1
a625 1
  spello(SPELL_NATURES_EMBRACE, 0, 0, 0, POS_STANDING,
d630 1
a630 1
  spello(SPELL_ENTANGLE, 0, 0, 0, POS_FIGHTING,
d635 1
a635 1
  spello(SPELL_INVIGORATE, 0, 0, 0, POS_STANDING,
d639 1
a639 1
  spello(SPELL_WALL_OF_STONE, 0, 0, 0, POS_STANDING,
d644 1
a644 1
  spello(SPELL_CREATE_SPRING, 0, 0, 0, POS_STANDING,
d648 1
a648 1
  spello(SPELL_BARKSKIN, 0, 0, 0, POS_FIGHTING,
d653 1
a653 1
  spello(SPELL_NIGHT_VISION, 0, 0, 0, POS_FIGHTING,
d658 1
a658 1
  spello(SPELL_WRITHING_WEEDS, 0, 0, 0, POS_FIGHTING,
d662 1
a662 1
  spello(SPELL_HELLS_GATE, 0, 0, 0, POS_STANDING,
d666 1
a666 1
  spello(SPELL_SANE_MIND, 0, 0, 0, POS_STANDING,
d670 1
a670 1
  spello(SPELL_DARK_PRESENCE, 0, 0, 0, POS_STANDING,
d675 1
a675 1
  spello(SPELL_DEMONSKIN, 0, 0, 0, POS_FIGHTING,
d680 2
a681 2
  spello(SPELL_DARK_FEAST, 0, 0, 0, POS_STANDING,
         TAR_OBJ_ROOM, FALSE, MAG_MANUAL, C1,
d684 2
a685 2
  spello(SPELL_HELL_BOLT, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d688 2
a689 2
  spello(SPELL_DISEASE, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM, TRUE, MAG_AFFECTS, C1,
d693 1
a693 1
  spello(SPELL_INSANITY, 0, 0, 0, POS_FIGHTING,
d698 1
a698 1
  spello(SPELL_DEMONIC_ASPECT, 0, 0, 0, POS_FIGHTING,
d703 1
a703 1
  spello(SPELL_HELLFIRE_BRIMSTONE, 0, 0, 0, POS_FIGHTING,
d707 1
a707 1
  spello(SPELL_STYGIAN_ERUPTION, 0, 0, 0, POS_FIGHTING,
d711 1
a711 1
  spello(SPELL_DEMONIC_MUTATION, 0, 0, 0, POS_STANDING,
d716 1
a716 1
  spello(SPELL_WINGS_OF_HELL, 0, 0, 0, POS_STANDING,
d721 1
a721 1
  spello(SPELL_DIVINE_ESSENCE, 0, 0, 0, POS_STANDING,
d725 1
a725 1
  spello(SPELL_HEAVENS_GATE, 0, 0, 0, POS_STANDING,
d729 1
a729 1
  spello(SPELL_WORD_OF_COMMAND, 0, 0, 0, POS_STANDING,
d733 1
a733 1
  spello(SPELL_WINGS_OF_HEAVEN, 0, 0, 0, POS_STANDING,
d738 1
a738 1
  spello(SPELL_BANISH, 0, 0, 0, POS_FIGHTING,
d742 1
a742 1
  spello(SPELL_ENLIGHTENMENT, 0, 0, 0, POS_STANDING,
d746 1
a746 1
  spello(SPELL_SPEAK_IN_TONGUES, 0, 0, 0, POS_STANDING,
d751 1
a751 1
  spello(SPELL_GREATER_INVOCATION, 0, 0, 0, POS_FIGHTING,
d755 1
a755 1
  spello(SPELL_LESSER_INVOCATION, 0, 0, 0, POS_FIGHTING,
d759 1
a759 1
  spello(SPELL_EXORCISM, 0, 0, 0, POS_FIGHTING,
d763 1
a763 1
  spello(SPELL_LESSER_EXORCISM, 0, 0, 0, POS_FIGHTING,
d767 2
a768 2
  spello(SPELL_DIVINE_RAY, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d771 2
a772 2
  spello(SPELL_DIVINE_BOLT, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d775 1
a775 1
  spello(SPELL_PRAYER, 0, 0, 0, POS_STANDING,
d780 1
a780 1
  spello(SPELL_ELEMENTAL_WARDING, 0, 0, 0, POS_STANDING,
d785 1
a785 1
  spello(SPELL_CIRCLE_OF_LIGHT, 0, 0, 0, POS_STANDING,
d790 1
a790 1
  spello(SPELL_FIRE_BREATH, 0, 0, 0, POS_FIGHTING,
d794 1
a794 1
  spello(SPELL_GAS_BREATH, 0, 0, 0, POS_FIGHTING,
d798 2
a799 2
  spello(SPELL_FROST_BREATH, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM, TRUE, MAG_DAMAGE, C1,
d802 1
a802 1
  spello(SPELL_LIGHTNING_BREATH, 0, 0, 0, POS_FIGHTING,
d806 2
a807 2
  spello(SPELL_ACID_BREATH, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM, TRUE, MAG_DAMAGE, C1,
d810 1
a810 1
  spello(SPELL_FEAR, 0, 0, 0, POS_FIGHTING,
d815 2
a816 2
  spello(SPELL_CHAIN_LIGHTNING, 0, 0, 0, POS_FIGHTING,
         TAR_IGNORE, TRUE, MAG_AREAS, C1,
d819 1
a819 1
  spello(SPELL_MASS_INVIS, 0, 0, 0, POS_STANDING,
d823 1
a823 1
  spello(SPELL_RELOCATE, 0, 0, 0, POS_STANDING,
d827 2
a828 2
  spello(SPELL_DISINTEGRATE, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE | MAG_MANUAL,
d831 1
a831 1
  spello(SPELL_HARNESS, 0, 0, 0, POS_FIGHTING,
d836 1
a836 1
  spello(SPELL_MINOR_GLOBE, 0, 0, 0, POS_STANDING,
d841 1
a841 1
  spello(SPELL_MAJOR_GLOBE, 0, 0, 0, POS_STANDING,
d846 1
a846 1
  spello(SPELL_FIRESHIELD, 0, 0, 0, POS_STANDING,
d851 1
a851 1
  spello(SPELL_COLDSHIELD, 0, 0, 0, POS_STANDING,
d856 2
a857 2
  spello(SPELL_MINOR_PARALYSIS, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, FALSE, MAG_AFFECTS, C1,
d861 1
a861 1
  spello(SPELL_TELEPORT, 0, 0, 0, POS_FIGHTING,
d865 1
a865 1
  spello(SPELL_RAY_OF_ENFEEB, 0, 0, 0, POS_FIGHTING,
d870 1
a870 1
  spello(SPELL_LEVITATE, 0, 0, 0, POS_STANDING,
d875 1
a875 1
  spello(SPELL_WIZARD_EYE, 0, 0, 0, POS_STANDING,
d879 1
a879 1
  spello(SPELL_MINOR_CREATION, 0, 0, 0,POS_STANDING,
d883 1
a883 1
  spello(SPELL_DISPEL_MAGIC, 0, 0, 0, POS_FIGHTING,
d888 1
a888 1
  spello(SPELL_UNHOLY_WORD, 0, 0, 0, POS_FIGHTING,
d892 1
a892 1
  spello(SPELL_HOLY_WORD, 0, 0, 0, POS_FIGHTING,
d896 1
a896 1
  spello(SPELL_ARMOR, 30, 15, 3, POS_FIGHTING,
d901 1
a901 1
  spello(SPELL_REDUCE, 35, 5, 3, POS_STANDING,
d906 1
a906 1
  spello(SPELL_ENLARGE, 35, 5, 3, POS_STANDING,
d911 1
a911 1
  spello(SPELL_BLESS, 35, 5, 3, POS_STANDING,
d916 1
a916 1
  spello(SPELL_BLINDNESS, 35, 25, 1, POS_FIGHTING,
d922 1
a922 1
  spello(SPELL_SILENCE, 0, 0, 0, POS_FIGHTING,
d927 2
a928 2
  spello(SPELL_FLAMESTRIKE, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d931 1
a931 1
  spello(SPELL_COMPREHEND_LANG, 45, 30, 1, POS_STANDING,
d936 2
a937 2
  spello(SPELL_BURNING_HANDS, 30, 10, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d940 2
a941 2
  spello(SPELL_CONE_OF_COLD, 35, 15, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d944 2
a945 2
  spello(SPELL_BIGBYS_CLENCHED_FIST, 90, 35, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d948 1
a948 1
  spello(SPELL_METEORSWARM, 100, 50, 3, POS_FIGHTING,
d952 1
a952 1
  spello(SPELL_WATERWALK, 35, 5, 3, POS_STANDING,
d957 1
a957 1
  spello(SPELL_ICE_SHARDS, 100, 50, 3, POS_FIGHTING,
d961 1
a961 1
  spello(SPELL_ICE_STORM, 100, 50, 3, POS_FIGHTING,
d965 1
a965 1
  spello(SPELL_CALL_LIGHTNING, 40, 25, 3, POS_FIGHTING,
d969 1
a969 1
  spello(SPELL_CHARM, 75, 50, 2, POS_STANDING,
d974 1
a974 1
  spello(SPELL_PLANE_SHIFT, 0, 0, 0, POS_STANDING,
d978 2
a979 2
  spello(SPELL_CHILL_TOUCH, 30, 10, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE | MAG_AFFECTS,
d983 1
a983 1
  spello(SPELL_CLONE, 80, 65, 5, POS_STANDING,
d987 1
a987 1
  spello(SPELL_DARKNESS, 50, 25, 5, POS_STANDING,
d992 1
a992 1
  spello(SPELL_ILLUMINATION, 50, 25, 5, POS_STANDING,
d999 1
a999 1
  spello(SPELL_INN_STRENGTH, 35, 30, 1, POS_STANDING,
d1004 1
a1004 1
  spello(SPELL_MAJOR_PARALYSIS, 35, 30, 1, POS_STANDING,
d1009 2
a1010 2
  spello(SPELL_COLOR_SPRAY, 30, 15, 3, POS_FIGHTING,
         TAR_IGNORE, TRUE, MAG_MANUAL, C1,
d1013 1
a1013 1
  spello(SPELL_CONTROL_WEATHER, 75, 25, 5, POS_STANDING,
d1017 1
a1017 1
  spello(SPELL_CREATE_FOOD, 30, 5, 4, POS_STANDING,
d1021 1
a1021 1
  spello(SPELL_CREATE_WATER, 30, 5, 4, POS_STANDING,
d1025 1
a1025 1
  spello(SPELL_CURE_BLIND, 30, 5, 2, POS_STANDING,
d1029 1
a1029 1
  spello(SPELL_CURE_CRITIC, 30, 10, 2, POS_FIGHTING,
d1033 1
a1033 1
  spello(SPELL_CURE_SERIOUS, 0, 0, 0, POS_FIGHTING,
d1037 1
a1037 1
  spello(SPELL_CURE_LIGHT, 30, 10, 2, POS_FIGHTING,
d1041 1
a1041 1
  spello(SPELL_VIGORIZE_LIGHT, 0,0,0, POS_STANDING,
d1045 1
a1045 1
  spello(SPELL_VIGORIZE_SERIOUS, 0,0,0, POS_STANDING,
d1049 1
a1049 1
  spello(SPELL_VIGORIZE_CRITIC, 0,0,0, POS_STANDING,
d1053 1
a1053 1
  spello(SPELL_CURSE, 80, 50, 2, POS_FIGHTING,
d1059 1
a1059 1
  spello(SPELL_DETECT_ALIGN, 20, 10, 2, POS_STANDING,
d1064 1
a1064 1
  spello(SPELL_DETECT_INVIS, 20, 10, 2, POS_STANDING,
d1069 1
a1069 1
  spello(SPELL_DETECT_MAGIC, 20, 10, 2, POS_STANDING,
d1074 1
a1074 1
  spello(SPELL_FLY, 50, 5, 3, POS_STANDING,
d1079 1
a1079 1
  spello(SPELL_DETECT_POISON, 15, 5, 1, POS_STANDING,
d1083 1
a1083 1
  spello(SPELL_DISPEL_EVIL, 40, 25, 3, POS_FIGHTING,
d1087 1
a1087 1
  spello(SPELL_DISPEL_GOOD, 40, 25, 3, POS_FIGHTING,
d1091 1
a1091 1
  spello(SPELL_EARTHQUAKE, 40, 25, 3, POS_FIGHTING,
d1095 1
a1095 1
  spello(SPELL_DOOM, 0, 0, 0, POS_FIGHTING,
d1099 1
a1099 1
  spello(SPELL_CREEPING_DOOM, 0, 0, 0, POS_FIGHTING,
d1103 1
a1103 1
  spello(SPELL_ENCHANT_WEAPON, 150, 100, 10, POS_STANDING,
d1107 1
a1107 1
  spello(SPELL_ENERGY_DRAIN, 40, 25, 1, POS_FIGHTING,
d1111 2
a1112 2
  spello(SPELL_VAMPIRIC_BREATH, 40, 25, 1, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE | MAG_MANUAL, C1,
d1115 1
a1115 1
  spello(SPELL_GROUP_ARMOR, 50, 30, 2, POS_STANDING,
d1119 1
a1119 1
  spello(SPELL_GROUP_RECALL, 50, 30, 2, POS_FIGHTING,
d1123 2
a1124 2
  spello(SPELL_FIREBALL, 40, 30, 2, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1127 2
a1128 2
  spello(SPELL_FULL_HARM, 75, 45, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1131 1
a1131 1
  spello(SPELL_FULL_HEAL, 75, 50, 3, POS_FIGHTING,
d1135 1
a1135 1
  spello(SPELL_GROUP_HEAL, 80, 60, 5, POS_FIGHTING,
d1139 2
a1140 2
  spello(SPELL_HARM, 45, 15, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1143 1
a1143 1
  spello(SPELL_HEAL, 60, 40, 3, POS_FIGHTING,
d1147 1
a1147 1
  spello(SPELL_INFRAVISION, 25, 10, 1, POS_STANDING,
d1152 1
a1152 1
  spello(SPELL_INVISIBLE, 35, 25, 1, POS_STANDING,
d1158 1
a1158 1
  spello(SPELL_CONCEALMENT, 0, 0, 0, POS_STANDING,
d1163 2
a1164 2
  spello(SPELL_LIGHTNING_BOLT, 30, 15, 1, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1167 1
a1167 1
  spello(SPELL_LOCATE_OBJECT, 25, 20, 1, POS_STANDING,
d1171 1
a1171 1
  spello(SPELL_SUMMON_CORPSE, 25, 20, 1, POS_STANDING,
d1175 1
a1175 1
  spello(SPELL_SHIFT_CORPSE, 25, 20, 1, POS_STANDING,
d1179 2
a1180 2
  spello(SPELL_MAGIC_MISSILE, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_MANUAL, C1,
d1183 2
a1184 2
  spello(SPELL_POISON, 50, 20, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_NOT_SELF | TAR_OBJ_INV, TRUE,
d1189 1
a1189 1
  spello(SPELL_PROT_FROM_EVIL, 40, 10, 3, POS_STANDING,
d1194 1
a1194 1
  spello(SPELL_REMOVE_CURSE, 45, 25, 5, POS_STANDING,
d1198 1
a1198 1
  spello(SPELL_SANCTUARY, 110, 85, 5, POS_STANDING,
d1203 2
a1204 2
  spello(SPELL_SHOCKING_GRASP, 30, 15, 3, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1207 1
a1207 1
  spello(SPELL_SLEEP, 40, 25, 5, POS_STANDING,
d1212 1
a1212 1
  spello(SPELL_STRENGTH, 35, 30, 1, POS_STANDING,
d1217 1
a1217 1
  spello(SPELL_SUMMON, 75, 50, 3, POS_STANDING,
d1221 1
a1221 1
  spello(SPELL_RESURRECT, 75, 50, 3, POS_STANDING,
d1225 1
a1225 1
  spello(SPELL_PRESERVE, 0, 0, 0, POS_STANDING,
d1229 1
a1229 1
  spello(SPELL_DIMENSION_DOOR, 75, 45, 3, POS_STANDING,
d1233 1
a1233 1
  spello(SPELL_SUMMON_DRACOLICH, 100, 75, 3, POS_SITTING,
d1237 1
a1237 1
  spello(SPELL_ANIMATE_DEAD, 75, 15, 3, POS_SITTING,
d1241 1
a1241 1
  spello(SPELL_SUMMON_ELEMENTAL, 75, 15, 3, POS_SITTING,
d1245 1
a1245 1
  spello(SPELL_SUMMON_DEMON, 100, 75, 3, POS_SITTING,
d1249 1
a1249 1
  spello(SPELL_SUMMON_GREATER_DEMON, 130, 75, 3, POS_SITTING,
d1253 1
a1253 1
  spello(SPELL_WORD_OF_RECALL, 20, 10, 2, POS_FIGHTING,
d1257 1
a1257 1
  spello(SPELL_REMOVE_POISON, 40, 8, 4, POS_STANDING,
d1262 1
a1262 1
  spello(SPELL_INCENDIARY_NEBULA, 0, 0, 0, POS_FIGHTING,
d1266 1
a1266 1
  spello(SPELL_MOONWELL, 50, 50, 0, POS_STANDING,
d1270 1
a1270 1
  spello(SPELL_SENSE_LIFE, 20, 10, 2, POS_STANDING,
d1275 1
a1275 1
  spello(SPELL_SOULSHIELD, 0, 0, 0, POS_STANDING,
d1280 2
a1281 2
  spello(SPELL_DESTROY_UNDEAD, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1284 1
a1284 1
  spello(SPELL_STONE_SKIN, 50, 25, 3, POS_FIGHTING,
d1289 1
a1289 1
  spello(SPELL_HASTE, 50, 25, 3, POS_FIGHTING,
d1294 1
a1294 1
  spello(SPELL_BLUR, 90, 60, 3, POS_FIGHTING,
d1299 1
a1299 1
  spello(SPELL_LESSER_ENDURANCE, 50, 30, 5, POS_STANDING,
d1304 1
a1304 1
  spello(SPELL_ENDURANCE, 50, 30, 5, POS_STANDING,
d1309 1
a1309 1
  spello(SPELL_GREATER_ENDURANCE, 50, 30, 5, POS_STANDING,
d1314 1
a1314 1
  spello(SPELL_VITALITY, 50, 30, 5, POS_STANDING,
d1319 1
a1319 1
  spello(SPELL_GREATER_VITALITY, 50, 30, 5, POS_STANDING,
d1324 1
a1324 1
  spello(SPELL_DRAGONS_HEALTH, 50, 30, 5, POS_STANDING,
d1329 1
a1329 1
  spello(SPELL_WALL_OF_FOG, 50, 25, 5, POS_STANDING,
d1334 1
a1334 1
  spello(SPELL_FARSEE, 25, 10, 1, POS_STANDING,
d1339 2
a1340 2
  spello(SPELL_CAUSE_LIGHT, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1343 2
a1344 2
  spello(SPELL_CAUSE_SERIOUS, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1347 2
a1348 2
  spello(SPELL_CAUSE_CRITIC, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1351 2
a1352 2
  spello(SPELL_IDENTIFY, 0, 0, 0, POS_STANDING,
         TAR_CHAR_ROOM | TAR_OBJ_INV | TAR_OBJ_ROOM, FALSE, MAG_MANUAL, C1,
d1355 1
a1355 1
 spello(SPELL_BONE_ARMOR, 0, 0, 0, POS_STANDING,
d1360 1
a1360 1
  spello(SPELL_DEGENERATION, 0, 0, 0, POS_FIGHTING,
d1364 2
a1365 2
  spello(SPELL_SOUL_TAP, 0, 0, 0, POS_FIGHTING,
         TAR_CHAR_ROOM | TAR_FIGHT_VICT, TRUE, MAG_DAMAGE, C1,
d1369 1
a1369 1
  spello(SPELL_REBUKE_UNDEAD, 0, 0, 0, POS_FIGHTING,
d1373 1
a1373 1
  spello(SPELL_NATURES_GUIDANCE, 0, 0, 0, POS_FIGHTING,
d1378 1
a1378 1
  spello(SPELL_MOONBEAM, 0, 0, 0, POS_FIGHTING,
d1386 90
a1475 88
  /* skillo(skill, humanoid) */
  skillo(SKILL_BACKSTAB, TRUE);
  skillo(SKILL_INSTANT_KILL, TRUE);
  skillo(SKILL_BIND, TRUE);
  skillo(SKILL_CIRCLE, FALSE);
  skillo(SKILL_BASH, FALSE);
  skillo(SKILL_HIDE, FALSE);
  skillo(SKILL_KICK, TRUE);
  skillo(SKILL_PICK_LOCK, TRUE);
  skillo(SKILL_PUNCH, TRUE);
  skillo(SKILL_RESCUE, FALSE);
  skillo(SKILL_SNEAK, FALSE);
  skillo(SKILL_STEAL, TRUE);
  skillo(SKILL_TRACK, FALSE);
  skillo(SKILL_HUNT, FALSE);
  skillo(SKILL_DUAL_WIELD, TRUE);
  skillo(SKILL_DOUBLE_ATTACK, FALSE);
  skillo(SKILL_BERSERK, FALSE);
  skillo(SKILL_SPRINGLEAP, FALSE);
  skillo(SKILL_MOUNT, FALSE);
  skillo(SKILL_RIDING, FALSE);
  skillo(SKILL_TAME, FALSE);
  skillo(SKILL_THROATCUT, TRUE);
  skillo(SKILL_DOORBASH, FALSE);
  skillo(SKILL_PARRY, TRUE);
  skillo(SKILL_DODGE, FALSE);
  skillo(SKILL_RIPOST, TRUE);
  skillo(SKILL_MEDITATE, FALSE);
  skillo(SKILL_QUICK_CHANT, FALSE);
  skillo(SKILL_CHANT, FALSE);
  skillo(SKILL_SAFEFALL, FALSE);
  skillo(SKILL_BAREHAND, FALSE);
  skillo(LANG_BARBARIAN, FALSE);
  skillo(LANG_GNOMISH, FALSE);
  skillo(LANG_DUERGAR, FALSE);
  skillo(LANG_DROW, FALSE);
  skillo(LANG_ORCISH, FALSE);
  skillo(LANG_OGRE, FALSE);
  skillo(LANG_COMMON, FALSE);
  skillo(LANG_ELVEN, FALSE);
  skillo(LANG_DWARVEN, FALSE);
  skillo(LANG_TROLLISH, FALSE);
  skillo(LANG_HALFLING, FALSE);
  skillo(SKILL_SHAPECHANGE, FALSE);
  skillo(SKILL_SWITCH, FALSE);
  skillo(SKILL_GUARD, FALSE);
  skillo(SKILL_BREATHE, FALSE);
  skillo(SKILL_SWEEP, FALSE);
  skillo(SKILL_ROAR, FALSE);
  skillo(SKILL_DOUSE, FALSE);
  skillo(SKILL_SCRIBE, TRUE);
  skillo(SKILL_HITALL, FALSE);
  skillo(SKILL_BANDAGE, TRUE);
  skillo(SKILL_CHANT, FALSE);
  skillo(SKILL_SUMMON_MOUNT, TRUE);
  skillo(SKILL_KNOW_SPELL, FALSE);
  skillo(SKILL_SPHERE_GENERIC, FALSE);
  skillo(SKILL_SPHERE_FIRE, FALSE);
  skillo(SKILL_SPHERE_WATER, FALSE);
  skillo(SKILL_SPHERE_EARTH, FALSE);
  skillo(SKILL_SPHERE_AIR, FALSE);
  skillo(SKILL_SPHERE_HEALING, FALSE);
  skillo(SKILL_SPHERE_PROT, FALSE);
  skillo(SKILL_SPHERE_ENCHANT, FALSE);
  skillo(SKILL_SPHERE_SUMMON, FALSE);
  skillo(SKILL_SPHERE_DEATH, FALSE);
  skillo(SKILL_SPHERE_DIVIN, FALSE);
  skillo(SKILL_BLUDGEONING, TRUE);
  skillo(SKILL_PIERCING, TRUE);
  skillo(SKILL_SLASHING, TRUE);
  skillo(SKILL_2H_BLUDGEONING, TRUE);
  skillo(SKILL_2H_PIERCING, TRUE);
  skillo(SKILL_2H_SLASHING, TRUE);
  skillo(SKILL_MISSILE, TRUE);
  skillo(SKILL_EYE_GOUGE, TRUE);
  skillo(SKILL_RETREAT, FALSE);
  skillo(SKILL_GROUP_RETREAT, FALSE);
  skillo(SKILL_CORNER, FALSE);
  skillo(SKILL_STEALTH, FALSE);
  skillo(SKILL_SHADOW, FALSE);
  skillo(SKILL_CONCEAL, FALSE);
  skillo(SKILL_PECK, FALSE);
  skillo(SKILL_CLAW, FALSE);
  skillo(SKILL_ELECTRIFY, FALSE);
  skillo(SKILL_TANTRUM, FALSE);
  skillo(SKILL_GROUND_SHAKER, FALSE);
  skillo(SKILL_BATTLE_HOWL, FALSE);
  skillo(SKILL_MAUL, FALSE);
d1478 24
a1501 13
  chanto(CHANT_REGENERATION, POS_RESTING, TAR_CHAR_ROOM | TAR_SELF_ONLY,
         FALSE, MAG_AFFECTS, 0, FALSE, "Your healthy feeling subsides.");
  chanto(CHANT_BATTLE_HYMN, POS_STANDING, TAR_CHAR_ROOM | TAR_SELF_ONLY,
         FALSE, MAG_AFFECTS, 0, FALSE, "Your rage fades away.");
  chanto(CHANT_WAR_CRY, POS_STANDING, TAR_IGNORE,
         FALSE, MAG_GROUPS, 0, FALSE, "Your determination level returns to normal.");
  chanto(CHANT_PEACE, POS_FIGHTING, TAR_IGNORE,
         FALSE, MAG_MANUAL, 0, FALSE, NULL);
  chanto(CHANT_SHADOWS_SORROW_SONG, POS_FIGHTING, TAR_IGNORE,
         TRUE, MAG_MASSES, 0, FALSE, "The shadows in your mind clear up.");
  chanto(CHANT_IVORY_SYMPHONY, POS_FIGHTING, TAR_IGNORE,
         TRUE, MAG_MANUAL, 0, FALSE, "Feeling returns to your limbs.");
  chanto(CHANT_ARIA_OF_DISSONANCE, POS_FIGHTING,
d1504 3
a1506 2
  chanto(CHANT_SONATA_OF_MALAISE, POS_FIGHTING, TAR_IGNORE,
         TRUE, MAG_MASSES, 0, FALSE,
d1508 10
a1517 6
  chanto(CHANT_APOCALYPTIC_ANTHEM, POS_FIGHTING, TAR_IGNORE,
         TRUE, MAG_MANUAL, 0, TRUE, NULL);
  chanto(CHANT_SEED_OF_DESTRUCTION, POS_FIGHTING, TAR_CHAR_ROOM | TAR_FIGHT_VICT,
         TRUE, MAG_AFFECTS, 0, TRUE, "The disease leaves you.");
  chanto(CHANT_SPIRIT_WOLF, POS_FIGHTING, TAR_CHAR_ROOM | TAR_SELF_ONLY,
         FALSE, MAG_AFFECTS, 0, FALSE,
d1519 3
a1521 2
  chanto(CHANT_SPIRIT_BEAR, POS_FIGHTING, TAR_CHAR_ROOM | TAR_SELF_ONLY,
         FALSE, MAG_AFFECTS, 0, FALSE,
d1523 3
a1525 1
  chanto(CHANT_INTERMINABLE_WRATH, POS_FIGHTING, TAR_CHAR_ROOM | TAR_SELF_ONLY,
d1529 3
a1531 2
/*  songo(SONG_CHORUS_OF_COURAGE, POS_STANDING, TAR_CHAR_ROOM,
        FALSE, MAG_AFFECTS, 0, FALSE, "Your courage leaves you.");
d1546 1
a1546 1
         if (strcmp(skillnames[skill_sort_info[a]], skillnames[skill_sort_info[b]]) > 0) {
d1557 3
@


1.4
log
@Remove the equipment-destroying manual spell for acid breath.
@
text
@d378 4
a381 1
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 485 */
d417 4
a420 1
  "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!", "!UNUSED!",        /* 615 */
d1884 4
d1889 1
a1889 1
  /* Set up monk chants */
d1912 8
d1949 3
@


1.3
log
@Moved a lot of skill-related code into skills.h and skills.c.
@
text
@d1215 1
a1215 1
         TAR_CHAR_ROOM, TRUE, MAG_DAMAGE | MAG_MANUAL, C1,
d1931 3
@


1.2
log
@Move improve_skills here. Add improve_skills_offensively() so your skills
won't improve when used against illusions.
@
text
@d20 1
d23 507
a529 1
#include "spells.h"  /* This stuff needs to be moved to skills.h */
a532 1
   extern char *spells[];
d568 2
a569 1
      sprintf(skillbuf, "&8You feel about as skilled in %s as possible!&0\r\n", spells[skill]);
d572 2
a573 1
      sprintf (skillbuf, "&8You feel your skill in %s improving.\r\n&0", spells[skill]);
d598 1331
d1931 4
@


1.1
log
@Initial revision
@
text
@d20 1
d22 67
d92 3
@
