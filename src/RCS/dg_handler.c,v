head	1.9;
access;
symbols;
locks; strict;
comment	@ * @;


1.9
date	2008.02.16.20.26.04;	author myc;	state Exp;
branches;
next	1.8;

1.8
date	2008.01.29.21.02.31;	author myc;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.13.02.32.10;	author jjl;	state Exp;
branches;
next	1.6;

1.6
date	2000.11.28.01.17.12;	author mtp;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.21.01.45.34;	author rsd;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.13.07.34.13;	author mtp;	state Exp;
branches;
next	1.3;

1.3
date	99.09.05.07.00.39;	author jimmy;	state Exp;
branches;
next	1.2;

1.2
date	99.01.31.00.20.14;	author mud;	state Exp;
branches;
next	1.1;

1.1
date	99.01.29.01.23.30;	author mud;	state Exp;
branches;
next	;


desc
@#include "conf.h"
#include "sysdep.h"


#include "structs.h"
#include "dg_scripts.h"
#include "utils.h"
#include "comm.h"
#include "db.h"
#include "handler.h"
#include "dg_event.h"

extern struct index_data **trig_index;
extern struct trig_data *trigger_list;

void trig_data_free(trig_data *this);

/* return memory used by a trigger */
void free_trigger(struct trig_data *trig)
{
  /* threw this in for minor consistance in names with the rest of circle */
  trig_data_free(trig);
}


/* remove a single trigger from a mob/obj/room */
void extract_trigger(struct trig_data *trig)
{
  struct trig_data *temp;

  if (GET_TRIG_WAIT(trig)) {
    remove_event(GET_TRIG_WAIT(trig));
    GET_TRIG_WAIT(trig) = NULL;
  }

  trig_index[trig->nr]->number--;

  /* walk the trigger list and remove this one */
  REMOVE_FROM_LIST(trig, trigger_list, next_in_world);

  free_trigger(trig);
}

/* remove all triggers from a mob/obj/room */
void extract_script(struct script_data *sc)
{
  struct trig_data *trig, *next_trig;

  for (trig = TRIGGERS(sc); trig; trig = next_trig) {
    next_trig = trig->next;
    extract_trigger(trig);
  }
  TRIGGERS(sc) = NULL;
}
@


1.9
log
@Cleaning up function to free triggers.  Adding function to free
prototype scripts at program termination.
@
text
@/***************************************************************************
 * $Id: dg_handler.c,v 1.8 2008/01/29 21:02:31 myc Exp myc $
 ***************************************************************************/
/***************************************************************************
 *   File: dg_handler.c                                   Part of FieryMUD *
 *  Usage: who knows?                                                      *
 *     By: Unknown                                                         *
 *                                                                         *
 *  All rights reserved.  See license.doc for complete information.        *
 *                                                                         *
 *  FieryMUD Copyright (C) 2000 by the Fiery Consortium                    *
 ***************************************************************************/

/* There is no claim of ownership or copyright in this file prior to being
 * owned by FieryMUD.
 */

#include "conf.h"
#include "sysdep.h"
#include "structs.h"
#include "dg_scripts.h"
#include "utils.h"
#include "comm.h"
#include "db.h"
#include "handler.h"
#include "events.h"

/* remove a single trigger from a mob/obj/room */
void extract_trigger(struct trig_data *trig)
{
  struct trig_data *temp;
  
  if (GET_TRIG_WAIT(trig)) {
    event_cancel(GET_TRIG_WAIT(trig));
    GET_TRIG_WAIT(trig) = NULL;
  }
  
  trig_index[trig->nr]->number--; 
  
  /* walk the trigger list and remove this one */
  REMOVE_FROM_LIST(trig, trigger_list, next_in_world);
  
  if (trig->running == TRUE)
    trig->purged = TRUE;
  else
    free_trigger(trig);
}

/* remove all triggers from a mob/obj/room */
void extract_script(struct script_data *sc)
{
  struct trig_data *trig, *next_trig;
  
  for (trig = TRIGGERS(sc); trig; trig = next_trig) {
    next_trig = trig->next;
    extract_trigger(trig);
  }
  TRIGGERS(sc) = NULL;

  free_varlist(sc->global_vars);
  free(sc);
}

/***************************************************************************
 * $Log: dg_handler.c,v $
 * Revision 1.8  2008/01/29 21:02:31  myc
 * Removing a lot of extern declarations from code files and moving
 * them to header files, mostly db.h and constants.h.
 *
 * Revision 1.7  2002/09/13 02:32:10  jjl
 * Updated header comments
 *
 * Revision 1.6  2000/11/28 01:17:12  mtp
 * replaced dg_event.c code with events.c code
 *
 * Revision 1.5  2000/11/21 01:45:34  rsd
 * Altered comment header to note claim of copyright and
 * added the back rlog messages from prior to the addition
 * of the $log$ string
 *
 * Revision 1.4  2000/02/13 07:34:13  mtp
 * fixed opurge/mpurge [rpblems by not freeing the running trigger
 * until it completes (if running flag set then extract_trigger sets purged
 * flag instead of freeing)
 *
 * Revision 1.3  1999/09/05 07:00:39  jimmy
 * Added RCS Log and Id strings to each source file
 *
 * Revision 1.2  1999/01/31 00:20:14  mud
 * Added comment header
 *
 * Revision 1.1  1999/01/29 01:23:30  mud
 * Initial revision
 *
 ***************************************************************************/
@


1.8
log
@Removing a lot of extern declarations from code files and moving
them to header files, mostly db.h and constants.h.
@
text
@d2 1
a2 1
 * $Id: dg_handler.c,v 1.7 2002/09/13 02:32:10 jjl Exp myc $
a27 10
void trig_data_free(trig_data *this);

/* return memory used by a trigger */
void free_trigger(struct trig_data *trig)
{
  /* threw this in for minor consistance in names with the rest of circle */
  trig_data_free(trig);
}


d59 3
d66 4
@


1.7
log
@Updated header comments
@
text
@d2 1
a2 1
 * $Id: dg_handler.c,v 1.6 2000/11/28 01:17:12 mtp Exp $
a27 3
extern struct index_data **trig_index;
extern struct trig_data *trigger_list;

d73 3
@


1.6
log
@replaced dg_event.c code with events.c code
@
text
@d1 3
a3 1
// $Id: dg_handler.c,v 1.5 2000/11/21 01:45:34 rsd Exp $
d74 25
a98 20
// $Log: dg_handler.c,v $
// Revision 1.5  2000/11/21 01:45:34  rsd
// Altered comment header to note claim of copyright and
// added the back rlog messages from prior to the addition
// of the $log$ string
//
// Revision 1.4  2000/02/13 07:34:13  mtp
// fixed opurge/mpurge [rpblems by not freeing the running trigger
// until it completes (if running flag set then extract_trigger sets purged
// flag instead of freeing)
//
// Revision 1.3  1999/09/05 07:00:39  jimmy
// Added RCS Log and Id strings to each source file
//
// Revision 1.2  1999/01/31 00:20:14  mud
// Added comment header
//
// Revision 1.1  1999/01/29 01:23:30  mud
// Initial revision
//
@


1.5
log
@Altered comment header to note claim of copyright and
added the back rlog messages from prior to the addition
of the $log$ string
@
text
@d1 1
a1 1
// $Id: dg_handler.c,v 1.4 2000/02/13 07:34:13 mtp Exp $
d24 1
a24 1
#include "dg_event.h"
d45 1
a45 1
    remove_event(GET_TRIG_WAIT(trig));
d73 5
@


1.4
log
@fixed opurge/mpurge [rpblems by not freeing the running trigger
until it completes (if running flag set then extract_trigger sets purged
flag instead of freeing)
@
text
@d1 1
a1 1
// $Id: dg_handler.c,v 1.3 1999/09/05 07:00:39 jimmy Exp mtp $
d3 1
a3 1
 *  File: dg_handler.c                                    Part of FieryMUD *
d5 1
d7 3
a9 1
 *  By: Someone potentially of HubisMUD                                    *
d12 4
a71 1

d73 5
d80 6
@


1.3
log
@Added RCS Log and Id strings to each source file
@
text
@d1 1
a1 1
// $Id$
d47 4
a50 1
  free_trigger(trig);
d66 4
a69 1
// $Log$
@


1.2
log
@Added comment header
@
text
@d1 1
d63 1
@


1.1
log
@Initial revision
@
text
@d1 7
a9 2
    

d35 1
a35 1

d40 1
a40 1

d42 1
a42 1

d45 1
a45 1

d53 1
a53 1

d60 1
@
