head	1.10;
access;
symbols;
locks; strict;
comment	@ * @;


1.10
date	2008.09.01.22.15.59;	author jps;	state Exp;
branches;
next	1.9;

1.9
date	2008.07.27.05.26.32;	author jps;	state Exp;
branches;
next	1.8;

1.8
date	2008.07.26.21.33.27;	author jps;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.13.19.04.52;	author jps;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.05.02.07.43;	author myc;	state Exp;
branches;
next	1.5;

1.5
date	2008.05.26.18.24.48;	author jps;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.13.03.40.47;	author jps;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.30.17.32.25;	author jps;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.30.17.29.55;	author jps;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.30.17.11.17;	author jps;	state Exp;
branches;
next	;


desc
@Header file for player file handling.
@


1.10
log
@Saving and reporting players' game-leaving reasons and locations.
@
text
@/***************************************************************************
 * $Id: pfiles.h,v 1.9 2008/07/27 05:26:32 jps Exp jps $
 ***************************************************************************/
/***************************************************************************
 *  File: pfiles.h                                        Part of FieryMUD *
 *  Usage: header file: Player save files                                  *
 *                                                                         *
 *  All rights reserved.  See license.doc for complete information.        *
 *                                                                         *
 *  FieryMUD Copyright (C) 1998, 1999, 2000 by the Fiery Consortium        *
 *  FieryMUD is based on CircleMUD Copyright (C) 1993, 94 by the Trustees  *
 *  of the Johns Hopkins University                                        *
 *  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
 ***************************************************************************/

#ifndef __FIERY_PFILES_H
#define __FIERY_PFILES_H

#define PLAYER_FILENAME_LENGTH 40

/*
 * The code used for items located in a player's inventory when saving.
 * It should not collide with any of the WEAR_x constants in structs.h
 */
#define WEAR_INVENTORY 127

#define MAX_CONTAINER_DEPTH  50

/* Receptionist modes */
#define SAVE_UNKNOWN  0
#define SAVE_AUTO     1
#define SAVE_CRYO     2
#define SAVE_RENT     3

extern void save_quests(struct char_data *ch);
extern void load_quests(struct char_data *ch);

extern void save_player_objects(struct char_data *ch);
extern bool load_objects(struct char_data *ch);
extern bool build_object(FILE *fl, struct obj_data **obj, int *location);
extern void extract_objects(struct char_data *ch);
extern bool write_objects(struct obj_data *obj, FILE *fl, int location);
extern void auto_save_all(void);
extern void show_rent(struct char_data *ch, char *argument);
extern bool delete_player_obj_file(struct char_data *ch);
extern FILE *open_player_obj_file(char *player_name, struct char_data *ch, bool quiet);
extern void convert_player_obj_files(struct char_data *ch);
extern void convert_single_player_obj_file(struct char_data *ch, char *name);
extern void save_player(struct char_data *ch);

#endif

/***************************************************************************
 * $Log: pfiles.h,v $
 * Revision 1.9  2008/07/27 05:26:32  jps
 * Added several save mode constants.
 *
 * Revision 1.8  2008/07/26 21:33:27  jps
 * Added a function for opening the player object save file.
 * Added functions for converting old binary object files to ASCII format.
 *
 * Revision 1.7  2008/07/13 19:04:52  jps
 * Added a hotboot rent code, which allows people to save their keys
 * over a hotboot.
 *
 * Revision 1.6  2008/06/05 02:07:43  myc
 * Completely rewrote the rent file saving and loading to use
 * an ascii text format.  Some of the old legacy binary code
 * remains so that we don't have to actively convert old
 * object files to the new format.  When old rent files are
 * encountered, they are lazily loaded into the game, and
 * replaced by the new format when the player is saved.
 *
 * Revision 1.5  2008/05/26 18:24:48  jps
 * Removed code that deletes player object files.
 *
 * Revision 1.4  2008/04/13 03:40:47  jps
 * Adding definition for the length of a player filename, such as the
 * main save file, the quest file, or the objects file.
 *
 * Revision 1.3  2008/03/30 17:32:25  jps
 * Added prototype for update_obj_file(), which is called from db.c.
 *
 * Revision 1.2  2008/03/30 17:29:55  jps
 * Adding prototypes for loadpfile_quest and loadpfile_objs.
 *
 * Revision 1.1  2008/03/30 17:11:17  jps
 * Initial revision
 *
 ***************************************************************************/
@


1.9
log
@Added several save mode constants.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.8 2008/07/26 21:33:27 jps Exp jps $
d29 5
a33 14
/* Save/quit  modes!         Objects-kept   Keys-kept    Loadroom */
#define SAVE_UNDEF       0
#define SAVE_AUTO        1  /*  yes           yes          home   */
#define SAVE_RENT        2  /*  yes           no           here   */
#define SAVE_CRYO        3  /*  yes           no           here   */
#define SAVE_FORCE       4  /*  yes           yes          home   */
#define SAVE_TIMEOUT     5  /*  yes           no           home   */
#define SAVE_HOTBOOT     6  /*  yes           yes          home   */
#define SAVE_QUITMORT    7  /*  no            no           temple */
#define SAVE_QUITIMM     8  /*  yes           no           here   */
#define SAVE_CAMP        9  /*  yes           no           here   */
#define SAVE_MTRIGGER    10 /*  yes           yes          home   */
#define SAVE_WRENT       11 /*  yes           yes          here   */
#define SAVE_EMERGENCY   12 /*  yes           yes          home   */
d38 1
a38 1
extern void save_objects(struct char_data *ch, int rentcode);
d49 1
a49 1
extern void save_player(struct char_data *ch, int quit_mode);
d55 3
@


1.8
log
@Added a function for opening the player object save file.
Added functions for converting old binary object files to ASCII format.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.7 2008/07/13 19:04:52 jps Exp jps $
d29 1
d31 12
a42 6
#define SAVE_CRASH       1
#define SAVE_RENT        2
#define SAVE_CRYO        3
#define SAVE_FORCED      4
#define SAVE_TIMEOUT     5
#define SAVE_HOTBOOT     6
d52 1
a52 1
extern void crash_save_all(void);
d54 1
a54 1
extern bool delete_crash_file(struct char_data *ch);
d58 1
d64 4
@


1.7
log
@Added a hotboot rent code, which allows people to save their keys
over a hotboot.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.6 2008/06/05 02:07:43 myc Exp jps $
d48 3
d56 4
@


1.6
log
@Completely rewrote the rent file saving and loading to use
an ascii text format.  Some of the old legacy binary code
remains so that we don't have to actively convert old
object files to the new format.  When old rent files are
encountered, they are lazily loaded into the game, and
replaced by the new format when the player is saved.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.5 2008/05/26 18:24:48 jps Exp myc $
d35 1
d53 8
@


1.5
log
@Removed code that deletes player object files.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.4 2008/04/13 03:40:47 jps Exp jps $
d21 26
a46 10
void loadpfile_quest(struct char_data *ch);
int loadpfile_objs(struct char_data *ch);
struct obj_data *Obj_from_store(struct obj_file_elem object);
int Obj_to_store(struct obj_data * obj, FILE * fl);
int Crash_delete_file(char *name);
void Crash_extract_objs(struct obj_data * obj);
void Crash_crashsave(struct char_data * ch);
void Crash_idlesave(struct char_data * ch);
void Crash_rentsave(struct char_data * ch, int cost);
void Crash_save_all(void);
d52 3
@


1.4
log
@Adding definition for the length of a player filename, such as the
main save file, the quest file, or the objects file.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.3 2008/03/30 17:32:25 jps Exp jps $
a30 1
void update_obj_file(void);
d36 4
@


1.3
log
@Added prototype for update_obj_file(), which is called from db.c.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.2 2008/03/30 17:29:55 jps Exp jps $
d19 2
d37 3
@


1.2
log
@Adding prototypes for loadpfile_quest and loadpfile_objs.
@
text
@d2 1
a2 1
 * $Id: pfiles.h,v 1.1 2008/03/30 17:11:17 jps Exp jps $
d29 1
d35 3
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * $Id: handler.h,v 1.17 2008/03/28 17:54:53 myc Exp $
d19 2
a20 1

a29 1

d33 4
a36 1
 * $Log$
@
