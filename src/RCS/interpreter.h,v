head	1.60;
access;
symbols;
locks; strict;
comment	@ * @;


1.60
date	2009.07.16.22.27.56;	author myc;	state Exp;
branches;
next	1.59;

1.59
date	2009.06.09.05.42.04;	author myc;	state Exp;
branches;
next	1.58;

1.58
date	2009.03.20.23.02.59;	author myc;	state Exp;
branches;
next	1.57;

1.57
date	2009.03.09.20.36.00;	author myc;	state Exp;
branches;
next	1.56;

1.56
date	2009.03.09.02.22.32;	author myc;	state Exp;
branches;
next	1.55;

1.55
date	2009.03.07.11.12.05;	author jps;	state Exp;
branches;
next	1.54;

1.54
date	2009.02.11.17.03.39;	author myc;	state Exp;
branches;
next	1.53;

1.53
date	2009.01.18.06.58.53;	author myc;	state Exp;
branches;
next	1.52;

1.52
date	2008.09.28.19.06.32;	author jps;	state Exp;
branches;
next	1.51;

1.51
date	2008.08.23.21.36.22;	author myc;	state Exp;
branches;
next	1.50;

1.50
date	2008.08.17.20.16.00;	author jps;	state Exp;
branches;
next	1.49;

1.49
date	2008.08.14.23.10.35;	author myc;	state Exp;
branches;
next	1.48;

1.48
date	2008.07.15.18.53.39;	author myc;	state Exp;
branches;
next	1.47;

1.47
date	2008.07.15.17.59.03;	author myc;	state Exp;
branches;
next	1.46;

1.46
date	2008.05.19.06.53.04;	author jps;	state Exp;
branches;
next	1.45;

1.45
date	2008.05.09.22.04.33;	author jps;	state Exp;
branches;
next	1.44;

1.44
date	2008.04.13.00.57.21;	author jps;	state Exp;
branches;
next	1.43;

1.43
date	2008.04.07.04.31.42;	author jps;	state Exp;
branches;
next	1.42;

1.42
date	2008.04.07.03.02.54;	author jps;	state Exp;
branches;
next	1.41;

1.41
date	2008.04.06.19.45.21;	author jps;	state Exp;
branches;
next	1.40;

1.40
date	2008.04.04.06.12.52;	author myc;	state Exp;
branches;
next	1.39;

1.39
date	2008.04.03.17.33.34;	author jps;	state Exp;
branches;
next	1.38;

1.38
date	2008.04.02.03.24.44;	author myc;	state Exp;
branches;
next	1.37;

1.37
date	2008.03.10.18.01.17;	author myc;	state Exp;
branches;
next	1.36;

1.36
date	2008.03.09.18.15.17;	author jps;	state Exp;
branches;
next	1.35;

1.35
date	2008.03.05.03.03.54;	author myc;	state Exp;
branches;
next	1.34;

1.34
date	2008.02.24.17.31.13;	author myc;	state Exp;
branches;
next	1.33;

1.33
date	2008.02.16.20.31.32;	author myc;	state Exp;
branches;
next	1.32;

1.32
date	2008.02.02.19.38.20;	author myc;	state Exp;
branches;
next	1.31;

1.31
date	2008.01.29.21.02.31;	author myc;	state Exp;
branches;
next	1.30;

1.30
date	2008.01.17.01.29.10;	author myc;	state Exp;
branches;
next	1.29;

1.29
date	2007.12.19.20.52.57;	author myc;	state Exp;
branches;
next	1.28;

1.28
date	2007.10.23.20.21.00;	author myc;	state Exp;
branches;
next	1.27;

1.27
date	2007.10.17.17.18.04;	author myc;	state Exp;
branches;
next	1.26;

1.26
date	2007.10.11.20.14.48;	author myc;	state Exp;
branches;
next	1.25;

1.25
date	2007.10.02.02.52.27;	author myc;	state Exp;
branches;
next	1.24;

1.24
date	2007.09.28.20.49.35;	author myc;	state Exp;
branches;
next	1.23;

1.23
date	2007.09.20.21.20.43;	author myc;	state Exp;
branches;
next	1.22;

1.22
date	2007.09.11.16.34.24;	author myc;	state Exp;
branches;
next	1.21;

1.21
date	2007.08.26.08.49.36;	author jps;	state Exp;
branches;
next	1.20;

1.20
date	2007.08.24.22.10.21;	author jps;	state Exp;
branches;
next	1.19;

1.19
date	2007.08.24.17.01.36;	author myc;	state Exp;
branches;
next	1.18;

1.18
date	2007.08.14.22.43.07;	author myc;	state Exp;
branches;
next	1.17;

1.17
date	2007.07.19.15.32.01;	author jps;	state Exp;
branches;
next	1.16;

1.16
date	2005.07.26.05.38.13;	author jwk;	state Exp;
branches;
next	1.15;

1.15
date	2003.07.29.03.49.05;	author jjl;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.23.01.47.09;	author jjl;	state Exp;
branches;
next	1.13;

1.13
date	2002.09.13.02.32.10;	author jjl;	state Exp;
branches;
next	1.12;

1.12
date	2000.11.22.19.29.30;	author rsd;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.22.00.50.23;	author rsd;	state Exp;
branches;
next	1.10;

1.10
date	99.09.05.07.00.39;	author jimmy;	state Exp;
branches;
next	1.9;

1.9
date	99.07.23.01.54.15;	author mud;	state Exp;
branches;
next	1.8;

1.8
date	99.06.10.16.56.28;	author mud;	state Exp;
branches;
next	1.7;

1.7
date	99.05.04.17.19.33;	author dce;	state Exp;
branches;
next	1.6;

1.6
date	99.03.26.19.44.35;	author jen;	state Exp;
branches;
next	1.5;

1.5
date	99.02.10.05.57.14;	author jimmy;	state Exp;
branches;
next	1.4;

1.4
date	99.02.06.00.40.36;	author jimmy;	state Exp;
branches;
next	1.3;

1.3
date	99.02.01.08.16.30;	author jimmy;	state Exp;
branches;
next	1.2;

1.2
date	99.02.01.04.10.48;	author jimmy;	state Exp;
branches;
next	1.1;

1.1
date	99.01.29.01.23.31;	author mud;	state Exp;
branches;
next	;


desc
@/* ************************************************************************
*   File: interpreter.h                                 Part of CircleMUD *
*  Usage: header file: public procs, macro defs, subcommand defines       *
*                                                                         *
*  All rights reserved.  See license.doc for complete information.        *
*                                                                         *
*  Copyright (C) 1993, 94 by the Trustees of the Johns Hopkins University *
*  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
************************************************************************ */

#define ACMD(name)  \
   void (name)(struct char_data *ch, char *argument, int cmd, int subcmd)

#define CMD_NAME (cmd_info[cmd].command)
#define CMD_IS(cmd_name) (!strcmp(cmd_name, cmd_info[cmd].command))
#define IS_MOVE(cmdnum) (cmdnum >= 1 && cmdnum <= 6)

/* necessary for CMD_IS macro */
#ifndef __INTERPRETER_C__
extern struct command_info cmd_info[];
#endif


void	command_interpreter(struct char_data *ch, char *argument);
int	search_block(char *arg, char **list, bool exact);
char	lower( char c );
char	*one_argument(char *argument, char *first_arg);
char	*one_word(char *argument, char *first_arg);
char	*any_one_arg(char *argument, char *first_arg);
char	*two_arguments(char *argument, char *first_arg, char *second_arg);
int	fill_word(char *argument);
void	half_chop(char *string, char *arg1, char *arg2);
void	nanny(struct descriptor_data *d, char *arg);
int	is_abbrev(char *arg1, char *arg2);
int	is_number(char *str);
int	find_command(char *command);
void	skip_spaces(char **string);
char	*delete_doubledollar(char *string);

/* for compatibility with 2.20: */
#define argument_interpreter(a, b, c) two_arguments(a, b, c)


struct command_info {
   char *command;
   byte minimum_position;
   void	(*command_pointer)
   (struct char_data *ch, char * argument, int cmd, int subcmd);
   sh_int minimum_level;
   int	subcmd;
   int meditate;
   int major_p;
   int minor_p;
   int hide;
   int bound;
   int cast;
};

struct alias {
  char *alias;
  char *replacement;
  int type;
  struct alias *next;
};

#define ALIAS_SIMPLE	0
#define ALIAS_COMPLEX	1

#define ALIAS_SEP_CHAR	';'
#define ALIAS_VAR_CHAR	'$'
#define ALIAS_GLOB_CHAR	'*'

/*
 * SUBCOMMANDS
 *   You can define these however you want to, and the definitions of the
 *   subcommands are independent from function to function.
 */

/* directions */
#define SCMD_NORTH	1
#define SCMD_EAST	2
#define SCMD_SOUTH	3
#define SCMD_WEST	4
#define SCMD_UP		5
#define SCMD_DOWN	6
#define SCMD_FUP    7
#define SCMD_FDOWN  8

/* do_gen_ps */
#define SCMD_INFO       0
#define SCMD_HANDBOOK   1
#define SCMD_CREDITS    2
#define SCMD_NEWS       3
#define SCMD_WIZLIST    4
#define SCMD_POLICIES   5
#define SCMD_VERSION    6
#define SCMD_IMMLIST    7
#define SCMD_MOTD	8
#define SCMD_IMOTD	9
#define SCMD_CLEAR	10
#define SCMD_WHOAMI	11
#define SCMD_ANEWS  12
/* do_gen_tog */
#define SCMD_NOSUMMON   0
#define SCMD_NOHASSLE   1
#define SCMD_BRIEF      2
#define SCMD_COMPACT    3
#define SCMD_NOTELL	4
#define SCMD_NOAUCTION	5
#define SCMD_DEAF	6
#define SCMD_NOGOSSIP	7
#define SCMD_NOGRATZ	8
#define SCMD_NOWIZ	9
#define SCMD_QUEST	10
#define SCMD_ROOMFLAGS	11
#define SCMD_NOREPEAT	12
#define SCMD_HOLYLIGHT	13
#define SCMD_SLOWNS	    14
#define SCMD_AUTOEXIT	15
#define SCMD_NOPETI     16
#define SCMD_NONAME     17
#define SCMD_ANON		18
#define SCMD_SHOWVNUMS	19
#define SCMD_WIMPY		20
#define SCMD_NICEAREA	21
#define SCMD_VICIOUS    22
#define SCMD_PASSIVE	23
#define SCMD_PAGELENGTH 24
/* do_wizutil */
#define SCMD_REROLL	0
#define SCMD_PARDON     1
#define SCMD_NOTITLE    2
#define SCMD_SQUELCH    3
#define SCMD_FREEZE	4
#define SCMD_THAW	5
#define SCMD_UNAFFECT	6

/* do_spec_com */
#define SCMD_WHISPER	0
#define SCMD_ASK	1

/* do_gen_com */
#define SCMD_HOLLER	0
#define SCMD_SHOUT	1
#define SCMD_GOSSIP	2
#define SCMD_AUCTION	3
#define SCMD_GRATZ	4

/* do_shutdown */
#define SCMD_SHUTDOW	0
#define SCMD_SHUTDOWN   1

/* do_quit */
#define SCMD_QUI	0
#define SCMD_QUIT	1

/* do_date */
#define SCMD_DATE	0
#define SCMD_UPTIME	1

/* do_commands */
#define SCMD_COMMANDS	0
#define SCMD_SOCIALS	1
#define SCMD_WIZHELP	2

/* do_drop */
#define SCMD_DROP	0
#define SCMD_JUNK	1
#define SCMD_DONATE	2

/* do_gen_write */
#define SCMD_BUG	0
#define SCMD_TYPO	1
#define SCMD_IDEA	2

/* do_look */
#define SCMD_LOOK	0
#define SCMD_READ	1

/* do_qcomm */
#define SCMD_QSAY	0
#define SCMD_QECHO	1

/* do_pour */
#define SCMD_POUR	0
#define SCMD_FILL	1

/* do_poof */
#define SCMD_POOFIN	0
#define SCMD_POOFOUT	1

/* do_hit */
#define SCMD_HIT	0
#define SCMD_MURDER	1

/* do_eat */
#define SCMD_EAT	0
#define SCMD_TASTE	1
#define SCMD_DRINK	2
#define SCMD_SIP	3

/* do_use */
#define SCMD_USE	0
#define SCMD_QUAFF	1
#define SCMD_RECITE	2

/* do_echo */
#define SCMD_ECHO	0
#define SCMD_EMOTE	1

/* do_gen_door */
#define SCMD_OPEN       0
#define SCMD_CLOSE      1
#define SCMD_UNLOCK     2
#define SCMD_LOCK       3
#define SCMD_PICK       4

 /*. do_olc .*/
#define SCMD_OLC_REDIT  0
#define SCMD_OLC_OEDIT  1
#define SCMD_OLC_ZEDIT  2
#define SCMD_OLC_MEDIT  3
#define SCMD_OLC_SEDIT  4
#define SCMD_OLC_SAVEINFO  5
#define SCMD_OLC_HEDIT  6
#define SCMD_OLC_TRIGEDIT  7
#define SCMD_OLC_SDEDIT  8

/* do_spells */

#define SCMD_SPELLS  0
#define SCMD_SKILLS  1
@


1.60
log
@Add guard clause.
@
text
@/***************************************************************************
 * $Id: interpreter.h,v 1.59 2009/06/09 05:42:04 myc Exp myc $
 ***************************************************************************/
/***************************************************************************
 *   File: interpreter.h                                  Part of FieryMUD *
 *  Usage: header file: public procs, macro defs, subcommand defines       *
 *                                                                         *
 *  All rights reserved.  See license.doc for complete information.        *
 *                                                                         *
 *  FieryMUD Copyright (C) 1998, 1999, 2000 by the Fiery Consortium        *
 *  FieryMUD is based on CircleMUD Copyright (C) 1993, 94 by the Trustees  *
 *  of the Johns Hopkins University                                        *
 *  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
 ***************************************************************************/

#ifndef __FIERY_INTERPRETER_H
#define __FIERY_INTERPRETER_H

#define ACMD(name)  \
   void (name)(struct char_data *ch, char *argument, int cmd, int subcmd)

#define CMD_NAME (cmd_info[cmd].command)
#define CMD_IS(cmd_name) (!strcmp(cmd_name, cmd_info[cmd].command))
#define IS_MOVE(cmdnum) (cmdnum >= 1 && cmdnum <= 6)


void	command_interpreter(struct char_data *ch, char *argument);
void	list_similar_commands(struct char_data *ch, char *arg);
int	searchblock(char *arg, const char **list, bool exact);
int	search_block(const char *arg, const char **list, bool exact);
#define parse_direction(arg) (search_block(arg, dirs, FALSE))
char	lower( char c );
char	*one_argument(char *argument, char *first_arg);
char	*one_word(char *argument, char *first_arg);
char	*any_one_arg(char *argument, char *first_arg);
char	*two_arguments(char *argument, char *first_arg, char *second_arg);
char	*delimited_arg(char *argument, char *quoted_arg, char delimiter);
char	*delimited_arg_case(char *argument, char *quoted_arg, char delimiter);
char	*delimited_arg_all(char *argument, char *quoted_arg, char delimiter);
int	fill_word(char *argument);
void	half_chop(char *string, char *arg1, char *arg2);
void	nanny(struct descriptor_data *d, char *arg);
int	is_abbrev(const char *arg1, const char *arg2);
bool	is_integer(const char *str);
bool	is_positive_integer(const char *str);
bool	is_negative_integer(const char *str);
bool    is_number(const char *str);
int	find_command(char *command);
int	parse_command(char *command);
void	skip_slash(char **string);
void	skip_spaces(char **string);
char	*delete_doubledollar(char *string);

/* for compatibility with 2.20: */
#define argument_interpreter(a, b, c) two_arguments(a, b, c)


#define CMD_NONE	0
#define CMD_MEDITATE	(1 << 0)
#define CMD_MAJOR_PARA	(1 << 1)
#define CMD_MINOR_PARA	(1 << 2)
#define CMD_HIDE	(1 << 3)
#define CMD_BOUND	(1 << 4)
#define CMD_CAST	(1 << 5)
#define CMD_OLC		(1 << 6)
#define CMD_NOFIGHT (1 << 7)
#define CMD_ANY     ((1 << 8) - 1 - CMD_NOFIGHT)

struct command_info {
   char *command;
   byte minimum_position;
   byte minimum_stance;
   void	(*command_pointer)
   (struct char_data *ch, char * argument, int cmd, int subcmd);
   sh_int minimum_level;
   int	subcmd;
   long flags;
};

struct sort_struct {
  int sort_pos;
  byte is_social;
};

/* necessary for CMD_IS macro */
#ifndef __INTERPRETER_C__
extern struct command_info cmd_info[];
extern const char *command_flags[];
extern int num_of_cmds;
extern struct sort_struct *cmd_sort_info;
#endif

/* this is the new xnames structure --Gurlaek 6/9/1999 */
struct xname {
  /* the +3 is for the # \n and NULL chars */
  char name[MAX_NAME_LENGTH+3];
  struct xname *next;
};
#define NAME_TIMEOUT    1 * (30 RL_SEC) /* 5 minutes */

extern void free_alias(struct alias_data *alias);
extern void free_aliases(struct alias_data *alias_list);


#define ALIAS_SIMPLE	0
#define ALIAS_COMPLEX	1
#define ALIAS_NONE      -1

#define ALIAS_SEP_CHAR	';'
#define ALIAS_VAR_CHAR	'$'
#define ALIAS_GLOB_CHAR	'*'

/*
 * SUBCOMMANDS
 *   You can define these however you want to, and the definitions of the
 *   subcommands are independent from function to function.
 */

/* directions */
#define SCMD_STAY    0
#define SCMD_NORTH	1
#define SCMD_EAST	2
#define SCMD_SOUTH	3
#define SCMD_WEST	4
#define SCMD_UP		5
#define SCMD_DOWN	6

/* name approval */
#define SCMD_ACCEPT   0
#define SCMD_DECLINE  1
#define SCMD_LIST     2

/* Toggles */

/* These numbers are synchronized with a data structure that do_toggle()
 * uses.  So don't change them! */
#define SCMD_NOSUMMON    0
#define SCMD_NOHASSLE    1
#define SCMD_BRIEF       2
#define SCMD_COMPACT     3
#define SCMD_NOTELL      4
#define SCMD_AFK         5
#define SCMD_DEAF        6
#define SCMD_NOGOSSIP    7
#define SCMD_NOGRATZ     8
#define SCMD_NOWIZ       9
#define SCMD_QUEST      10
#define SCMD_ROOMFLAGS  11
#define SCMD_NOREPEAT   12
#define SCMD_HOLYLIGHT  13
#define SCMD_AUTOEXIT   14
#define SCMD_NOPETI     15
#define SCMD_NONAME     16
#define SCMD_ANON       17
#define SCMD_SHOWVNUMS  18
#define SCMD_WIMPY      19
#define SCMD_NICEAREA   20
#define SCMD_VICIOUS    21
#define SCMD_PASSIVE    22
#define SCMD_PAGELENGTH 23
#define SCMD_NO_FOLLOW  24
#define SCMD_ROOMVIS    25
#define SCMD_NOCLANCOMM 26
#define SCMD_OLCCOMM    27
#define SCMD_LINENUMS   28
#define SCMD_AUTOLOOT   29
#define SCMD_AUTOTREAS  30
#define SCMD_AUTOINVIS  31

/* do_wizutil */
#define SCMD_REROLL	0
#define SCMD_PARDON     1
#define SCMD_NOTITLE    2
#define SCMD_SQUELCH    3
#define SCMD_FREEZE	4
#define SCMD_THAW	5
#define SCMD_UNAFFECT	6

/* do_spec_com */
#define SCMD_WHISPER	0
#define SCMD_ASK	1

/* do_gen_com */
#define SCMD_HOLLER	0
#define SCMD_SHOUT	1
#define SCMD_GOSSIP	2
#define SCMD_AUCTION	3
#define SCMD_GRATZ	4

/* do_gen_ps */
#define SCMD_CLEAR      0
#define SCMD_VERSION    1
#define SCMD_WHOAMI     2

/* do_shutdown */
#define SCMD_SHUTDOW	0
#define SCMD_SHUTDOWN   1

/* do_quit */
#define SCMD_QUI	0
#define SCMD_QUIT	1

/* do_date */
#define SCMD_DATE	0
#define SCMD_UPTIME	1

/* do_commands */
#define SCMD_COMMANDS	0
#define SCMD_SOCIALS	1
#define SCMD_WIZHELP	2

/* do_drop */
#define SCMD_DROP    0  /* "drop" command was used */
#define SCMD_JUNK    1  /* "junk" command was used */
#define SCMD_LETDROP 2  /* Item is falling to the ground because someone tried
                           to give it to an insubstantial person */

/* do_gen_write */
#define SCMD_BUG    0
#define SCMD_TYPO   1
#define SCMD_IDEA   2
#define SCMD_NOTE   3

/* do_qcomm */
#define SCMD_QSAY	0
#define SCMD_QECHO	1

/* do_pour */
#define SCMD_POUR	0
#define SCMD_FILL	1

/* do_poof */
#define SCMD_POOFIN	0
#define SCMD_POOFOUT	1

/* do_hit */
#define SCMD_HIT	0
#define SCMD_MURDER	1

/* do_eat */
#define SCMD_EAT	0
#define SCMD_TASTE	1
#define SCMD_DRINK	2
#define SCMD_SIP	3

/* do_use */
#define SCMD_USE	0
#define SCMD_QUAFF	1
#define SCMD_RECITE	2

/* do_echo */
#define SCMD_ECHO	0
#define SCMD_EMOTE	1
#define SCMD_EMOTES	2

/* do_gen_door */
#define SCMD_OPEN       0
#define SCMD_CLOSE      1
#define SCMD_UNLOCK     2
#define SCMD_LOCK       3
#define SCMD_PICK       4

 /*. do_olc .*/
#define SCMD_OLC_REDIT  0
#define SCMD_OLC_OEDIT  1
#define SCMD_OLC_ZEDIT  2
#define SCMD_OLC_MEDIT  3
#define SCMD_OLC_SEDIT  4
#define SCMD_OLC_SAVEINFO  5
#define SCMD_OLC_HEDIT  6
#define SCMD_OLC_TRIGEDIT  7
#define SCMD_OLC_SDEDIT  8

/* do_light */
#define SCMD_LIGHT       0
#define SCMD_EXTINGUISH  1

/* do_follow */
#define SCMD_FOLLOW	0
#define SCMD_SHADOW	1

/* do_stat */
#define SCMD_STAT	0
#define SCMD_RSTAT	1
#define SCMD_SSTAT      2

/* do_vstat */
#define SCMD_VSTAT	0
#define SCMD_MSTAT	1
#define SCMD_OSTAT	2

/* do_estat */
#define SCMD_ESTAT   0
#define SCMD_OESTAT  1
#define SCMD_RESTAT  2

/* do_vsearch */
#define SCMD_VSEARCH	0
#define SCMD_VLIST	1
#define SCMD_VWEAR	2
#define SCMD_VITEM	3
#define SCMD_VNUM	4

/* do_report */
#define SCMD_REPORT	0
#define SCMD_GREPORT	1

/* do_cast */
#define SCMD_CAST	0
#define SCMD_CHANT	1
#define SCMD_SING	2

/* do_hitall */
#define SCMD_HITALL	0
#define SCMD_TANTRUM	1

/* do_bash */
#define SCMD_BASH	0
#define SCMD_BODYSLAM	1
#define SCMD_MAUL	2

/* do_roar */
#define SCMD_ROAR       0
#define SCMD_HOWL       1

#endif

/***************************************************************************
 * $Log: interpreter.h,v $
 * Revision 1.59  2009/06/09 05:42:04  myc
 * Renamed NOCTELL to NOCLANCOMM.
 *
 * Revision 1.58  2009/03/20 23:02:59  myc
 * Move text file handling routines into text.c
 *
 * Revision 1.57  2009/03/09 20:36:00  myc
 * Removed SCMD_DONATE subcommand.
 *
 * Revision 1.56  2009/03/09 02:22:32  myc
 * Added edit command.  Modified is_number to allow leading spaces.
 *
 * Revision 1.55  2009/03/07 11:12:05  jps
 * Separated the read command from the look command.
 *
 * Revision 1.54  2009/02/11 17:03:39  myc
 * Adding delimited_arg_case, which is exactly like delimited_arg,
 * but it doesn't make everything lower case.  (There's got to be
 * a better way to do this.)
 *
 * Revision 1.53  2009/01/18 06:58:53  myc
 * Adding "emote's" command so you can emote stuff like
 * "Laoris's arms are tired."
 *
 * Revision 1.52  2008/09/28 19:06:32  jps
 * Change SCMD_NOTES to SCMD_NOTE.
 *
 * Revision 1.51  2008/08/23 21:36:22  myc
 * Make parse_direction use search_block instead of searchblock so
 * it's case-insensitive.
 *
 * Revision 1.50  2008/08/17 20:16:00  jps
 * Added macro for parse_direction
 *
 * Revision 1.49  2008/08/14 23:10:35  myc
 * Made one of the arguments to search_block const.
 *
 * Revision 1.48  2008/07/15 18:53:39  myc
 * Added an array of strings for command flags.
 *
 * Revision 1.47  2008/07/15 17:59:03  myc
 * Added parse_command and list_similar_commands.
 *
 * Revision 1.46  2008/05/19 06:53:04  jps
 * Got rid of fup and fdown commands.
 *
 * Revision 1.45  2008/05/09 22:04:33  jps
 * Add delimited_arg_all(), which is like delimited_arg() except that
 * when there's no delimiter, it will return everything as the arg
 * (not just the first word).
 *
 * Revision 1.44  2008/04/13 00:57:21  jps
 * Added an auto-treasure loot pref.
 *
 * Revision 1.43  2008/04/07 04:31:42  jps
 * Add CMD_NOFIGHT to mark commands that shouldn't be available to
 * fighting characters..
 *
 * Revision 1.42  2008/04/07 03:02:54  jps
 * Changed the POS/STANCE system so that POS reflects the position
 * of your body, while STANCE describes your condition or activity.
 *
 * Revision 1.41  2008/04/06 19:45:21  jps
 * Add another drop subcommand so you can use the drop code for object
 * that fall accidentally when you give them to a fluid person.
 *
 * Revision 1.40  2008/04/04 06:12:52  myc
 * is_number should point to is_positive_integer
 *
 * Revision 1.39  2008/04/03 17:33:34  jps
 * Added a toggle for autoinvis.
 *
 * Revision 1.38  2008/04/02 03:24:44  myc
 * Rewrote group code and removed major group code.
 *
 * Revision 1.37  2008/03/10 18:01:17  myc
 * Made bodyslam and maul subcommands of bash.  Made tantrum a subcommand
 * of hitall.  Made battle howl a subcommand of roar.  Added ground
 * shaker command as stomp.
 *
 * Revision 1.36  2008/03/09 18:15:17  jps
 * Added a movement subcommand of 'stay', which is most useful when
 * misdirecting your movements.
 *
 * Revision 1.35  2008/03/05 03:03:54  myc
 * Exporting free_alias and free_aliases.
 *
 * Revision 1.34  2008/02/24 17:31:13  myc
 * You can now execute certain actions by preceding them with a ~
 * in OLC if the command is marked CMD_OLC (or CMD_ANY).
 *
 * Revision 1.33  2008/02/16 20:31:32  myc
 * Moving command sorting code here from act.informative.c.
 *
 * Revision 1.32  2008/02/02 19:38:20  myc
 * Moved HUH and NOONE from here to config.c
 *
 * Revision 1.31  2008/01/29 21:02:31  myc
 * Removing a lot of extern declarations from code files and moving
 * them to header files, mostly db.h and constants.h.
 *
 * Revision 1.30  2008/01/17 01:29:10  myc
 * Replaced is_number with is_integer, is_positive_integer, and
 * is_negative_integer.  is_number is now a macro aliased to
 * is_positive_integer.
 *
 * Revision 1.29  2007/12/19 20:52:57  myc
 * Added a const modifier to is_number.  Added HUH and NOONE
 * macro constants.  Renamed the CLOAKED toggle to ROOMVIS.
 *
 * Revision 1.28  2007/10/23 20:21:00  myc
 * Slightly redesigned the master command list, replacing the six boolean
 * variables on each line with a single bitvector.  Also replaced all of
 * the compiler ifdef checks with administration levels defined in
 * structs.h.
 *
 * Revision 1.27  2007/10/17 17:18:04  myc
 * Renamed the search_block and search_block2 functions.
 * searchblock is now case sensitive, and search_block is not.
 *
 * Revision 1.26  2007/10/11 20:14:48  myc
 * Chant command is now a subcommand of do_cast.  Songs command moved
 * to act.informative.c.
 *
 * Revision 1.25  2007/10/02 02:52:27  myc
 * Report command now has subcommands for greport and mreport.
 *
 * Revision 1.24  2007/09/28 20:49:35  myc
 * The vnum, mnum, onum, rnum, tnum, mlist, olist, rlist, tlist, slist,
 * vwear, and vitem commands now use the vsearch command suite, which is
 * now also available through the vsearch, vfind, osearch, ofind, msearch,
 * mfind, tsearch, tfind, ssearch, sfind, rsearch, rfind, and vlist
 * commands.
 * Added a delimited_arg() function (actually just renamed one_word) that
 * lets you return multi-word arguments surrounded by a given character,
 * such as a quote.  This is useful for spell casting, for example.
 *
 * Revision 1.23  2007/09/20 21:20:43  myc
 * Added cloaked toggle.
 *
 * Revision 1.22  2007/09/11 16:34:24  myc
 * Added claw, electrify, and peck skills.
 * Changed is_abbrev to accept const strings.
 *
 * Revision 1.21  2007/08/26 08:49:36  jps
 * Added commands estat, oestat, and restat, for viewing extra
 * descriptions on objects and rooms.
 *
 * Revision 1.20  2007/08/24 22:10:21  jps
 * Add sstat (shop stat) as a subcommand of stat.
 *
 * Revision 1.19  2007/08/24 17:01:36  myc
 * Adding ostat and mstat commands as shorthand for vstat, rstat for stat
 * room, and mnum and onum for vnum.  Also adding rnum and znum with new
 * functionality.
 *
 * Revision 1.18  2007/08/14 22:43:07  myc
 * Adding shadow as subcommand of follow.
 *
 * Revision 1.17  2007/07/19 15:32:01  jps
 * Add "extinguish" as a subcommand of light.
 *
 * Revision 1.16  2005/07/26 05:38:13  jwk
 * Added void skip_slash(char **string);
 *
 * Revision 1.15  2003/07/29 03:49:05  jjl
 * Reordered an extern definition, to remove compile warnings.
 *
 * Revision 1.14  2003/06/23 01:47:09  jjl
 * Added a NOFOLLOW flag, and the "note" command, and show notes <player>
 *
 * Revision 1.13  2002/09/13 02:32:10  jjl
 * Updated header comments
 *
 * Revision 1.12  2000/11/22 19:29:30  rsd
 * Altered comment header and added back rlog messages from
 * prior to the addition of the $log$ string.
 *
 * Revision 1.11  2000/02/22 00:50:23  rsd
 * Changed the time out on name approval to 30 seconds.
 *
 * Revision 1.10  1999/09/05 07:00:39  jimmy
 * Added RCS Log and Id strings to each source file
 *
 * Revision 1.9  1999/07/23 01:54:15  mud
 * Removed ooc and slowns form the define list for do gen toggle
 * SCMD_OOC and SCMD_SLOWNS were removed and the other SCMD's
 * for do gen toggle were renumbered accordingly.
 *
 * Revision 1.8  1999/06/10 16:56:28  mud
 * 
 *
 * Revision 1.7  1999/05/04 17:19:33  dce
 * Name accept system...version one...original code by Fingh, fixed up to work
 * by Zantir.
 *
 * Revision 1.6  1999/03/26 19:44:35  jen
 * Added a mortal gossip channel with 103+ godly control
 *
 * Revision 1.5  1999/02/10 05:57:14  jimmy
 * Added long description to player file.  Added AFK toggle.
 * removed NOAUCTION toggle.
 * fingon 
 *
 * Revision 1.4  1999/02/06 00:40:36  jimmy
 * Major change to incorporate aliases into the pfile
 * moved alias structure from interpreter.h to structs.h
 * heavily modified alias code in interpreter.c
 * Jimmy Kincaid AKA fingon
 *
 * Revision 1.3  1999/02/01 08:16:30  jimmy
 * improved build counter
 *
 * Revision 1.2  1999/02/01 04:10:48  jimmy
 * Added buildcounter to GREETING --Fingon
 *
 * Revision 1.1  1999/01/29 01:23:31  mud
 * Initial revision
 *
 ***************************************************************************/
@


1.59
log
@Renamed NOCTELL to NOCLANCOMM.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.58 2009/03/20 23:02:59 myc Exp myc $
d16 3
d326 2
d330 3
@


1.58
log
@Move text file handling routines into text.c
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.57 2009/03/09 20:36:00 myc Exp myc $
d160 1
a160 1
#define SCMD_NOCTELL    26
d325 3
@


1.57
log
@Removed SCMD_DONATE subcommand.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.56 2009/03/09 02:22:32 myc Exp myc $
a128 14
/* do_gen_ps */
#define SCMD_INFO       0
#define SCMD_HANDBOOK   1
#define SCMD_CREDITS    2
#define SCMD_NEWS       3
#define SCMD_WIZLIST    4
#define SCMD_POLICIES   5
#define SCMD_VERSION    6
#define SCMD_IMMLIST    7
#define SCMD_MOTD	8
#define SCMD_IMOTD	9
#define SCMD_CLEAR	10
#define SCMD_WHOAMI	11
#define SCMD_ANEWS  12
d187 5
d325 3
@


1.56
log
@Added edit command.  Modified is_number to allow leading spaces.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.55 2009/03/07 11:12:05 jps Exp myc $
d221 1
a221 2
#define SCMD_DONATE  2  /* "donate" command was used */
#define SCMD_LETDROP 3  /* Item is falling to the ground because someone tried
d334 3
@


1.55
log
@Separated the read command from the look command.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.54 2009/02/11 17:03:39 myc Exp jps $
d44 1
a44 2
/* most places using is_number rely on no negative integers */
#define is_number(str)   is_positive_integer(str)
d335 3
@


1.54
log
@Adding delimited_arg_case, which is exactly like delimited_arg,
but it doesn't make everything lower case.  (There's got to be
a better way to do this.)
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.53 2009/01/18 06:58:53 myc Exp myc $
a231 4
/* do_look */
#define SCMD_LOOK	0
#define SCMD_READ	1

d336 5
@


1.53
log
@Adding "emote's" command so you can emote stuff like
"Laoris's arms are tired."
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.52 2008/09/28 19:06:32 jps Exp myc $
d35 1
d340 4
@


1.52
log
@Change SCMD_NOTES to SCMD_NOTE.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.51 2008/08/23 21:36:22 myc Exp jps $
d265 1
d339 3
@


1.51
log
@Make parse_direction use search_block instead of searchblock so
it's case-insensitive.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.50 2008/08/17 20:16:00 jps Exp myc $
d226 4
a229 4
#define SCMD_BUG	0
#define SCMD_TYPO	1
#define SCMD_IDEA	2
#define SCMD_NOTES      3
d338 4
@


1.50
log
@Added macro for parse_direction
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.49 2008/08/14 23:10:35 myc Exp jps $
a26 1
#define parse_direction(arg) (searchblock(arg, dirs, FALSE))
d28 1
d338 3
@


1.49
log
@Made one of the arguments to search_block const.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.48 2008/07/15 18:53:39 myc Exp myc $
d27 1
d338 3
@


1.48
log
@Added an array of strings for command flags.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.47 2008/07/15 17:59:03 myc Exp myc $
d27 1
a27 1
int	search_block(char *arg, const char **list, bool exact);
d337 3
@


1.47
log
@Added parse_command and list_similar_commands.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.46 2008/05/19 06:53:04 jps Exp myc $
d84 1
a84 1

d337 3
@


1.46
log
@Got rid of fup and fdown commands.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.45 2008/05/09 22:04:33 jps Exp jps $
d25 1
d45 1
d337 3
@


1.45
log
@Add delimited_arg_all(), which is like delimited_arg() except that
when there's no delimiter, it will return everything as the arg
(not just the first word).
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.44 2008/04/13 00:57:21 jps Exp jps $
a120 2
#define SCMD_FUP    7
#define SCMD_FDOWN  8
d335 5
@


1.44
log
@Added an auto-treasure loot pref.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.43 2008/04/07 04:31:42 jps Exp jps $
d33 1
d337 3
@


1.43
log
@Add CMD_NOFIGHT to mark commands that shouldn't be available to
fighting characters..
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.42 2008/04/07 03:02:54 jps Exp jps $
d176 2
a177 1
#define SCMD_AUTOINVIS  30
d336 4
@


1.42
log
@Changed the POS/STANCE system so that POS reflects the position
of your body, while STANCE describes your condition or activity.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.41 2008/04/06 19:45:21 jps Exp jps $
d59 2
a60 1
#define CMD_ANY		((1 << 7) - 1)
d335 4
@


1.41
log
@Add another drop subcommand so you can use the drop code for object
that fall accidentally when you give them to a fluid person.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.40 2008/04/04 06:12:52 myc Exp jps $
d64 1
d334 4
@


1.40
log
@is_number should point to is_positive_integer
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.39 2008/04/03 17:33:34 jps Exp myc $
d214 5
a218 3
#define SCMD_DROP	0
#define SCMD_JUNK	1
#define SCMD_DONATE	2
d333 3
@


1.39
log
@Added a toggle for autoinvis.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.38 2008/04/02 03:24:44 myc Exp jps $
d40 2
a41 1
#define is_number(str)   is_integer(str)
d331 3
@


1.38
log
@Rewrote group code and removed major group code.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.37 2008/03/10 18:01:17 myc Exp myc $
d138 20
a157 16
/* do_gen_tog */
#define SCMD_NOSUMMON   0
#define SCMD_NOHASSLE   1
#define SCMD_BRIEF      2
#define SCMD_COMPACT    3
#define SCMD_NOTELL	4
#define SCMD_AFK	5
#define SCMD_DEAF	6
#define SCMD_NOGOSSIP	7
#define SCMD_NOGRATZ	8
#define SCMD_NOWIZ	9
#define SCMD_QUEST	10
#define SCMD_ROOMFLAGS	11
#define SCMD_NOREPEAT	12
#define SCMD_HOLYLIGHT	13
#define SCMD_AUTOEXIT	14
d160 4
a163 4
#define SCMD_ANON	17
#define SCMD_SHOWVNUMS	18
#define SCMD_WIMPY	19
#define SCMD_NICEAREA	20
d165 1
a165 1
#define SCMD_PASSIVE	22
d171 3
d330 3
@


1.37
log
@Made bodyslam and maul subcommands of bash.  Made tantrum a subcommand
of hitall.  Made battle howl a subcommand of roar.  Added ground
shaker command as stomp.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.36 2008/03/09 18:15:17 jps Exp myc $
a301 1
#define SCMD_MREPORT	2
d323 5
@


1.36
log
@Added a movement subcommand of 'stay', which is most useful when
misdirecting your movements.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.35 2008/03/05 03:03:54 myc Exp jps $
d280 1
a280 1
#define SCMD_SSTAT   2
d309 13
d324 4
@


1.35
log
@Exporting free_alias and free_aliases.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.34 2008/02/24 17:31:13 myc Exp myc $
d110 1
d126 1
a126 1
#define SCMD_HANDBOOK   1 
d311 3
@


1.34
log
@You can now execute certain actions by preceding them with a ~
in OLC if the command is marked CMD_OLC (or CMD_ANY).
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.33 2008/02/16 20:31:32 myc Exp myc $
d91 4
d310 4
@


1.33
log
@Moving command sorting code here from act.informative.c.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.32 2008/02/02 19:38:20 myc Exp myc $
d57 2
a58 1
#define CMD_ANY		((1 << 6) - 1)
d160 2
d306 3
@


1.32
log
@Moved HUH and NOONE from here to config.c
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.31 2008/01/29 21:02:31 myc Exp myc $
d69 5
d77 3
d303 3
@


1.31
log
@Removing a lot of extern declarations from code files and moving
them to header files, mostly db.h and constants.h.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.30 2008/01/17 01:29:10 myc Exp myc $
a73 5
/* Common command responses */
#define HUH	"Huh?!?\r\n"
#define NOONE	"There is no one by that name.\r\n"


d295 4
@


1.30
log
@Replaced is_number with is_integer, is_positive_integer, and
is_negative_integer.  is_number is now a macro aliased to
is_positive_integer.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.29 2007/12/19 20:52:57 myc Exp myc $
d25 2
a26 2
int	searchblock(char *arg, char **list, bool exact);
int	search_block(char *arg, char **list, bool exact);
d300 5
@


1.29
log
@Added a const modifier to is_number.  Added HUH and NOONE
macro constants.  Renamed the CLOAKED toggle to ROOMVIS.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.28 2007/10/23 20:21:00 myc Exp myc $
d37 4
a40 1
int	is_number(const char *str);
d300 4
@


1.28
log
@Slightly redesigned the master command list, replacing the six boolean
variables on each line with a single bitvector.  Also replaced all of
the compiler ifdef checks with administration levels defined in
structs.h.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.27 2007/10/17 17:18:04 myc Exp myc $
d37 1
a37 1
int	is_number(char *str);
d71 4
d152 1
a152 1
#define SCMD_CLOAKED    25
d297 6
@


1.27
log
@Renamed the search_block and search_block2 functions.
searchblock is now case sensitive, and search_block is not.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.26 2007/10/11 20:14:48 myc Exp myc $
d47 9
d63 1
a63 6
   int meditate;
   int major_p;
   int minor_p;
   int hide;
   int bound;
   int cast;
d293 4
@


1.26
log
@Chant command is now a subcommand of do_cast.  Songs command moved
to act.informative.c.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.25 2007/10/02 02:52:27 myc Exp myc $
d25 1
a26 1
int	search_block2(char *arg, char **list, bool exact);
d289 4
@


1.25
log
@Report command now has subcommands for greport and mreport.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.24 2007/09/28 20:49:35 myc Exp myc $
a246 5
/* do_spells */

#define SCMD_SPELLS  0
#define SCMD_SKILLS  1

d282 5
d289 3
@


1.24
log
@The vnum, mnum, onum, rnum, tnum, mlist, olist, rlist, tlist, slist,
vwear, and vitem commands now use the vsearch command suite, which is
now also available through the vsearch, vfind, osearch, ofind, msearch,
mfind, tsearch, tfind, ssearch, sfind, rsearch, rfind, and vlist
commands.
Added a delimited_arg() function (actually just renamed one_word) that
lets you return multi-word arguments surrounded by a given character,
such as a quote.  This is useful for spell casting, for example.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.23 2007/09/20 21:20:43 myc Exp myc $
d282 5
d289 10
@


1.23
log
@Added cloaked toggle.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.22 2007/09/11 16:34:24 myc Exp myc $
d26 1
d32 1
d275 6
d284 3
@


1.22
log
@Added claw, electrify, and peck skills.
Changed is_abbrev to accept const strings.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.21 2007/08/26 08:49:36 jps Exp myc $
d141 2
a142 1
#define SCMD_NO_FOLLOW 24
d276 4
@


1.21
log
@Added commands estat, oestat, and restat, for viewing extra
descriptions on objects and rooms.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.20 2007/08/24 22:10:21 jps Exp jps $
d34 1
a34 1
int	is_abbrev(char *arg1, char *arg2);
d275 4
@


1.20
log
@Add sstat (shop stat) as a subcommand of stat.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.19 2007/08/24 17:01:36 myc Exp jps $
d267 6
d275 3
@


1.19
log
@Adding ostat and mstat commands as shorthand for vstat, rstat for stat
room, and mnum and onum for vnum.  Also adding rnum and znum with new
functionality.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.18 2007/08/14 22:43:07 myc Exp myc $
d260 1
d269 5
@


1.18
log
@Adding shadow as subcommand of follow.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.17 2007/07/19 15:32:01 jps Exp myc $
d257 9
d268 3
@


1.17
log
@Add "extinguish" as a subcommand of light.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.16 2005/07/26 05:38:13 jwk Exp jps $
d253 4
d259 3
@


1.16
log
@Added void skip_slash(char **string);
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.15 2003/07/29 03:49:05 jjl Exp $
d249 4
d255 3
@


1.15
log
@Reordered an extern definition, to remove compile warnings.
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.14 2003/06/23 01:47:09 jjl Exp $
d37 1
d251 3
@


1.14
log
@Added a NOFOLLOW flag, and the "note" command, and show notes <player>
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.13 2002/09/13 02:32:10 jjl Exp $
a22 5
/* necessary for CMD_IS macro */
#ifndef __INTERPRETER_C__
extern struct command_info cmd_info[];
#endif

d59 6
d250 3
@


1.13
log
@Updated header comments
@
text
@d2 1
a2 1
 * $Id: interpreter.h,v 1.12 2000/11/22 19:29:30 rsd Exp $
d139 1
a139 1
#define SCMD_NAME_BROADCAST 24
d187 1
d249 3
@


1.12
log
@Altered comment header and added back rlog messages from
prior to the addition of the $log$ string.
@
text
@d1 3
a3 1
// $Id: interpreter.h,v 1.11 2000/02/22 00:50:23 rsd Exp $
d246 48
a293 42
// $Log: interpreter.h,v $
// Revision 1.11  2000/02/22 00:50:23  rsd
// Changed the time out on name approval to 30 seconds.
//
// Revision 1.10  1999/09/05 07:00:39  jimmy
// Added RCS Log and Id strings to each source file
//
// Revision 1.9  1999/07/23 01:54:15  mud
// Removed ooc and slowns form the define list for do gen toggle
// SCMD_OOC and SCMD_SLOWNS were removed and the other SCMD's
// for do gen toggle were renumbered accordingly.
//
// Revision 1.8  1999/06/10 16:56:28  mud
// 
//
// Revision 1.7  1999/05/04 17:19:33  dce
// Name accept system...version one...original code by Fingh, fixed up to work
// by Zantir.
//
// Revision 1.6  1999/03/26 19:44:35  jen
// Added a mortal gossip channel with 103+ godly control
//
// Revision 1.5  1999/02/10 05:57:14  jimmy
// Added long description to player file.  Added AFK toggle.
// removed NOAUCTION toggle.
// fingon 
//
// Revision 1.4  1999/02/06 00:40:36  jimmy
// Major change to incorporate aliases into the pfile
// moved alias structure from interpreter.h to structs.h
// heavily modified alias code in interpreter.c
// Jimmy Kincaid AKA fingon
//
// Revision 1.3  1999/02/01 08:16:30  jimmy
// improved build counter
//
// Revision 1.2  1999/02/01 04:10:48  jimmy
// Added buildcounter to GREETING --Fingon
//
// Revision 1.1  1999/01/29 01:23:31  mud
// Initial revision
//
@


1.11
log
@Changed the time out on name approval to 30 seconds.
@
text
@d1 12
a12 10
// $Id: interpreter.h,v 1.10 1999/09/05 07:00:39 jimmy Exp $
/* ************************************************************************
*   File: interpreter.h                                 Part of CircleMUD *
*  Usage: header file: public procs, macro defs, subcommand defines       *
*                                                                         *
*  All rights reserved.  See license.doc for complete information.        *
*                                                                         *
*  Copyright (C) 1993, 94 by the Trustees of the Johns Hopkins University *
*  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
************************************************************************ */
d243 1
d245 3
d250 35
@


1.10
log
@Added RCS Log and Id strings to each source file
@
text
@d1 1
a1 1
// $Id$
d66 1
a66 1
#define NAME_TIMEOUT    5 * (60 RL_SEC) /* 5 minutes */
d241 4
a244 1
// $Log$
@


1.9
log
@Removed ooc and slowns form the define list for do gen toggle
SCMD_OOC and SCMD_SLOWNS were removed and the other SCMD's
for do gen toggle were renumbered accordingly.
@
text
@d1 1
d241 1
@


1.8
log
@This is a mass check in after a code freeze due to an upgrade to RedHat 6.0.  This fixes all of the warnings associated
with the new compiler and libraries.  Many many curly braces had to be added to "if" statements to clarify
their behavior to the compiler.  The name approval code was also debugged, and tested to be stable.  The xnames
list was converted from an array to a linked list to allow for on the fly adding of names to the xnames list.
This code compiles fine under both gcc RH5.2 and egcs RH6.0.
--Gurlaek 6/10/1999
@
text
@d124 11
a134 13
#define SCMD_SLOWNS	    14
#define SCMD_AUTOEXIT	15
#define SCMD_NOPETI     16
#define SCMD_NONAME     17
#define SCMD_ANON		18
#define SCMD_SHOWVNUMS	19
#define SCMD_WIMPY		20
#define SCMD_NICEAREA	21
#define SCMD_VICIOUS    22
#define SCMD_PASSIVE	23
#define SCMD_PAGELENGTH 24
#define SCMD_OOC	25
#define SCMD_NAME_BROADCAST 26
@


1.7
log
@Name accept system...version one...original code by Fingh, fixed up to work
by Zantir.
@
text
@d59 8
@


1.6
log
@Added a mortal gossip channel with 103+ godly control
@
text
@d83 4
a126 1

d128 1
@


1.5
log
@Added long description to player file.  Added AFK toggle.
removed NOAUCTION toggle.
fingon
@
text
@d124 2
@


1.4
log
@Major change to incorporate aliases into the pfile
moved alias structure from interpreter.h to structs.h
heavily modified alias code in interpreter.c
Jimmy Kincaid AKA fingon
@
text
@d103 1
a103 1
#define SCMD_NOAUCTION	5
d123 1
@


1.3
log
@improved build counter
@
text
@a58 7
struct alias {
  char *alias;
  char *replacement;
  int type;
  struct alias *next;
};

d61 1
@


1.2
log
@Added buildcounter to GREETING --Fingon
@
text
@a10 2
#define MAKE_COUNT "../log/make_count"

@


1.1
log
@Initial revision
@
text
@d11 2
@
